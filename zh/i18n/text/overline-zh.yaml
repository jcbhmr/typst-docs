route: /docs/reference/text/overline/
title: 上划线
description: '`overline` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-stroke
    name: stroke
    children: []
  - id: parameters-offset
    name: offset
    children: []
  - id: parameters-extent
    name: extent
    children: []
  - id: parameters-evade
    name: evade
    children: []
  - id: parameters-background
    name: background
    children: []
  - id: parameters-body
    name: body
    children: []
body:
  kind: func
  content:
    path: []
    name: overline
    title: Overline
    keywords: []
    oneliner: Adds a line over text.
    element: true
    details: |-
      <p>在文本上添加上划线。</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">[</span>A line over text.<span class="typ-punct">]</span>
      </code></pre><div class="preview"><img src="/assets/docs/c3bb5d5987203353af84bd6015985b33.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: stroke
      details: |-
        <p>如何绘制线条。</p>
        <p>详细内容参见 <a href="/docs/reference/visualize/line/#parameters-stroke">line 的文档</a>  如果设为 <code><span class="typ-key">auto</span></code>， 则采用文本颜色和当前字体定义的粗细。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> olive<span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>
          stroke<span class="typ-punct">:</span> green<span class="typ-punct">.</span><span class="typ-func">darken</span><span class="typ-punct">(</span><span class="typ-num">20%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">12pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>The Forest Theme<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/b442afeb9bcb3485a3c83c6314fbe43b.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - length
      - color
      - gradient
      - stroke
      - pattern
      - dictionary
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: offset
      details: |-
        <p>上划线相对于基准线的位置。如果设为 <code><span class="typ-key">auto</span></code>，则从字体表中读取。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">1.2em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
          The Tale Of A Faraway Line II
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/fb6e6eb234e96be90d4a146a5a294850.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - length
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: extent
      details: |-
        <p>超出文本长度的量（如果设为负数则缩短）。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">overline</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">underline</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span><span class="typ-func">underline</span><span class="typ-punct">[</span>Typography Today<span class="typ-punct">]</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/4c71e5ec1fad3b893f363364760f7fd8.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: evade
      details: |-
        <p>是否跳过与字形冲突的部分。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>
          evade<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">,</span>
          offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">7.5pt</span><span class="typ-punct">,</span>
          stroke<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
          extent<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Temple<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/f38c2082e229847da24e2843eb5c81c6.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: background
      details: <p>上划线是否位于内容后面。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">overline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>thickness<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span> paint<span class="typ-punct">:</span> maroon<span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is stylized.<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is partially hidden.<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/8edac6f44c7e167475f59817292c848e.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: body
      details: <p>要添加上划线的内容。</p>
      example: null
      types:
      - content
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - content
    scope: []
children: []
