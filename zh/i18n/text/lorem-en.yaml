route: /docs/reference/text/lorem/
title: Lorem
description: '`lorem` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-words
    name: words
    children: []
body:
  kind: func
  content:
    path: []
    name: lorem
    title: Lorem
    keywords:
    - Blind Text
    oneliner: Creates blind text.
    element: false
    details: |-
      <p>Creates blind text.</p>
      <p>This function yields a Latin-like <em>Lorem Ipsum</em> blind text with the given
      number of words. The sequence of words generated by the function is always
      the same but randomly chosen. As usual for blind texts, it does not make any
      sense. Use it as a placeholder to try layouts.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-heading">= Blind Text</span>
      <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>

      <span class="typ-heading">= More Blind Text</span>
      <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/cd2e88b299efda4524fc9763879d1ff1.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: words
      details: <p>The length of the blind text in words.</p>
      example: null
      types:
      - int
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - str
    scope: []
children: []
