route: /docs/reference/text/text/
title: Text
description: '`text` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-font
    name: font
    children: []
  - id: parameters-fallback
    name: fallback
    children: []
  - id: parameters-style
    name: style
    children: []
  - id: parameters-weight
    name: weight
    children: []
  - id: parameters-stretch
    name: stretch
    children: []
  - id: parameters-size
    name: size
    children: []
  - id: parameters-fill
    name: fill
    children: []
  - id: parameters-tracking
    name: tracking
    children: []
  - id: parameters-spacing
    name: spacing
    children: []
  - id: parameters-cjk-latin-spacing
    name: cjk-latin-spacing
    children: []
  - id: parameters-baseline
    name: baseline
    children: []
  - id: parameters-overhang
    name: overhang
    children: []
  - id: parameters-top-edge
    name: top-edge
    children: []
  - id: parameters-bottom-edge
    name: bottom-edge
    children: []
  - id: parameters-lang
    name: lang
    children: []
  - id: parameters-region
    name: region
    children: []
  - id: parameters-script
    name: script
    children: []
  - id: parameters-dir
    name: dir
    children: []
  - id: parameters-hyphenate
    name: hyphenate
    children: []
  - id: parameters-kerning
    name: kerning
    children: []
  - id: parameters-alternates
    name: alternates
    children: []
  - id: parameters-stylistic-set
    name: stylistic-set
    children: []
  - id: parameters-ligatures
    name: ligatures
    children: []
  - id: parameters-discretionary-ligatures
    name: discretionary-ligatures
    children: []
  - id: parameters-historical-ligatures
    name: historical-ligatures
    children: []
  - id: parameters-number-type
    name: number-type
    children: []
  - id: parameters-number-width
    name: number-width
    children: []
  - id: parameters-slashed-zero
    name: slashed-zero
    children: []
  - id: parameters-fractions
    name: fractions
    children: []
  - id: parameters-features
    name: features
    children: []
  - id: parameters-body
    name: body
    children: []
  - id: parameters-text
    name: text
    children: []
body:
  kind: func
  content:
    path: []
    name: text
    title: Text
    keywords: []
    oneliner: Customizes the look and layout of text in a variety of ways.
    element: true
    details: |-
      <p>Customizes the look and layout of text in a variety of ways.</p>
      <p>This function is used frequently, both with set rules and directly. While
      the set rule is often the simpler choice, calling the <code>text</code> function
      directly can be useful when passing text as an argument to another function.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">)</span>
      With a set rule.

      <span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">(</span><span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span><span class="typ-punct">[</span>
        With a function call.
      <span class="typ-punct">]</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/1798620674b9dbb4c11ebe7e32fe87c8.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: font
      details: |-
        <p>A font family name or priority list of font family names.</p>
        <p>When processing text, Typst tries all specified font families in order
        until it finds a font that has the necessary glyphs. In the example
        below, the font <code>Inria Serif</code> is preferred, but since it does not
        contain Arabic glyphs, the arabic text uses <code>Noto Sans Arabic</code> instead.</p>
        <p>The collection of available fonts differs by platform:</p>
        <ul>
        <li>
        <p>In the web app, you can see the list of available fonts by clicking on
        the &quot;Ag&quot; button. You can provide additional fonts by uploading <code>.ttf</code>
        or <code>.otf</code> files into your project. They will be discovered
        automatically.</p>
        </li>
        <li>
        <p>Locally, Typst uses your installed system fonts. In addition, you can
        use the <code>--font-path</code> argument or <code>TYPST_FONT_PATHS</code> environment
        variable to add directories that should be scanned for fonts.</p>
        </li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;PT Sans&quot;</span><span class="typ-punct">)</span>
        This is sans-serif.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-punct">(</span>
          <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">,</span>
          <span class="typ-str">&quot;Noto Sans Arabic&quot;</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>

        This is Latin. <span class="typ-escape">\</span>
        هذا عربي.
        </code></pre><div class="preview"><img src="/assets/docs/e8afd3143accf1cba02aee7fd27169c1.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-str">&quot;linux libertine&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fallback
      details: |-
        <p>Whether to allow last resort font fallback when the primary font list
        contains no match. This lets Typst search through all available fonts
        for the most similar one that has the necessary glyphs.</p>
        <p><em>Note:</em> Currently, there are no warnings when fallback is disabled and
        no glyphs are found. Instead, your text shows up in the form of &quot;tofus&quot;:
        Small boxes that indicate the lack of an appropriate glyph. In the
        future, you will be able to instruct Typst to issue warnings so you know
        something is up.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
        هذا عربي

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fallback<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        هذا عربي
        </code></pre><div class="preview"><img src="/assets/docs/bf03aa462d7c10c93185026e8b709e3b.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: style
      details: |-
        <p>The desired font style.</p>
        <p>When an italic style is requested and only an oblique one is available,
        it is used. Similarly, the other way around, an italic style can stand
        in for an oblique one.  When neither an italic nor an oblique style is
        available, Typst selects the normal style. Since most fonts are only
        available either in an italic or oblique style, the difference between
        italic and oblique style is rarely observable.</p>
        <p>If you want to emphasize your text, you should do so using the
        <a href="/docs/reference/model/emph/">emph</a> function instead. This makes it easy to adapt the style
        later if you change your mind about how to signify the emphasis.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Linux Libertine&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;italic&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Italic<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;DejaVu Sans&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;oblique&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Oblique<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/50f6c17278b2799fc7207e00ab68d482.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      strings:
      - string: normal
        details: <p>The default, typically upright style.</p>
      - string: italic
        details: <p>A cursive style with custom letterform.</p>
      - string: oblique
        details: <p>Just a slanted version of the normal style.</p>
      default: <code><span class="typ-str">&quot;normal&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: weight
      details: |-
        <p>The desired thickness of the font's glyphs. Accepts an integer between
        <code><span class="typ-num">100</span></code> and <code><span class="typ-num">900</span></code> or one of the predefined weight names. When the
        desired weight is not available, Typst selects the font from the family
        that is closest in weight.</p>
        <p>If you want to strongly emphasize your text, you should do so using the
        <a href="/docs/reference/model/strong/">strong</a> function instead. This makes it easy to adapt the
        style later if you change your mind about how to signify the strong
        emphasis.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;light&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Light<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Regular<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;medium&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-num">500</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Bold<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/01e654fdb2266c6084f521d21e12510d.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - int
      - str
      strings:
      - string: thin
        details: <p>Thin weight (100).</p>
      - string: extralight
        details: <p>Extra light weight (200).</p>
      - string: light
        details: <p>Light weight (300).</p>
      - string: regular
        details: <p>Regular weight (400).</p>
      - string: medium
        details: <p>Medium weight (500).</p>
      - string: semibold
        details: <p>Semibold weight (600).</p>
      - string: bold
        details: <p>Bold weight (700).</p>
      - string: extrabold
        details: <p>Extrabold weight (800).</p>
      - string: black
        details: <p>Black weight (900).</p>
      default: <code><span class="typ-str">&quot;regular&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stretch
      details: |-
        <p>The desired width of the glyphs. Accepts a ratio between <code><span class="typ-num">50%</span></code> and
        <code><span class="typ-num">200%</span></code>. When the desired width is not available, Typst selects the
        font from the family that is closest in stretch. This will only stretch
        the text if a condensed or expanded version of the font is available.</p>
        <p>If you want to adjust the amount of space between characters instead of
        stretching the glyphs itself, use the <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a>
        property instead.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Condensed<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Normal<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/ef1eba3154c28004d592a3d208885527.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - ratio
      strings: []
      default: <code><span class="typ-num">100%</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: size
      details: |-
        <p>The size of the glyphs. This value forms the basis of the <code>em</code> unit:
        <code><span class="typ-num">1em</span></code> is equivalent to the font size.</p>
        <p>You can also give the font size itself in <code>em</code> units. Then, it is
        relative to the previous font size.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        very <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>big<span class="typ-punct">]</span> text
        </code></pre><div class="preview"><img src="/assets/docs/a4c0be8c8fe69c79fa5e4a46d30b7e40.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">11pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fill
      details: <p>The glyph fill paint.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span>
        This text is red.
        </code></pre><div class="preview"><img src="/assets/docs/d7b96852492c1e7f79155180cc974df7.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - color
      - gradient
      - pattern
      strings: []
      default: <code><span class="typ-func">luma</span><span class="typ-punct">(</span><span
        class="typ-num">0%</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: tracking
      details: <p>The amount of space that should be added between characters.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>tracking<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span><span class="typ-punct">)</span>
        Distant text.
        </code></pre><div class="preview"><img src="/assets/docs/3b48e9c3ec02f47b3df9ac43399e424e.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: spacing
      details: |-
        <p>The amount of space between words.</p>
        <p>Can be given as an absolute length, but also relative to the width of
        the space character in the font.</p>
        <p>If you want to adjust the amount of space between characters rather than
        words, use the <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a> property instead.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">200%</span><span class="typ-punct">)</span>
        Text with distant words.
        </code></pre><div class="preview"><img src="/assets/docs/fab9015900832363e9c63dc2f796f090.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      strings: []
      default: <code><span class="typ-num">100%</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: cjk-latin-spacing
      details: <p>Whether to automatically insert spacing between CJK and Latin characters.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span>
        第4章介绍了基本的API。

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span>
        第4章介绍了基本的API。
        </code></pre><div class="preview"><img src="/assets/docs/5fae16abf8723ec3c6f4e182578388eb.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - auto
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: baseline
      details: <p>An amount to shift the text baseline by.</p>
      example: |-
        <div class="previewed-code"><pre><code>A <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>baseline<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>lowered<span class="typ-punct">]</span>
        word.
        </code></pre><div class="preview"><img src="/assets/docs/d14deb43c72235eea81207315cc477fb.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: overhang
      details: |-
        <p>Whether certain glyphs can hang over into the margin in justified text.
        This can make justification visually more pleasing.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        This justified text has a hyphen in
        the paragraph&#39;s first line. Hanging
        the hyphen slightly into the margin
        results in a clearer paragraph edge.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>overhang<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        This justified text has a hyphen in
        the paragraph&#39;s first line. Hanging
        the hyphen slightly into the margin
        results in a clearer paragraph edge.
        </code></pre><div class="preview"><img src="/assets/docs/61e2e01db9ae6b1f1be953864768bdd0.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: top-edge
      details: |-
        <p>The top end of the conceptual frame around the text used for layout and
        positioning. This affects the size of containers that hold text.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;ascender&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;cap-height&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/6924fa1fe5ca3922ec8cff778631e083.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      - str
      strings:
      - string: ascender
        details: <p>The font's ascender, which typically exceeds the height of all
          glyphs.</p>
      - string: cap-height
        details: <p>The approximate height of uppercase letters.</p>
      - string: x-height
        details: <p>The approximate height of non-ascending lowercase letters.</p>
      - string: baseline
        details: <p>The baseline on which the letters rest.</p>
      - string: bounds
        details: <p>The top edge of the glyph's bounding box.</p>
      default: <code><span class="typ-str">&quot;cap-height&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: bottom-edge
      details: |-
        <p>The bottom end of the conceptual frame around the text used for layout
        and positioning. This affects the size of containers that hold text.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;baseline&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;descender&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/72f2bd7786bb0da324e2dbbf92fc2cbf.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      - str
      strings:
      - string: baseline
        details: <p>The baseline on which the letters rest.</p>
      - string: descender
        details: <p>The font's descender, which typically exceeds the depth of all
          glyphs.</p>
      - string: bounds
        details: <p>The bottom edge of the glyph's bounding box.</p>
      default: <code><span class="typ-str">&quot;baseline&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: lang
      details: |-
        <p>An <a href="https://en.wikipedia.org/wiki/ISO_639">ISO 639-1/2/3 language code.</a></p>
        <p>Setting the correct language affects various parts of Typst:</p>
        <ul>
        <li>The text processing pipeline can make more informed choices.</li>
        <li>Hyphenation will use the correct patterns for the language.</li>
        <li><a href="/docs/reference/text/smartquote/">Smart quotes</a> turns into the correct quotes for the
        language.</li>
        <li>And all other things which are language-aware.</li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Einleitung</span>
        In diesem Dokument, <span class="typ-escape">...</span>
        </code></pre><div class="preview"><img src="/assets/docs/14fc83552e06d2c744e443ffb47d977e.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      strings: []
      default: <code><span class="typ-str">&quot;en&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: region
      details: |-
        <p>An <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 region code.</a></p>
        <p>This lets the text processing pipeline make more informed choices.</p>
      example: null
      types:
      - none
      - str
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: script
      details: |-
        <p>The OpenType writing script.</p>
        <p>The combination of <code>lang</code> and <code>script</code> determine how font features,
        such as glyph substitution, are implemented. Frequently the value is a
        modified (all-lowercase) ISO 15924 script identifier, and the <code>math</code>
        writing script is used for features appropriate for mathematical
        symbols.</p>
        <p>When set to <code><span class="typ-key">auto</span></code>, the default and recommended setting, an
        appropriate script is chosen for each block of characters sharing a
        common Unicode script property.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
          font<span class="typ-punct">:</span> <span class="typ-str">&quot;Linux Libertine&quot;</span><span class="typ-punct">,</span>
          size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">let</span> scedilla <span class="typ-op">=</span> <span class="typ-punct">[</span>Ş<span class="typ-punct">]</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;latn&quot;</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a subscript comma</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;grek&quot;</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>
        </code></pre><div class="preview"><img src="/assets/docs/c92bd58e8ea706185de662638c552133.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: dir
      details: |-
        <p>The dominant direction for text and inline objects. Possible values are:</p>
        <ul>
        <li><code><span class="typ-key">auto</span></code>: Automatically infer the direction from the <code>lang</code> property.</li>
        <li><code>ltr</code>: Layout text from left to right.</li>
        <li><code>rtl</code>: Layout text from right to left.</li>
        </ul>
        <p>When writing in right-to-left scripts like Arabic or Hebrew, you should
        set the <a href="/docs/reference/text/text/#parameters-lang">text language</a> or direction. While individual runs
        of text are automatically layouted in the correct direction, setting the
        dominant direction gives the bidirectional reordering algorithm the
        necessary information to correctly place punctuation and inline objects.
        Furthermore, setting the direction affects the alignment values <code>start</code>
        and <code>end</code>, which are equivalent to <code>left</code> and <code>right</code> in <code>ltr</code> text and
        the other way around in <code>rtl</code> text.</p>
        <p>If you set this to <code>rtl</code> and experience bugs or in some way bad looking
        output, please do get in touch with us through the
        <a href="https://typst.app/contact">contact form</a> or our
        <a href="/docs/community/#discord">Discord server</a>!</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> rtl<span class="typ-punct">)</span>
        هذا عربي.
        </code></pre><div class="preview"><img src="/assets/docs/4170a86e60932ccec40577dd8aa2305d.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - direction
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: hyphenate
      details: |-
        <p>Whether to hyphenate text to improve line breaking. When <code><span class="typ-key">auto</span></code>, text
        will be hyphenated if and only if justification is enabled.</p>
        <p>Setting the <a href="/docs/reference/text/text/#parameters-lang">text language</a> ensures that the correct
        hyphenation patterns are used.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">200pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        This text illustrates how
        enabling hyphenation can
        improve justification.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>hyphenate<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        This text illustrates how
        enabling hyphenation can
        improve justification.
        </code></pre><div class="preview"><img src="/assets/docs/c71fcc1deec3442f9ad0d6a67a2efabf.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - bool
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: kerning
      details: |-
        <p>Whether to apply kerning.</p>
        <p>When enabled, specific letter pairings move closer together or further
        apart for a more visually pleasing result. The example below
        demonstrates how decreasing the gap between the &quot;T&quot; and &quot;o&quot; results in a
        more natural look. Setting this to <code><span class="typ-key">false</span></code> disables kerning by turning
        off the OpenType <code>kern</code> font feature.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">25pt</span><span class="typ-punct">)</span>
        Totally

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>kerning<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        Totally
        </code></pre><div class="preview"><img src="/assets/docs/e40b35166d53f5fd05dafb6975a57d1c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: alternates
      details: |-
        <p>Whether to apply stylistic alternates.</p>
        <p>Sometimes fonts contain alternative glyphs for the same codepoint.
        Setting this to <code><span class="typ-key">true</span></code> switches to these by enabling the OpenType
        <code>salt</code> font feature.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
          font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">,</span>
          size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        0, a, g, ß

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>alternates<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        0, a, g, ß
        </code></pre><div class="preview"><img src="/assets/docs/3b9e1ca6bd9f5cad8fa5e5f08c88f5c5.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stylistic-set
      details: |-
        <p>Which stylistic set to apply. Font designers can categorize alternative
        glyphs forms into stylistic sets. As this value is highly font-specific,
        you need to consult your font to know which sets are available. When set
        to an integer between <code><span class="typ-num">1</span></code> and <code><span class="typ-num">20</span></code>, enables the corresponding
        OpenType font feature from <code>ss01</code>, ..., <code>ss20</code>.</p>
      example: null
      types:
      - none
      - int
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: ligatures
      details: |-
        <p>Whether standard ligatures are active.</p>
        <p>Certain letter combinations like &quot;fi&quot; are often displayed as a single
        merged glyph called a <em>ligature.</em> Setting this to <code><span class="typ-key">false</span></code> disables
        these ligatures by turning off the OpenType <code>liga</code> and <code>clig</code> font
        features.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        A fine ligature.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>ligatures<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        A fine ligature.
        </code></pre><div class="preview"><img src="/assets/docs/8c48757c66229d93ae8e8d725a80d20f.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: discretionary-ligatures
      details: |-
        <p>Whether ligatures that should be used sparingly are active. Setting this
        to <code><span class="typ-key">true</span></code> enables the OpenType <code>dlig</code> font feature.</p>
      example: null
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: historical-ligatures
      details: |-
        <p>Whether historical ligatures are active. Setting this to <code><span class="typ-key">true</span></code>
        enables the OpenType <code>hlig</code> font feature.</p>
      example: null
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-type
      details: |-
        <p>Which kind of numbers / figures to select. When set to <code><span class="typ-key">auto</span></code>, the
        default numbers for the font are used.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;lining&quot;</span><span class="typ-punct">)</span>
        Number 9.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;old-style&quot;</span><span class="typ-punct">)</span>
        Number 9.
        </code></pre><div class="preview"><img src="/assets/docs/9565cf689e3caffd42600484ec46169f.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings:
      - string: lining
        details: |-
          <p>Numbers that fit well with capital text (the OpenType <code>lnum</code>
          font feature).</p>
      - string: old-style
        details: |-
          <p>Numbers that fit well into a flow of upper- and lowercase text (the
          OpenType <code>onum</code> font feature).</p>
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-width
      details: |-
        <p>The width of numbers / figures. When set to <code><span class="typ-key">auto</span></code>, the default
        numbers for the font are used.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;proportional&quot;</span><span class="typ-punct">)</span>
        A 12 B 34. <span class="typ-escape">\</span>
        A 56 B 78.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;tabular&quot;</span><span class="typ-punct">)</span>
        A 12 B 34. <span class="typ-escape">\</span>
        A 56 B 78.
        </code></pre><div class="preview"><img src="/assets/docs/fe66c83917a8638b72ca75cc0a4c26ec.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings:
      - string: proportional
        details: <p>Numbers with glyph-specific widths (the OpenType <code>pnum</code>
          font feature).</p>
      - string: tabular
        details: <p>Numbers of equal width (the OpenType <code>tnum</code> font feature).</p>
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: slashed-zero
      details: |-
        <p>Whether to have a slash through the zero glyph. Setting this to <code><span class="typ-key">true</span></code>
        enables the OpenType <code>zero</code> font feature.</p>
      example: |-
        <div class="previewed-code"><pre><code>0, <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>slashed-zero<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>0<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/5925acaf0363a29e71668bd6a0837504.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fractions
      details: |-
        <p>Whether to turn numbers into fractions. Setting this to <code><span class="typ-key">true</span></code>
        enables the OpenType <code>frac</code> font feature.</p>
        <p>It is not advisable to enable this property globally as it will mess
        with all appearances of numbers after a slash (e.g., in URLs). Instead,
        enable it locally when you want a fraction.</p>
      example: |-
        <div class="previewed-code"><pre><code>1/2 <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>fractions<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1/2<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/e7fab59cdabd0a5bb85fd95176de1438.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: features
      details: |-
        <p>Raw OpenType features to apply.</p>
        <ul>
        <li>If given an array of strings, sets the features identified by the
        strings to <code><span class="typ-num">1</span></code>.</li>
        <li>If given a dictionary mapping to numbers, sets the features
        identified by the keys to the values.</li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-comment">// Enable the `frac` feature manually.</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>features<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;frac&quot;</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        1/2
        </code></pre><div class="preview"><img src="/assets/docs/1f8db42134ff6bf0c9df63ae4ab55504.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - array
      - dictionary
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">:</span><span
        class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: body
      details: <p>Content in which all text is styled according to the other arguments.</p>
      example: null
      types:
      - content
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    - name: text
      details: <p>The text.</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - content
    scope: []
children: []
