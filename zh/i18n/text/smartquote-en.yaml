route: /docs/reference/text/smartquote/
title: Smartquote
description: '`smartquote` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: syntax
  name: Syntax
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-double
    name: double
    children: []
  - id: parameters-enabled
    name: enabled
    children: []
  - id: parameters-alternative
    name: alternative
    children: []
  - id: parameters-quotes
    name: quotes
    children: []
body:
  kind: func
  content:
    path: []
    name: smartquote
    title: Smartquote
    keywords: []
    oneliner: A language-aware quote that reacts to its context.
    element: true
    details: |-
      <p>A language-aware quote that reacts to its context.</p>
      <p>Automatically turns into an appropriate opening or closing quote based on
      the active <a href="/docs/reference/text/text/#parameters-lang">text language</a>.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code>&quot;This is in quotes.&quot;

      <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
      &quot;Das ist in Anführungszeichen.&quot;

      <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span>
      &quot;C&#39;est entre guillemets.&quot;
      </code></pre><div class="preview"><img src="/assets/docs/d8ae0e27ceabe7db27a5d570785d0e09.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">Syntax</h2>
      <p>This function also has dedicated syntax: The normal quote characters
      (<code>'</code> and <code>&quot;</code>). Typst automatically makes your quotes smart.</p>
    example: null
    self: false
    params:
    - name: double
      details: <p>Whether this should be a double quote.</p>
      example: null
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: enabled
      details: |-
        <p>Whether smart quotes are enabled.</p>
        <p>To disable smartness for a single quote, you can also escape it with a
        backslash.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>enabled<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>

        These are &quot;dumb&quot; quotes.
        </code></pre><div class="preview"><img src="/assets/docs/97534d7145e2ba0bc7efaabe227e3da0.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: alternative
      details: |-
        <p>Whether to use alternative quotes.</p>
        <p>Does nothing for languages that don't have alternative quotes, or if
        explicit quotes were set.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>alternative<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

        &quot;Das ist in anderen Anführungszeichen.&quot;
        </code></pre><div class="preview"><img src="/assets/docs/5c3460227def2ea6db1015c5c127155d.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: quotes
      details: |-
        <p>The quotes to use.</p>
        <ul>
        <li>When set to <code><span class="typ-key">auto</span></code>, the appropriate single quotes for the
        <a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
        <li>Custom quotes can be passed as a string, array, or dictionary of either
        <ul>
        <li><a href="/docs/reference/foundations/str/">string</a>: a string consisting of two characters containing the
        opening and closing double quotes (characters here refer to Unicode
        grapheme clusters)</li>
        <li><a href="/docs/reference/foundations/array/">array</a>: an array containing the opening and closing double
        quotes</li>
        <li><a href="/docs/reference/foundations/dictionary/">dictionary</a>: an array containing the double and single
        quotes, each specified as either <code><span class="typ-key">auto</span></code>, string, or array</li>
        </ul>
        </li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
        &#39;Das sind normale Anführungszeichen.&#39;

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>quotes<span class="typ-punct">:</span> <span class="typ-str">&quot;()&quot;</span><span class="typ-punct">)</span>
        &quot;Das sind eigene Anführungszeichen.&quot;

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>quotes<span class="typ-punct">:</span> <span class="typ-punct">(</span>single<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;[[&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;]]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>  double<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        &#39;Das sind eigene Anführungszeichen.&#39;
        </code></pre><div class="preview"><img src="/assets/docs/4795f58c8c1e6b031f007e96bb72eb7c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      - array
      - dictionary
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    scope: []
children: []
