route: /docs/reference/text/text/
title: 文本
description: '`text` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-font
    name: font
    children: []
  - id: parameters-fallback
    name: fallback
    children: []
  - id: parameters-style
    name: style
    children: []
  - id: parameters-weight
    name: weight
    children: []
  - id: parameters-stretch
    name: stretch
    children: []
  - id: parameters-size
    name: size
    children: []
  - id: parameters-fill
    name: fill
    children: []
  - id: parameters-tracking
    name: tracking
    children: []
  - id: parameters-spacing
    name: spacing
    children: []
  - id: parameters-cjk-latin-spacing
    name: cjk-latin-spacing
    children: []
  - id: parameters-baseline
    name: baseline
    children: []
  - id: parameters-overhang
    name: overhang
    children: []
  - id: parameters-top-edge
    name: top-edge
    children: []
  - id: parameters-bottom-edge
    name: bottom-edge
    children: []
  - id: parameters-lang
    name: lang
    children: []
  - id: parameters-region
    name: region
    children: []
  - id: parameters-script
    name: script
    children: []
  - id: parameters-dir
    name: dir
    children: []
  - id: parameters-hyphenate
    name: hyphenate
    children: []
  - id: parameters-kerning
    name: kerning
    children: []
  - id: parameters-alternates
    name: alternates
    children: []
  - id: parameters-stylistic-set
    name: stylistic-set
    children: []
  - id: parameters-ligatures
    name: ligatures
    children: []
  - id: parameters-discretionary-ligatures
    name: discretionary-ligatures
    children: []
  - id: parameters-historical-ligatures
    name: historical-ligatures
    children: []
  - id: parameters-number-type
    name: number-type
    children: []
  - id: parameters-number-width
    name: number-width
    children: []
  - id: parameters-slashed-zero
    name: slashed-zero
    children: []
  - id: parameters-fractions
    name: fractions
    children: []
  - id: parameters-features
    name: features
    children: []
  - id: parameters-body
    name: body
    children: []
  - id: parameters-text
    name: text
    children: []
body:
  kind: func
  content:
    path: []
    name: text
    title: Text
    keywords: []
    oneliner: Customizes the look and layout of text in a variety of ways.
    element: true
    details: |-
      <p>
      以各种方式自定义文本的外观和布局。</p>
      <p>
      该函数经常被使用，无论是 set 规则还是直接使用。虽然 set 规则通常是更简单的选择，但是直接调用 text 函数在将文本作为参数传递给另一个函数时非常有用。</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">)</span>
      With a set rule.

      <span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">(</span><span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span><span class="typ-punct">[</span>
        With a function call.
      <span class="typ-punct">]</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/1798620674b9dbb4c11ebe7e32fe87c8.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: font
      details: |-
        <p>
        优先使用的字体系列。</p>
        <p>
        当处理文本时，Typst 按顺序尝试所有指定的字体系列，直到找到具有必要字形的字体为止。在下面的示例中，首选字体是 <code>Inria Serif</code>，但由于它不包含阿拉伯字形，因此阿拉伯文本使用 <code>Noto Sans Arabic</code> 替代。</p>
        <p>The collection of available fonts differs by platform:</p>
        <ul>
        <li>
        <p>In the web app, you can see the list of available fonts by clicking on
        the &quot;Ag&quot; button. You can provide additional fonts by uploading <code>.ttf</code>
        or <code>.otf</code> files into your project. They will be discovered
        automatically.</p>
        </li>
        <li>
        <p>Locally, Typst uses your installed system fonts. In addition, you can
        use the <code>--font-path</code> argument or <code>TYPST_FONT_PATHS</code> environment
        variable to add directories that should be scanned for fonts.</p>
        </li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;PT Sans&quot;</span><span class="typ-punct">)</span>
        This is sans-serif.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-punct">(</span>
          <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">,</span>
          <span class="typ-str">&quot;Noto Sans Arabic&quot;</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>

        This is Latin. <span class="typ-escape">\</span>
        هذا عربي.
        </code></pre><div class="preview"><img src="/assets/docs/e8afd3143accf1cba02aee7fd27169c1.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-str">&quot;linux libertine&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fallback
      details: |-
        <p>
        当主要字体列表中没有匹配项时，是否允许最后的备用字体，Typst 会搜索所有可用字体找到具有必要字形的最相似的字体。</p>
        <p>
        <em> 注：</em> 当禁用 fallback 并且找不到适当的字形时不会发出警告，而是以“豆腐块”形式显示文本：表示缺少适当字形的小框。将来，你将能够指示 Typst 发出警告，以便你知道出了什么问题。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
        هذا عربي

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fallback<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        هذا عربي
        </code></pre><div class="preview"><img src="/assets/docs/bf03aa462d7c10c93185026e8b709e3b.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: style
      details: |-
        <p>
        所需的字体样式。</p>
        <p>
        <p>
        当需要 italic 样式但只有 oblique 样式可用时，将使用 oblique ，反之亦然。当 italic 样式和 oblique 样式都不可用时，Typst 会选择 normal 样式。由于大多数字体只有 italic 或 oblique 样式，因此很少能观察到 italic 和 oblique 样式之间的区别。
        </p>
        <p>如果你想强调你的文本，你应该使用 <a href=“/docs/reference/text/emph/”>emph</a> 函数。
        这样，如果您改变主意如何表示强调，以后就可以轻松调整样式.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Linux Libertine&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;italic&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Italic<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;DejaVu Sans&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;oblique&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Oblique<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/50f6c17278b2799fc7207e00ab68d482.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      strings:
      - string: normal
        details: <p>默认的，典型的直立风格。</p>
      - string: italic
        details: <p>带有自定义字母形式的草书风格（意大利斜体）。</p>
      - string: oblique
        details: <p>仅是正常风格的倾斜版本。（倾斜体）</p>
      default: <code><span class="typ-str">&quot;normal&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: weight
      details: |-
        <p>
        所需的字体字重。接受介于 <code><span class="typ-num">100</span></code> 和 <code><span class="typ-num">900</span></code> 之间的整数或预定义的字重名称之一。当所需的字重不可用时，Typst 会从字体系列中选择最接近字重的字体。
        </p>
        <p>
        如果要着重强调文本，应使用 <a href="/docs/reference/text/emph/">emph</a> 函数。这样，如果你改变了强调的方式就很容易调整样式。
        </p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;light&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Light<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Regular<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;medium&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-num">500</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Bold<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/01e654fdb2266c6084f521d21e12510d.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - int
      - str
      strings:
      - string: thin
        details: <p>Thin weight (100).</p>
      - string: extralight
        details: <p>Extra light weight (200).</p>
      - string: light
        details: <p>Light weight (300).</p>
      - string: regular
        details: <p>Regular weight (400).</p>
      - string: medium
        details: <p>Medium weight (500).</p>
      - string: semibold
        details: <p>Semibold weight (600).</p>
      - string: bold
        details: <p>Bold weight (700).</p>
      - string: extrabold
        details: <p>Extrabold weight (800).</p>
      - string: black
        details: <p>Black weight (900).</p>
      default: <code><span class="typ-str">&quot;regular&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stretch
      details: |-
        <p>
        所需的字体拉伸宽度。接受介于 <code><span class="typ-num">50%</span></code> 和 <code><span class="typ-num">200%</span></code> 之间的比率。当所需的字体不可用时，Typst 会从字体系列中选择最接近拉伸的字体。这只会拉伸文本，如果字体的压缩或扩展版本可用，则会选择字体系列中最接近的字体。</p>
        <p>如果要调整字符之间的间距而不是拉伸字形本身，请改用 <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a> 属性。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Condensed<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Normal<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/ef1eba3154c28004d592a3d208885527.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - ratio
      strings: []
      default: <code><span class="typ-num">100%</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: size
      details: |-
        <p>
        所需的字体大小。该值构成 <code>em</code> 基础单位：<code><span class="typ-num">1em</span></code> 等于字体大小。
        </p>
        <p>
        你也可以直接给出字体大小，单位为 <code>em</code>。当然，这是相对于前面指定的字体大小。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        very <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>big<span class="typ-punct">]</span> text
        </code></pre><div class="preview"><img src="/assets/docs/a4c0be8c8fe69c79fa5e4a46d30b7e40.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">11pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fill
      details: <p>字体填充颜色</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span>
        This text is red.
        </code></pre><div class="preview"><img src="/assets/docs/d7b96852492c1e7f79155180cc974df7.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - color
      - gradient
      - pattern
      strings: []
      default: <code><span class="typ-func">luma</span><span class="typ-punct">(</span><span
        class="typ-num">0%</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: tracking
      details: <p>字符之间的间距。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>tracking<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span><span class="typ-punct">)</span>
        Distant text.
        </code></pre><div class="preview"><img src="/assets/docs/3b48e9c3ec02f47b3df9ac43399e424e.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: spacing
      details: |-
        <p>
        单词之间的间距。
        </p>
        <p>
        可以给出绝对长度，也可以相对于字体中空格字符的宽度。</p>
        <p>
        如果想调整字符之间的间距而不是单词之间的间距，请改用 <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a> 属性。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">200%</span><span class="typ-punct">)</span>
        Text with distant words.
        </code></pre><div class="preview"><img src="/assets/docs/fab9015900832363e9c63dc2f796f090.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      strings: []
      default: <code><span class="typ-num">100%</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: cjk-latin-spacing
      details: <p>Whether to automatically insert spacing between CJK and Latin characters.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span>
        第4章介绍了基本的API。

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span>
        第4章介绍了基本的API。
        </code></pre><div class="preview"><img src="/assets/docs/5fae16abf8723ec3c6f4e182578388eb.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - auto
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: baseline
      details: <p>文本基准线移动的距离。</p>
      example: |-
        <div class="previewed-code"><pre><code>A <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>baseline<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>lowered<span class="typ-punct">]</span>
        word.
        </code></pre><div class="preview"><img src="/assets/docs/d14deb43c72235eea81207315cc477fb.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: overhang
      details: |-
        <p>是否允许某些字形悬挂到边距中。这可以使对齐更加美观。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        This justified text has a hyphen in
        the paragraph&#39;s first line. Hanging
        the hyphen slightly into the margin
        results in a clearer paragraph edge.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>overhang<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        This justified text has a hyphen in
        the paragraph&#39;s first line. Hanging
        the hyphen slightly into the margin
        results in a clearer paragraph edge.
        </code></pre><div class="preview"><img src="/assets/docs/61e2e01db9ae6b1f1be953864768bdd0.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: top-edge
      details: |-
        <p>文本布局和定位中使用的文本周围概念框的顶端。这会影响包含文本的容器的大小。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;ascender&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;cap-height&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/6924fa1fe5ca3922ec8cff778631e083.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      - str
      strings:
      - string: ascender
        details: <p>上行线高度，通常超过所有字形的高度。</p>
      - string: cap-height
        details: <p>大写字母的近似高度。</p>
      - string: x-height
        details: <p>非上行线小写字母 x 的近似高度。</p>
      - string: baseline
        details: <p>字母所依托的基线高度。</p>
      - string: bounds
        details: <p>字形边界框的顶部边缘高度。</p>
      default: <code><span class="typ-str">&quot;cap-height&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: bottom-edge
      details: |-
        <p>文本布局和定位中使用的文本周围概念框的底部。这会影响包含文本的容器的大小。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;baseline&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;descender&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/72f2bd7786bb0da324e2dbbf92fc2cbf.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      - str
      strings:
      - string: baseline
        details: <p>字母所依托的基线高度。</p>
      - string: descender
        details: <p>下行线高度，通常超过所有字形的深度。</p>
      - string: bounds
        details: <p>字形边界框的底部边缘高度。</p>
      default: <code><span class="typ-str">&quot;baseline&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: lang
      details: |-
          <p>
          一个 <a href="https://en.wikipedia.org/wiki/ISO_639">ISO 639-1/2/3 语言代码。</a></p>

          <p>
          设置正确的语言会影响 Typst 的各个部分：</p>
          <ul>
          <li>
          文本处理功能可以做出更明智的选择。
          The text processing pipeline can make more informed choices.
          </li>
          <li>
          连字符会匹配相应的语言模式。
          </li>
          <li>
          <a href="/docs/reference/text/smartquote/">智能引号</a> 会变成响应语言的引号。
          </li>
          <li>
          以及其他所有能感知语言的功能。
          </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Einleitung</span>
        In diesem Dokument, <span class="typ-escape">...</span>
        </code></pre><div class="preview"><img src="/assets/docs/14fc83552e06d2c744e443ffb47d977e.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      strings: []
      default: <code><span class="typ-str">&quot;en&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: region
      details: |-
        <p>
        一个 <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 地区代码。</a></p>
        <p>
        这使文本处理功能能够做出更明智的选择。
        </p>
      example: null
      types:
      - none
      - str
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: script
      details: |-
        <p>OpenType 编写脚本。</p>
        <p><code>lang</code> 和 <code>script</code> 的组合决定了字体功能（如字形替换）的实现方式。通常，该值是修改后的（全小写）ISO 15924 脚本标识符，数学书写脚本用于适用于数学符号的特征。</p>
        <p>当设置为 <code><span class="typ-key">auto</span></code>（默认设置和建议设置）时，将为共享公共 Unicode 脚本属性的每个字符块选择适当的脚本。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
          font<span class="typ-punct">:</span> <span class="typ-str">&quot;Linux Libertine&quot;</span><span class="typ-punct">,</span>
          size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">let</span> scedilla <span class="typ-op">=</span> <span class="typ-punct">[</span>Ş<span class="typ-punct">]</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;latn&quot;</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a subscript comma</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;grek&quot;</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>
        </code></pre><div class="preview"><img src="/assets/docs/c92bd58e8ea706185de662638c552133.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: dir
      details: |-
        <p>
        文本和内联对象的主导方向。可能的取值有：</p>
        <ul>
        <li>
        <code><span class="typ-key">auto</span></code>：从 <code>lang</code> 属性自动推断方向。
        </li>
        <li><code>ltr</code>：从左到右布局文本。</li>
        <li><code>rtl</code>：从右到左布局文本。</li>
        </ul>
        <p>
        当使用从右到左的语言（如阿拉伯语或希伯来语）书写时，应设置 <a href="/docs/reference/text/text/#parameters-lang">text language</a> 或 direction。虽然各个文本行会自动按正确的方向布局，但设置主要方向可为双向重新排序算法提供必要的信息，以正确放置标点符号和内联对象。此外，设置方向会影响对齐值 <code>start</code> 和 <code>end</code>，在 <code>ltr</code> 文本中等同于 <code>left</code> 和 <code>right</code>，在 <code>rtl</code> 文本中则相反。</p>

        <p>
        如果设置为 <code>rtl</code> 遇到错误或某种方式产生不佳的输出，请通过 <a href="https://typst.app/contact">contact table</a> 或我们的 <a href="/docs/community/#discord">Discord server</a> 与我们联系！</p>

      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> rtl<span class="typ-punct">)</span>
        هذا عربي.
        </code></pre><div class="preview"><img src="/assets/docs/4170a86e60932ccec40577dd8aa2305d.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - direction
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: hyphenate
      details: |-
        <p>
        是否使用连字符改善断行。当设定为 <code><span class="typ-key">auto</span></code> 时，只有在启用对齐时才会连字符化文本。</p>
        <p>
        设置 <a href="/docs/reference/text/text/#parameters-lang">text language</a> 可确保使用正确的连字符化模式。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">200pt</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        This text illustrates how
        enabling hyphenation can
        improve justification.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>hyphenate<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        This text illustrates how
        enabling hyphenation can
        improve justification.
        </code></pre><div class="preview"><img src="/assets/docs/c71fcc1deec3442f9ad0d6a67a2efabf.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - bool
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: kerning
      details: |-
        <p>
        是否应用字距调整。</p>
        <p>
        启用后，特定的字母配对会相互靠近或远离，以获得更美观的结果。下面的示例演示了如何通过减小 &quot;T&quot; 和 &quot;o&quot; 之间的间距来获得更自然的外观。将其设置为 <code><span class="typ-key">false</span></code> 会通过关闭 OpenType <code>kern</code> 字体特性来禁用字距调整。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">25pt</span><span class="typ-punct">)</span>
        Totally

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>kerning<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        Totally
        </code></pre><div class="preview"><img src="/assets/docs/e40b35166d53f5fd05dafb6975a57d1c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: alternates
      details: |-
        <p>
        是否应用样式替代。</p>
        <p>
        有时一些字体会包含相同代码点的替代字形。将其设置为 <code><span class="typ-key">true</span></code> 会通过启用 OpenType <code>salt</code> 字体特性来切换到这些字形。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
          font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">,</span>
          size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        0, a, g, ß

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>alternates<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        0, a, g, ß
        </code></pre><div class="preview"><img src="/assets/docs/3b9e1ca6bd9f5cad8fa5e5f08c88f5c5.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stylistic-set
      details: |-
        <p>
        应用哪个样式集。字体设计师可以将替代字形形式分类为样式集。由于该值高度依赖于字体，因此你需要查阅字体以了解可用的集合。当设置为介于 <code><span class="typ-num">1</span></code> 和 <code><span class="typ-num">20</span></code> 之间的整数时，会启用相应的 OpenType 字体特性 <code>ss01</code>、...、<code>ss20</code>。</p>      example: null
      types:
      - none
      - int
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: ligatures
      details: |-
        <p>
        是否启用标准连字。</p>
        </p>
        <p>
        某些字母组合（例如 &quot;fi&quot;）通常显示为单个合并字形，称为 <em>连字</em>。将其设置为 <code><span class="typ-key">false</span></code> 会通过关闭 OpenType <code>liga</code> 和 <code>clig</code> 字体特性来禁用这些连字。
        </p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        A fine ligature.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>ligatures<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
        A fine ligature.
        </code></pre><div class="preview"><img src="/assets/docs/8c48757c66229d93ae8e8d725a80d20f.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: discretionary-ligatures
      details: |-
        <p>
        是否启用应当谨慎使用的连字。将其设置为 <code><span class="typ-key">true</span></code> 会通过启用 OpenType <code>dlig</code> 字体特性来启用这些连字。
        </p>
      example: null
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: historical-ligatures
      details: |-
        <p>
        是否启用历史连字。将其设置为 <code><span class="typ-key">true</span></code> 会通过启用 OpenType <code>hlig</code> 字体特性来启用这些连字。
        </p>
      example: null
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-type
      details: |-
        <p>
        选择哪种数字字体。当设置为 <code><span class="typ-key">auto</span></code> 时，使用字体的默认数字。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;lining&quot;</span><span class="typ-punct">)</span>
        Number 9.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;old-style&quot;</span><span class="typ-punct">)</span>
        Number 9.
        </code></pre><div class="preview"><img src="/assets/docs/9565cf689e3caffd42600484ec46169f.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings:
      - string: lining
        details: |-
          <p>适合大写文本的数字（OpenType <code>lnum</code> 字体功能）。</p>
      - string: old-style
        details: |-
          <p>非常适合大写和小写文本流的数字（OpenType <code>onum</code> 字体功能）。</p>
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-width
      details: |-
        <p>
        数字字符的宽度。当设置为 <code><span class="typ-key">auto</span></code> 时，使用字体的默认数字。
        </p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;proportional&quot;</span><span class="typ-punct">)</span>
        A 12 B 34. <span class="typ-escape">\</span>
        A 56 B 78.

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;tabular&quot;</span><span class="typ-punct">)</span>
        A 12 B 34. <span class="typ-escape">\</span>
        A 56 B 78.
        </code></pre><div class="preview"><img src="/assets/docs/fe66c83917a8638b72ca75cc0a4c26ec.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - str
      strings:
      - string: proportional
        details: <p>具有特定于字形宽度的数字（OpenType <code>pnum</code> 字体功能）。</p>
      - string: tabular
        details: <p>等宽的数字（OpenType <code>tnum</code>字体功能）。</p>
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: slashed-zero
      details: |-
        <p>
        是否使用带斜线的零字形。将其设置为 <code><span class="typ-key">true</span></code> 会通过启用 OpenType <code>zero</code> 字体特性来使用这些字形。
        </p>
      example: |-
        <div class="previewed-code"><pre><code>0, <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>slashed-zero<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>0<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/5925acaf0363a29e71668bd6a0837504.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fractions
      details: |-
        <p>
        是否将数字转换为分数。将其设置为 <code><span class="typ-key">true</span></code> 会通过启用 OpenType <code>frac</code> 字体特性来使用这些字形。</p>
        <p>
        不建议全局启用此属性，因为它会破坏斜杠后所有数字的外观（例如，在 URL 中）。相反，当你想要分数时，请在本地启用它。</p>
      example: |-
        <div class="previewed-code"><pre><code>1/2 <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>fractions<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1/2<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/e7fab59cdabd0a5bb85fd95176de1438.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: features
      details: |-
        <p>
        要使用的原始 OpenType 功能。</p>
        <ul>
        <li>如果给定字符串数组，则将字符串标识的功能设置为 <code><span class="typ-num">1</span></code>。</li>
        <li>如果给定映射到数字的字典，则将键标识的功能设置为值。</li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-comment">// Enable the `frac` feature manually.</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>features<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;frac&quot;</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        1/2
        </code></pre><div class="preview"><img src="/assets/docs/1f8db42134ff6bf0c9df63ae4ab55504.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - array
      - dictionary
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">:</span><span
        class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: body
      details: <p>要应用样式的内容，根据其他参数进行设定。</p>
      example: null
      types:
      - content
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    - name: text
      details: <p>该文本。</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - content
    scope: []
children: []
