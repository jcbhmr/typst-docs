route: /docs/reference/text/linebreak/
title: Line Break
description: '`linebreak` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: syntax
  name: Syntax
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-justify
    name: justify
    children: []
body:
  kind: func
  content:
    path: []
    name: linebreak
    title: Line Break
    keywords: []
    oneliner: Inserts a line break.
    element: true
    details: |-
      <p>Inserts a line break.</p>
      <p>Advances the paragraph to the next line. A single trailing line break at the
      end of a paragraph is ignored, but more than one creates additional empty
      lines.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-strong">*Date:*</span> 26.12.2022 <span class="typ-escape">\</span>
      <span class="typ-strong">*Topic:*</span> Infrastructure Test <span class="typ-escape">\</span>
      <span class="typ-strong">*Severity:*</span> High <span class="typ-escape">\</span>
      </code></pre><div class="preview"><img src="/assets/docs/2df1c0e733c1628030900158678b67c9.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">Syntax</h2>
      <p>This function also has dedicated syntax: To insert a line break, simply write
      a backslash followed by whitespace. This always creates an unjustified
      break.</p>
    example: null
    self: false
    params:
    - name: justify
      details: |-
        <p>Whether to justify the line before the break.</p>
        <p>This is useful if you found a better line break opportunity in your
        justified text than Typst did.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">let</span> jb <span class="typ-op">=</span> <span class="typ-func">linebreak</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

        I have manually tuned the <span class="typ-pol">#</span><span class="typ-pol">jb</span>
        line breaks in this paragraph <span class="typ-pol">#</span><span class="typ-pol">jb</span>
        for an <span class="typ-emph">_interesting_</span> result. <span class="typ-pol">#</span><span class="typ-pol">jb</span>
        </code></pre><div class="preview"><img src="/assets/docs/71d5dafb28147bb22ac8ddaa28f4f93a.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    scope: []
children: []
