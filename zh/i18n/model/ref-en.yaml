route: /docs/reference/model/ref/
title: Reference
description: '`ref` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: syntax
  name: Syntax
  children: []
- id: customization
  name: Customization
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-target
    name: target
    children: []
  - id: parameters-supplement
    name: supplement
    children: []
body:
  kind: func
  content:
    path: []
    name: ref
    title: Reference
    keywords: []
    oneliner: A reference to a label or bibliography.
    element: true
    details: |-
      <p>A reference to a label or bibliography.</p>
      <p>Produces a textual reference to a label. For example, a reference to a
      heading will yield an appropriate string such as &quot;Section 1&quot; for a reference
      to the first heading. The references are also links to the respective
      element. Reference syntax can also be used to <a href="/docs/reference/model/cite/">cite</a> from a
      bibliography.</p>
      <p>Referenceable elements include <a href="/docs/reference/model/heading/">headings</a>, <a href="/docs/reference/model/figure/">figures</a>,
      <a href="/docs/reference/math/equation/">equations</a>, and <a href="/docs/reference/model/footnote/">footnotes</a>. To create a custom
      referenceable element like a theorem, you can create a figure of a custom
      <a href="/docs/reference/model/figure/#parameters-kind"><code>kind</code></a> and write a show rule for it. In the future, there
      might be a more direct way to define a custom referenceable element.</p>
      <p>If you just want to link to a labelled element and not get an automatic
      textual reference, consider using the <a href="/docs/reference/model/link/"><code>link</code></a> function instead.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
      <span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

      <span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
      Recent developments in
      typesetting software have
      rekindled hope in previously
      frustrated researchers. <span class="typ-ref">@distress</span>
      As shown in <span class="typ-ref">@results</span>, we <span class="typ-escape">...</span>

      <span class="typ-heading">= Results</span> <span class="typ-label">&lt;results&gt;</span>
      We discuss our approach in
      comparison with others.

      <span class="typ-heading">== Performance</span> <span class="typ-label">&lt;perf&gt;</span>
      <span class="typ-ref">@slow</span> demonstrates what slow
      software looks like.
      <span class="typ-math-delim">$</span> O(n) = 2<span class="typ-math-op">^</span>n <span class="typ-math-delim">$</span> <span class="typ-label">&lt;slow&gt;</span>

      <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/3492082c98f2903651fb394f3d2e9472.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">Syntax</h2>
      <p>This function also has dedicated syntax: A reference to a label can be
      created by typing an <code>@</code> followed by the name of the label (e.g.
      <code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span></code> can be referenced by typing <code><span class="typ-ref">@intro</span></code>).</p>
      <p>To customize the supplement, add content in square brackets after the
      reference: <code><span class="typ-ref">@intro<span class="typ-punct">[</span>Chapter<span class="typ-punct">]</span></span></code>.</p>
      <h2 id="customization">Customization</h2>
      <p>If you write a show rule for references, you can access the referenced
      element through the <code>element</code> field of the reference. The <code>element</code> may
      be <code><span class="typ-key">none</span></code> even if it exists if Typst hasn't discovered it yet, so you
      always need to handle that case in your code.</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
      <span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

      <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">ref</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
        <span class="typ-key">let</span> eq <span class="typ-op">=</span> math<span class="typ-punct">.</span>equation
        <span class="typ-key">let</span> el <span class="typ-op">=</span> it<span class="typ-punct">.</span>element
        <span class="typ-key">if</span> el <span class="typ-op">!=</span> <span class="typ-key">none</span> <span class="typ-key">and</span> el<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> eq <span class="typ-punct">{</span>
          <span class="typ-comment">// Override equation references.</span>
          <span class="typ-func">numbering</span><span class="typ-punct">(</span>
            el<span class="typ-punct">.</span>numbering<span class="typ-punct">,</span>
            <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>eq<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>el<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-punct">)</span>
        <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
          <span class="typ-comment">// Other references as usual.</span>
          it
        <span class="typ-punct">}</span>
      <span class="typ-punct">}</span>

      <span class="typ-heading">= Beginnings</span> <span class="typ-label">&lt;beginning&gt;</span>
      In <span class="typ-ref">@beginning</span> we prove <span class="typ-ref">@pythagoras</span>.
      <span class="typ-math-delim">$</span> a<span class="typ-math-op">^</span>2 + b<span class="typ-math-op">^</span>2 = c<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;pythagoras&gt;</span>
      </code></pre><div class="preview"><img src="/assets/docs/670ed605e234dd0e2bb76e690e91de9b.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: target
      details: |-
        <p>The target label that should be referenced.</p>
        <p>Can be a label that is defined in the document or an entry from the
        <a href="/docs/reference/model/bibliography/"><code>bibliography</code></a>.</p>
      example: null
      types:
      - label
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    - name: supplement
      details: |-
        <p>A supplement for the reference.</p>
        <p>For references to headings or figures, this is added before the
        referenced number. For citations, this can be used to add a page number.</p>
        <p>If a function is specified, it is passed the referenced element and
        should return content.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">ref</span><span class="typ-punct">(</span>supplement<span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
          <span class="typ-key">if</span> it<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> heading <span class="typ-punct">{</span>
            <span class="typ-str">&quot;Chapter&quot;</span>
          <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
            <span class="typ-str">&quot;Thing&quot;</span>
          <span class="typ-punct">}</span>
        <span class="typ-punct">}</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
        In <span class="typ-ref">@intro</span>, we see how to turn
        Sections into Chapters. And
        in <span class="typ-ref">@intro<span class="typ-punct">[</span>Part<span class="typ-punct">]</span></span>, it is done
        manually.
        </code></pre><div class="preview"><img src="/assets/docs/2f427dc238f541c03aaf036dcd46e7e9.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - auto
      - content
      - function
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    scope: []
children: []
