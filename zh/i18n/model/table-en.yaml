route: /docs/reference/model/table/
title: Table
description: '`table` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-columns
    name: columns
    children: []
  - id: parameters-rows
    name: rows
    children: []
  - id: parameters-gutter
    name: gutter
    children: []
  - id: parameters-column-gutter
    name: column-gutter
    children: []
  - id: parameters-row-gutter
    name: row-gutter
    children: []
  - id: parameters-fill
    name: fill
    children: []
  - id: parameters-align
    name: align
    children: []
  - id: parameters-stroke
    name: stroke
    children: []
  - id: parameters-inset
    name: inset
    children: []
  - id: parameters-children
    name: children
    children: []
body:
  kind: func
  content:
    path: []
    name: table
    title: Table
    keywords: []
    oneliner: A table of items.
    element: true
    details: |-
      <p>A table of items.</p>
      <p>Tables are used to arrange content in cells. Cells can contain arbitrary
      content, including multiple paragraphs and are specified in row-major order.
      Because tables are just grids with configurable cell properties, refer to
      the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on how to size the
      table tracks.</p>
      <p>To give a table a caption and make it <a href="/docs/reference/model/ref/">referenceable</a>, put it into a
      <a href="/docs/reference/model/figure/">figure</a>.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
        columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
        align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
        <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Area*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Parameters*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;cylinder.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-math-delim">$</span> <span class="typ-pol">pi</span> h <span class="typ-punct">(</span>D<span class="typ-math-op">^</span>2 <span class="typ-escape">-</span> d<span class="typ-math-op">^</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 4 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span>
          <span class="typ-math-delim">$</span>h<span class="typ-math-delim">$</span>: height <span class="typ-escape">\</span>
          <span class="typ-math-delim">$</span>D<span class="typ-math-delim">$</span>: outer radius <span class="typ-escape">\</span>
          <span class="typ-math-delim">$</span>d<span class="typ-math-delim">$</span>: inner radius
        <span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tetrahedron.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 12 a<span class="typ-math-op">^</span>3 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span><span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>: edge length<span class="typ-punct">]</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/def578cdeaad880e80767056b9577c66.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: columns
      details: |-
        <p>The column sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more
        information on track sizing.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: rows
      details: |-
        <p>The row sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information
        on track sizing.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: gutter
      details: |-
        <p>The gaps between rows &amp; columns. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for
        more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: column-gutter
      details: |-
        <p>The gaps between columns. Takes precedence over <code>gutter</code>. See the
        <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: row-gutter
      details: |-
        <p>The gaps between rows. Takes precedence over <code>gutter</code>. See the
        <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fill
      details: |-
        <p>How to fill the cells.</p>
        <p>This can be a color or a function that returns a color. The function is
        passed the cells' column and row index, starting at zero. This can be
        used to implement striped tables.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>col<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>col<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> <span class="typ-punct">(</span>col<span class="typ-punct">,</span> row<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
            <span class="typ-key">if</span> row <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span>
            <span class="typ-key">else</span> <span class="typ-key">if</span> col <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span>
            <span class="typ-key">else</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span><span class="typ-punct">,</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q1*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q2*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q3*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Revenue:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3000 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Expenses:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Profit:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/cb2582ac1a1db1e8719b8fd119e5fe8c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - color
      - gradient
      - array
      - pattern
      - function
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: align
      details: |-
        <p>How to align the cells' content.</p>
        <p>This can either be a single alignment, an array of alignments
        (corresponding to each column) or a function that returns an alignment.
        The function is passed the cells' column and row index, starting at zero.
        If set to <code><span class="typ-key">auto</span></code>, the outer alignment is used.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> center<span class="typ-punct">,</span> right<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5fcf012efff110eb740ed2d90febb2e0.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - array
      - alignment
      - function
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stroke
      details: |-
        <p>How to <a href="/docs/reference/visualize/stroke/">stroke</a> the cells.</p>
        <p>Strokes can be disabled by setting this to <code><span class="typ-key">none</span></code>.</p>
        <p><em>Note:</em> Richer stroke customization for individual cells is not yet
        implemented, but will be in the future. In the meantime, you can use the
        third-party <a href="https://github.com/PgBiel/typst-tablex/">tablex library</a>.</p>
      example: null
      types:
      - none
      - length
      - color
      - gradient
      - stroke
      - pattern
      - dictionary
      strings: []
      default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
        black</code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: inset
      details: <p>How much to pad the cells' content.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>
            x<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
            y<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/51ec900d498b539d860dbaed5df278b1.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      - dictionary
      strings: []
      default: <code><span class="typ-num">5pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: children
      details: <p>The contents of the table cells.</p>
      example: null
      types:
      - content
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    scope: []
children: []
