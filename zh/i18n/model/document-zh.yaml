route: /docs/reference/model/document/
title: 文档
description: '`document` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-title
    name: title
    children: []
  - id: parameters-author
    name: author
    children: []
  - id: parameters-keywords
    name: keywords
    children: []
  - id: parameters-date
    name: date
    children: []
body:
  kind: func
  content:
    path: []
    name: document
    title: 文档
    keywords: []
    oneliner: 文档根元素及其元数据。
    element: true
    details: |-
      <p>文档根元素及其元数据。</p>
      <p>所有文档都会自动包装在一个 <code>document</code> 元素中。您不能自己创建文档元素。
      此功能仅能与
      <a href="/docs/reference/styling/#set-rules">Set 规则</a> 一起使用，以指定文档元数据。此类 Set 规则必须出现在文档内容之前。</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span>title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">)</span>

      这没有可见的输出，但会将元数据嵌入 PDF 中！
      </code></pre><div class="preview"><img src="/assets/docs/b00d966ea2446c868ea7ea0602641a2c.png" alt="Preview" width="480" height="190"/></div></div>
      <p>请注意，使用此功能设置的元数据不会在
      文档内呈现。相反，它被嵌入到编译后的 PDF 文件中。</p>
    example: null
    self: false
    params:
    - name: title
      details: |-
        <p>文档的标题。这通常会呈现为
        PDF 查看器窗口的标题。</p>
        <p>虽然这可以是任意内容块，但 PDF 查看器仅支持纯文本
        标题，因此转换可能会有损失。</p>
      example: null
      types:
      - none
      - content
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: author
      details: <p>文档的作者。</p>
      example: null
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: keywords
      details: <p>文档的关键词。</p>
      example: null
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: date
      details: |-
        <p>文档的创建日期。</p>
        <p>如果这是 <code><span class="typ-key">auto</span></code>（默认），Typst 使用当前日期和时间。
        将其设置为 <code><span class="typ-key">none</span></code> 可以防止 Typst 嵌入任何创建日期
        到 PDF 元数据中。</p>
        <p>年份必须至少为零才能嵌入到
        PDF。</p>
      example: null
      types:
      - none
      - auto
      - datetime
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    scope: []
children: []
