route: /docs/reference/model/enum/
title: Numbered List
description: '`enum` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: syntax
  name: Syntax
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-tight
    name: tight
    children: []
  - id: parameters-numbering
    name: numbering
    children: []
  - id: parameters-start
    name: start
    children: []
  - id: parameters-full
    name: full
    children: []
  - id: parameters-indent
    name: indent
    children: []
  - id: parameters-body-indent
    name: body-indent
    children: []
  - id: parameters-spacing
    name: spacing
    children: []
  - id: parameters-number-align
    name: number-align
    children: []
  - id: parameters-children
    name: children
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-item
    name: Numbered List Item
    children:
    - id: definitions-item-number
      name: number
      children: []
    - id: definitions-item-body
      name: body
      children: []
body:
  kind: func
  content:
    path: []
    name: enum
    title: Numbered List
    keywords: []
    oneliner: A numbered list.
    element: true
    details: |-
      <p>A numbered list.</p>
      <p>Displays a sequence of items vertically and numbers them consecutively.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code>Automatically numbered:
      <span class="typ-marker">+</span> Preparations
      <span class="typ-marker">+</span> Analysis
      <span class="typ-marker">+</span> Conclusions

      Manually numbered:
      <span class="typ-marker">2.</span> What is the first step?
      <span class="typ-marker">5.</span> I am confused.
      <span class="typ-marker">+</span>  Moving on <span class="typ-escape">...</span>

      Multiple lines:
      <span class="typ-marker">+</span> This enum item has multiple
        lines because the next line
        is indented.

      Function call.
      <span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">[</span>First<span class="typ-punct">]</span><span class="typ-punct">[</span>Second<span class="typ-punct">]</span>
      </code></pre><div class="preview"><img src="/assets/docs/7f1849410764a429269845fbfbe70e06.png" alt="Preview" width="480" height="190"/></div></div>
      <p>You can easily switch all your enumerations to a different numbering style
      with a set rule.</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;a)&quot;</span><span class="typ-punct">)</span>

      <span class="typ-marker">+</span> Starting off <span class="typ-escape">...</span>
      <span class="typ-marker">+</span> Don&#39;t forget step two
      </code></pre><div class="preview"><img src="/assets/docs/e99fd30bf2771e1086e84995cb06129f.png" alt="Preview" width="480" height="190"/></div></div>
      <p>You can also use <a href="/docs/reference/model/enum/#definitions-item"><code>enum.item</code></a> to programmatically customize the
      number of each item in the enumeration:</p>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">[</span>First step<span class="typ-punct">]</span><span class="typ-punct">,</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Fifth step<span class="typ-punct">]</span><span class="typ-punct">,</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Tenth step<span class="typ-punct">]</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/4ef4c95adffafce967eed5d6682bc04a.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">Syntax</h2>
      <p>This functions also has dedicated syntax:</p>
      <ul>
      <li>Starting a line with a plus sign creates an automatically numbered
      enumeration item.</li>
      <li>Starting a line with a number followed by a dot creates an explicitly
      numbered enumeration item.</li>
      </ul>
      <p>Enumeration items can contain multiple paragraphs and other block-level
      content. All content that is indented more than an item's marker becomes
      part of that item.</p>
    example: null
    self: false
    params:
    - name: tight
      details: |-
        <p>If this is <code><span class="typ-key">false</span></code>, the items are spaced apart with
        <a href="/docs/reference/model/enum/#parameters-spacing">enum spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use normal
        <a href="/docs/reference/model/par/#parameters-leading">leading</a> instead. This makes the enumeration more
        compact, which can look better if the items are short.</p>
        <p>In markup mode, the value of this parameter is determined based on
        whether items are separated with a blank line. If items directly follow
        each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
        line, this is set to <code><span class="typ-key">false</span></code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-marker">+</span> If an enum has a lot of text, and
          maybe other inline content, it
          should not be tight anymore.

        <span class="typ-marker">+</span> To make an enum wide, simply
          insert a blank line between the
          items.
        </code></pre><div class="preview"><img src="/assets/docs/c5b946d1e90cf92ed6f50697f0b959a8.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: numbering
      details: |-
        <p>How to number the enumeration. Accepts a
        <a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
        <p>If the numbering pattern contains multiple counting symbols, they apply
        to nested enums. If given a function, the function receives one argument
        if <code>full</code> is <code><span class="typ-key">false</span></code> and multiple arguments if <code>full</code> is <code><span class="typ-key">true</span></code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Different
        <span class="typ-marker">+</span> Numbering
          <span class="typ-marker">+</span> Nested
          <span class="typ-marker">+</span> Items
        <span class="typ-marker">+</span> Style

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-func">super</span><span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">n</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Superscript
        <span class="typ-marker">+</span> Numbering!
        </code></pre><div class="preview"><img src="/assets/docs/8bc6c994985ccebd90877361ea72db0c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      - function
      strings: []
      default: <code><span class="typ-str">&quot;1.&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: start
      details: <p>Which number to start the enumeration with.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
          start<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Skipping<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Ahead<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5e6eccec65aef0b3bd248292e08111e2.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - int
      strings: []
      default: <code><span class="typ-num">1</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: full
      details: |-
        <p>Whether to display the full numbering, including the numbers of
        all parent enumerations.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">,</span> full<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Cook
          <span class="typ-marker">+</span> Heat water
          <span class="typ-marker">+</span> Add integredients
        <span class="typ-marker">+</span> Eat
        </code></pre><div class="preview"><img src="/assets/docs/89cae67aed31e7f8a3ade0fdcbb3bc35.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: indent
      details: <p>The indentation of each item.</p>
      example: null
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: body-indent
      details: <p>The space between the numbering and the body of each item.</p>
      example: null
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0.5em</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: spacing
      details: |-
        <p>The spacing between the items of a wide (non-tight) enumeration.</p>
        <p>If set to <code><span class="typ-key">auto</span></code>, uses the spacing <a href="/docs/reference/layout/block/#parameters-below">below blocks</a>.</p>
      example: null
      types:
      - auto
      - relative
      - fraction
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-align
      details: |-
        <p>The alignment that enum numbers should have.</p>
        <p>By default, this is set to <code>end <span class="typ-op">+</span> top</code>, which aligns enum numbers
        towards end of the current text direction (in left-to-right script,
        for example, this is the same as <code>right</code>) and at the top of the line.
        The choice of <code>end</code> for horizontal alignment of enum numbers is
        usually preferred over <code>start</code>, as numbers then grow away from the
        text instead of towards it, avoiding certain visual issues. This option
        lets you override this behavior, however. (Also to note is that the
        <a href="/docs/reference/model/list/">unordered list</a> uses a different method for this, by giving the
        <code>marker</code> content an alignment directly.).</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>number-align<span class="typ-punct">:</span> start <span class="typ-op">+</span> bottom<span class="typ-punct">)</span>

        Here are some powers of two:
        <span class="typ-marker">1.</span> One
        <span class="typ-marker">2.</span> Two
        <span class="typ-marker">4.</span> Four
        <span class="typ-marker">8.</span> Eight
        <span class="typ-marker">16.</span> Sixteen
        <span class="typ-marker">32.</span> Thirty two
        </code></pre><div class="preview"><img src="/assets/docs/94cdfa3fd3a6ea603c3fb91f73a34c3c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - alignment
      strings: []
      default: <code>end <span class="typ-op">+</span> top</code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: children
      details: |-
        <p>The numbered list's items.</p>
        <p>When using the enum syntax, adjacent items are automatically collected
        into enumerations, even through constructs like for loops.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> phase <span class="typ-key">in</span> <span class="typ-punct">(</span>
           <span class="typ-str">&quot;Launch&quot;</span><span class="typ-punct">,</span>
           <span class="typ-str">&quot;Orbit&quot;</span><span class="typ-punct">,</span>
           <span class="typ-str">&quot;Descent&quot;</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">+</span> <span class="typ-pol">#</span><span class="typ-pol">phase</span><span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/6a018531caaa329d79d90455bb6bec04.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - content
      - array
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    scope:
    - path:
      - enum
      name: item
      title: Numbered List Item
      keywords: []
      oneliner: An enumeration item.
      element: true
      details: <p>An enumeration item.</p>
      example: null
      self: false
      params:
      - name: number
        details: <p>The item's number.</p>
        example: null
        types:
        - none
        - int
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The item's body.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
children: []
