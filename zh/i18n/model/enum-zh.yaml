route: /docs/reference/model/enum/
title: 有序列表
description: '`enum` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: syntax
  name: Syntax
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-tight
    name: tight
    children: []
  - id: parameters-numbering
    name: numbering
    children: []
  - id: parameters-start
    name: start
    children: []
  - id: parameters-full
    name: full
    children: []
  - id: parameters-indent
    name: indent
    children: []
  - id: parameters-body-indent
    name: body-indent
    children: []
  - id: parameters-spacing
    name: spacing
    children: []
  - id: parameters-number-align
    name: number-align
    children: []
  - id: parameters-children
    name: children
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-item
    name: Numbered List Item
    children:
    - id: definitions-item-number
      name: number
      children: []
    - id: definitions-item-body
      name: body
      children: []
body:
  kind: func
  content:
    path: []
    name: enum
    title: 有序列表
    keywords: []
    oneliner: 有序列表。
    element: true
    details: |-
      <p>有序列表。</p>
      <p>垂直显示项目序列并按顺序编号。</p>
      <h2 id="example">示例</h2>
      <div class="previewed-code"><pre><code>自动编号：
      <span class="typ-marker">+</span> 准备工作
      <span class="typ-marker">+</span> 分析
      <span class="typ-marker">+</span> 结论

      手动编号：
      <span class="typ-marker">2.</span> 第一步是什么？
      <span class="typ-marker">5.</span> 我迷惑了。
      <span class="typ-marker">+</span> 继续 <span class="typ-escape">...</span>

      多行：
      <span class="typ-marker">+</span> 此枚举项有多行，因为下一行缩进了。

      函数调用。
      <span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">[</span>First<span class="typ-punct">]</span><span class="typ-punct">[</span>Second<span class="typ-punct">]</span>
      </code></pre><div class="preview"><img src="/assets/docs/7f1849410764a429269845fbfbe70e06.png" alt="Preview" width="480" height="190"/></div></div>
      <p>您可以使用集合规则轻松切换所有枚举的不同编号样式。</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;a)&quot;</span><span class="typ-punct">)</span>

      <span class="typ-marker">+</span> 开始 <span class="typ-escape">...</span>
      <span class="typ-marker">+</span> 不要忘记第二步
      </code></pre><div class="preview"><img src="/assets/docs/e99fd30bf2771e1086e84995cb06129f.png" alt="Preview" width="480" height="190"/></div></div>
      <p>您还可以使用 <a href="/docs/reference/model/enum/#definitions-item"><code>enum.item</code></a> 以编程方式自定义枚举中每个项目的编号：</p>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">[</span>第一步<span class="typ-punct">]</span><span class="typ-punct">,</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">[</span>第五步<span class="typ-punct">]</span><span class="typ-punct">,</span>
        enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">[</span>第十步<span class="typ-punct">]</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/4ef4c95adffafce967eed5d6682bc04a.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">语法</h2>
      <p>此功能还具有专用语法：</p>
      <ul>
      <li>以加号开头的行会创建自动编号的枚举项。</li>
      <li>以数字后跟点号的行会创建明确编号的枚举项。</li>
      </ul>
      <p>枚举项可以包含多个段落和其他块级内容。所有缩进超过项目标记的内容都将成为该项目的一部分。</p>
    example: null
    self: false
    params:
    - name: tight
      details: |-
        <p>如果为 <code><span class="typ-key">false</span></code>，则使用 <a href="/docs/reference/model/enum/#parameters-spacing">enum spacing</a> 将项目间隔开。
        如果为 <code><span class="typ-key">true</span></code>，则使用正常的 <a href="/docs/reference/model/par/#parameters-leading">leading</a>。如果项目很短，则这样做可能看起来更好。</p>
        <p>在标记模式中，此参数的值是基于项目是否用空行分隔而确定的。
        如果项目直接相邻，则设置为 <code><span class="typ-key">true</span></code>；如果项目之间用空行分隔，则设置为 <code><span class="typ-key">false</span></code>。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-marker">+</span> If an enum has a lot of text, and
          maybe other inline content, it
          should not be tight anymore.

        <span class="typ-marker">+</span> To make an enum wide, simply
          insert a blank line between the
          items.
        </code></pre><div class="preview"><img src="/assets/docs/c5b946d1e90cf92ed6f50697f0b959a8.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">true</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: numbering
      details: |-
        <p>如何为枚举编号。接受 <a href="/docs/reference/model/numbering/">numbering pattern or function</a>。</p>
        <p>如果编号模式包含多个计数符号，则它们适用于嵌套的枚举。
        如果给定一个函数，如果 <code>full</code> 为 <code><span class="typ-key">false</span></code>，则函数接收一个参数；如果 <code>full</code> 为 <code><span class="typ-key">true</span></code>，则函数接收多个参数。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Different
        <span class="typ-marker">+</span> Numbering
          <span class="typ-marker">+</span> Nested
          <span class="typ-marker">+</span> Items
        <span class="typ-marker">+</span> Style

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-func">super</span><span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">n</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Superscript
        <span class="typ-marker">+</span> Numbering!
        </code></pre><div class="preview"><img src="/assets/docs/8bc6c994985ccebd90877361ea72db0c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - str
      - function
      strings: []
      default: <code><span class="typ-str">&quot;1.&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: start
      details: <p>从哪个数字开始进行枚举。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
          start<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Skipping<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Ahead<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5e6eccec65aef0b3bd248292e08111e2.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - int
      strings: []
      default: <code><span class="typ-num">1</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: full
      details: |-
        <p>是否显示完整编号，包括所有父枚举的编号。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">,</span> full<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        <span class="typ-marker">+</span> Cook
          <span class="typ-marker">+</span> Heat water
          <span class="typ-marker">+</span> Add integredients
        <span class="typ-marker">+</span> Eat
        </code></pre><div class="preview"><img src="/assets/docs/89cae67aed31e7f8a3ade0fdcbb3bc35.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - bool
      strings: []
      default: <code><span class="typ-key">false</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: indent
      details: <p>每个项目的缩进。</p>
      example: null
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: body-indent
      details: <p>编号和每个项目主体之间的空格。</p>
      example: null
      types:
      - length
      strings: []
      default: <code><span class="typ-num">0.5em</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: spacing
      details: |-
        <p>宽（非紧凑）枚举项目之间的间距。</p>
        <p>如果设置为 <code><span class="typ-key">auto</span></code>，则使用 <a href="/docs/reference/layout/block/#parameters-below">块下方</a> 的间距。</p>
      example: null
      types:
      - auto
      - relative
      - fraction
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: number-align
      details: |-
        <p>枚举号码应具有的对齐方式。</p>
        <p>默认情况下，这设置为 <code>end <span class="typ-op">+</span> top</code>，将枚举号码对齐到当前文本方向的末尾
        （例如，在从左到右的脚本中，这与 <code>right</code> 相同），并位于行顶部。
        对于水平对齐枚举号码，通常首选 <code>end</code>，因为这样数字就远离文本而不是朝向文本，避免了某些视觉问题。
        但是，此选项允许您覆盖此行为。 （还要注意的是，<a href="/docs/reference/model/list/">无序列表</a> 使用不同的方法，通过直接给
        <code>marker</code> 内容提供对齐方式）。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>number-align<span class="typ-punct">:</span> start <span class="typ-op">+</span> bottom<span class="typ-punct">)</span>

        Here are some powers of two:
        <span class="typ-marker">1.</span> One
        <span class="typ-marker">2.</span> Two
        <span class="typ-marker">4.</span> Four
        <span class="typ-marker">8.</span> Eight
        <span class="typ-marker">16.</span> Sixteen
        <span class="typ-marker">32.</span> Thirty two
        </code></pre><div class="preview"><img src="/assets/docs/94cdfa3fd3a6ea603c3fb91f73a34c3c.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - alignment
      strings: []
      default: <code>end <span class="typ-op">+</span> top</code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: children
      details: |-
        <p>编号列表的项目。</p>
        <p>在使用枚举语法时，相邻的项目会自动收集到枚举中，即使通过像 for 循环这样的结构。</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> phase <span class="typ-key">in</span> <span class="typ-punct">(</span>
           <span class="typ-str">&quot;Launch&quot;</span><span class="typ-punct">,</span>
           <span class="typ-str">&quot;Orbit&quot;</span><span class="typ-punct">,</span>
           <span class="typ-str">&quot;Descent&quot;</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">+</span> <span class="typ-pol">#</span><span class="typ-pol">phase</span><span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/6a018531caaa329d79d90455bb6bec04.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - content
      - array
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    scope:
    - path:
      - enum
      name: item
      title: Numbered List Item
      keywords: []
      oneliner: 枚举项。
      element: true
      details: <p>枚举项。</p>
      example: null
      self: false
      params:
      - name: number
        details: <p>项目的编号。</p>
        example: null
        types:
        - none
        - int
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>项目的正文。</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
children: []
