route: /docs/reference/model/document/
title: Document
description: '`document` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-title
    name: title
    children: []
  - id: parameters-author
    name: author
    children: []
  - id: parameters-keywords
    name: keywords
    children: []
  - id: parameters-date
    name: date
    children: []
body:
  kind: func
  content:
    path: []
    name: document
    title: Document
    keywords: []
    oneliner: The root element of a document and its metadata.
    element: true
    details: |-
      <p>The root element of a document and its metadata.</p>
      <p>All documents are automatically wrapped in a <code>document</code> element. You cannot
      create a document element yourself. This function is only used with
      <a href="/docs/reference/styling/#set-rules">set rules</a> to specify document metadata. Such a set
      rule must appear before any of the document's contents.</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span>title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">)</span>

      This has no visible output, but
      embeds metadata into the PDF!
      </code></pre><div class="preview"><img src="/assets/docs/b00d966ea2446c868ea7ea0602641a2c.png" alt="Preview" width="480" height="190"/></div></div>
      <p>Note that metadata set with this function is not rendered within the
      document. Instead, it is embedded in the compiled PDF file.</p>
    example: null
    self: false
    params:
    - name: title
      details: |-
        <p>The document's title. This is often rendered as the title of the
        PDF viewer window.</p>
        <p>While this can be arbitrary content, PDF viewers only support plain text
        titles, so the conversion might be lossy.</p>
      example: null
      types:
      - none
      - content
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: author
      details: <p>The document's authors.</p>
      example: null
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: keywords
      details: <p>The document's keywords.</p>
      example: null
      types:
      - str
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: date
      details: |-
        <p>The document's creation date.</p>
        <p>If this is <code><span class="typ-key">auto</span></code> (default), Typst uses the current date and time.
        Setting it to <code><span class="typ-key">none</span></code> prevents Typst from embedding any creation date
        into the PDF metadata.</p>
        <p>The year component must be at least zero in order to be embedded into a
        PDF.</p>
      example: null
      types:
      - none
      - auto
      - datetime
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    scope: []
children: []
