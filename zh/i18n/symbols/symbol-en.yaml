route: /docs/reference/symbols/symbol/
title: Symbol
description: Symbol ç±»åž‹çš„æ–‡æ¡£
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: constructor
  name: Constructor
  children:
  - id: constructor-variants
    name: variants
    children: []
body:
  kind: type
  content:
    name: symbol
    title: Symbol
    keywords: []
    oneliner: A Unicode symbol.
    details: |-
      <p>A Unicode symbol.</p>
      <p>Typst defines common symbols so that they can easily be written with
      standard keyboards. The symbols are defined in modules, from which they can
      be accessed using <a href="/docs/reference/scripting/#fields">field access notation</a>:</p>
      <ul>
      <li>General symbols are defined in the <a href="/docs/reference/symbols/sym/"><code>sym</code> module</a></li>
      <li>Emoji are defined in the <a href="/docs/reference/symbols/emoji/"><code>emoji</code> module</a></li>
      </ul>
      <p>Moreover, you can define custom symbols with this type's constructor
      function.</p>
      <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">sym</span><span class="typ-punct">.</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">r</span> <span class="typ-escape">\</span>
      <span class="typ-pol">#</span><span class="typ-pol">sym</span><span class="typ-punct">.</span><span class="typ-pol">gt</span><span class="typ-punct">.</span><span class="typ-pol">eq</span><span class="typ-punct">.</span><span class="typ-pol">not</span> <span class="typ-escape">\</span>
      <span class="typ-math-delim">$</span><span class="typ-pol">gt</span><span class="typ-punct">.</span><span class="typ-pol">eq</span><span class="typ-punct">.</span><span class="typ-pol">not</span><span class="typ-math-delim">$</span> <span class="typ-escape">\</span>
      <span class="typ-pol">#</span><span class="typ-pol">emoji</span><span class="typ-punct">.</span><span class="typ-pol">face</span><span class="typ-punct">.</span><span class="typ-pol">halo</span>
      </code></pre><div class="preview"><img src="/assets/docs/bb68a65e391fa7ac5366cd6743423ecb.png" alt="Preview" width="480" height="190"/></div></div>
      <p>Many symbols have different variants, which can be selected by appending the
      modifiers with dot notation. The order of the modifiers is not relevant.
      Visit the documentation pages of the symbol modules and click on a symbol to
      see its available variants.</p>
      <div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">l</span><span class="typ-math-delim">$</span> <span class="typ-escape">\</span>
      <span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">r</span><span class="typ-math-delim">$</span> <span class="typ-escape">\</span>
      <span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">t</span><span class="typ-punct">.</span><span class="typ-pol">quad</span><span class="typ-math-delim">$</span>
      </code></pre><div class="preview"><img src="/assets/docs/08c9505e3725dc389cb54be7b067baff.png" alt="Preview" width="480" height="190"/></div></div>
    constructor:
      path: []
      name: symbol
      title: Construct
      keywords: []
      oneliner: Create a custom symbol with modifiers.
      element: false
      details: <p>Create a custom symbol with modifiers.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> envelope <span class="typ-op">=</span> <span class="typ-func">symbol</span><span class="typ-punct">(</span>
          <span class="typ-str">&quot;ðŸ–‚&quot;</span><span class="typ-punct">,</span>
          <span class="typ-punct">(</span><span class="typ-str">&quot;stamped&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;ðŸ–ƒ&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">(</span><span class="typ-str">&quot;stamped.pen&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;ðŸ–†&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">(</span><span class="typ-str">&quot;lightning&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;ðŸ–„&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">(</span><span class="typ-str">&quot;fly&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;ðŸ–…&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-pol">#</span><span class="typ-pol">envelope</span>
        <span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">stamped</span>
        <span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">stamped</span><span class="typ-punct">.</span><span class="typ-pol">pen</span>
        <span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">lightning</span>
        <span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">fly</span>
        </code></pre><div class="preview"><img src="/assets/docs/ab5c4a1b2fedea0f8e7ef305b0f686ad.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: variants
        details: |-
          <p>The variants of the symbol.</p>
          <p>Can be a just a string consisting of a single character for the
          modifierless variant or an array with two strings specifying the modifiers
          and the symbol. Individual modifiers should be separated by dots. When
          displaying a symbol, Typst selects the first from the variants that have
          all attached modifiers and the minimum number of other modifiers.</p>
        example: null
        types:
        - str
        - array
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - symbol
      scope: []
    scope: []
children: []
