route: /docs/reference/model/
title: 模型
description: Typst 中与模型有关联的函数族的文档
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: definitions
  name: Definitions
  children: []
body:
  kind: category
  content:
    name: model
    title: 模型
    details: |-
      <p>文档结构。</p>
      <p>在这里，您可以找到用于构建文档结构并与该结构进行交互的函数。包括章节标题、图表、文献管理、交叉引用等内容。</p>
    items:
    - name: bibliography
      route: /docs/reference/model/bibliography/
      oneliner: 文献目录 / 引用列表。
      code: true
    - name: cite
      route: /docs/reference/model/cite/
      oneliner: 引用文献或元素。
      code: true
    - name: document
      route: /docs/reference/model/document/
      oneliner: 文档的根元素及其元数据。
      code: true
    - name: emph
      route: /docs/reference/model/emph/
      oneliner: 通过切换至斜体强调内容。
      code: true
    - name: enum
      route: /docs/reference/model/enum/
      oneliner: 有序列表。
      code: true
    - name: figure
      route: /docs/reference/model/figure/
      oneliner: 带有可选描述的图表。
      code: true
    - name: footnote
      route: /docs/reference/model/footnote/
      oneliner: 脚注。
      code: true
    - name: heading
      route: /docs/reference/model/heading/
      oneliner: 章节标题。
      code: true
    - name: link
      route: /docs/reference/model/link/
      oneliner: 链接到 URL 或文档中的位置。
      code: true
    - name: list
      route: /docs/reference/model/list/
      oneliner: 无序列表。
      code: true
    - name: numbering
      route: /docs/reference/model/numbering/
      oneliner: 对有序的事物应用编号。
      code: true
    - name: outline
      route: /docs/reference/model/outline/
      oneliner: 目录、图表或其他元素的大纲。
      code: true
    - name: par
      route: /docs/reference/model/par/
      oneliner: 将文本、间距和内联级元素排列成段落。
      code: true
    - name: parbreak
      route: /docs/reference/model/parbreak/
      oneliner: 段落分隔。
      code: true
    - name: quote
      route: /docs/reference/model/quote/
      oneliner: 显示引用，带有一系列可选属性。
      code: true
    - name: ref
      route: /docs/reference/model/ref/
      oneliner: 对标签或文献的引用。
      code: true
    - name: strong
      route: /docs/reference/model/strong/
      oneliner: 通过增加字重强调内容。
      code: true
    - name: table
      route: /docs/reference/model/table/
      oneliner: 表格。
      code: true
    - name: terms
      route: /docs/reference/model/terms/
      oneliner: 术语列表。
      code: true
    shorthands: null
children:
- route: /docs/reference/model/bibliography/
  title: Bibliography
  description: '`bibliography` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: styles
    name: Styles
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-path
      name: path
      children: []
    - id: parameters-title
      name: title
      children: []
    - id: parameters-full
      name: full
      children: []
    - id: parameters-style
      name: style
      children: []
  body:
    kind: func
    content:
      path: []
      name: bibliography
      title: Bibliography
      keywords: []
      oneliner: A bibliography / reference listing.
      element: true
      details: |-
        <p>A bibliography / reference listing.</p>
        <p>You can create a new bibliography by calling this function with a path
        to a bibliography file in either one of two formats:</p>
        <ul>
        <li>A Hayagriva <code>.yml</code> file. Hayagriva is a new bibliography file format
        designed for use with Typst. Visit its
        <a href="https://github.com/typst/hayagriva/blob/main/docs/file-format.md">documentation</a>
        for more details.</li>
        <li>A BibLaTeX <code>.bib</code> file.</li>
        </ul>
        <p>As soon as you add a bibliography somewhere in your document, you can start
        citing things with reference syntax (<code><span class="typ-ref">@key</span></code>) or explicit calls to the
        <a href="/docs/reference/model/cite/">citation</a> function (<code><span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;key&gt;</span><span class="typ-punct">)</span></code>). The bibliography will only
        show entries for works that were referenced in the document.</p>
        <h2 id="styles">Styles</h2>
        <p>Typst offers a wide selection of built-in
        <a href="/docs/reference/model/bibliography/#parameters-style">citation and bibliography styles</a>. Beyond those, you
        can add and use custom <a href="https://citationstyles.org/">CSL</a> (Citation Style
        Language) files. Wondering which style to use? Here are some good defaults
        based on what discipline you're working in:</p>
        <table><thead><tr><th>Fields</th><th>Typical Styles</th></tr></thead><tbody>
        <tr><td>Engineering, IT</td><td><code><span class="typ-str">&quot;ieee&quot;</span></code></td></tr>
        <tr><td>Psychology, Life Sciences</td><td><code><span class="typ-str">&quot;apa&quot;</span></code></td></tr>
        <tr><td>Social sciences</td><td><code><span class="typ-str">&quot;chicago-author-date&quot;</span></code></td></tr>
        <tr><td>Humanities</td><td><code><span class="typ-str">&quot;mla&quot;</span></code>, <code><span class="typ-str">&quot;chicago-notes&quot;</span></code>, <code><span class="typ-str">&quot;harvard-cite-them-right&quot;</span></code></td></tr>
        <tr><td>Economics</td><td><code><span class="typ-str">&quot;harvard-cite-them-right&quot;</span></code></td></tr>
        <tr><td>Physics</td><td><code><span class="typ-str">&quot;american-physics-society&quot;</span></code></td></tr>
        </tbody></table>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>This was already noted by
        pirates long ago. <span class="typ-ref">@arrgh</span>

        Multiple sources say <span class="typ-escape">...</span>
        <span class="typ-ref">@arrgh</span> <span class="typ-ref">@netwok</span>.

        <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5ef87e0866571ac9b69ad2681174301c.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: path
        details: <p>Path(s) to Hayagriva <code>.yml</code> and/or BibLaTeX <code>.bib</code>
          files.</p>
        example: null
        types:
        - str
        - array
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: title
        details: |-
          <p>The title of the bibliography.</p>
          <ul>
          <li>When set to <code><span class="typ-key">auto</span></code>, an appropriate title for the
          <a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
          <li>When set to <code><span class="typ-key">none</span></code>, the bibliography will not have a title.</li>
          <li>A custom title can be set by passing content.</li>
          </ul>
          <p>The bibliography's heading will not be numbered by default, but you can
          force it to be with a show-set rule:
          <code><span class="typ-key">show</span> <span class="typ-func">bibliography</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span></code></p>
        example: null
        types:
        - none
        - auto
        - content
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: full
        details: |-
          <p>Whether to include all works from the given bibliography files, even
          those that weren't cited in the document.</p>
          <p>To selectively add individual cited works without showing them, you can
          also use the <code>cite</code> function with <a href="/docs/reference/model/cite/#parameters-form"><code>form</code></a> set to <code><span class="typ-key">none</span></code>.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: style
        details: |-
          <p>The bibliography style.</p>
          <p>Should be either one of the built-in styles (see below) or a path to
          a <a href="https://citationstyles.org/">CSL file</a>. Some of the styles listed
          below appear twice, once with their full name and once with a short
          alias.</p>
        example: null
        types:
        - str
        strings:
        - string: american-anthropological-association
          details: <p>American Anthropological Association</p>
        - string: springer-lecture-notes-in-computer-science
          details: <p>Springer - Lecture Notes in Computer Science</p>
        - string: american-medical-association
          details: <p>American Medical Association 11th edition</p>
        - string: sage-vancouver
          details: <p>SAGE - Vancouver</p>
        - string: biomed-central
          details: <p>BioMed Central</p>
        - string: american-society-of-civil-engineers
          details: <p>American Society of Civil Engineers</p>
        - string: taylor-and-francis-chicago-author-date
          details: <p>Taylor &amp; Francis - Chicago Manual of Style (author-date)</p>
        - string: gb-7714-2015-note
          details: <p>China National Standard GB/T 7714-2015 (note, 中文)</p>
        - string: american-society-for-microbiology
          details: <p>American Society for Microbiology</p>
        - string: american-meteorological-society
          details: <p>American Meteorological Society</p>
        - string: future-medicine
          details: <p>Future Medicine journals</p>
        - string: bristol-university-press
          details: <p>Bristol University Press</p>
        - string: public-library-of-science
          details: <p>Public Library of Science</p>
        - string: pensoft
          details: <p>Pensoft Journals</p>
        - string: american-institute-of-aeronautics-and-astronautics
          details: <p>American Institute of Aeronautics and Astronautics</p>
        - string: mary-ann-liebert-vancouver
          details: <p>Mary Ann Liebert - Vancouver</p>
        - string: modern-humanities-research-association
          details: <p>Modern Humanities Research Association 3rd edition (note with
            bibliography)</p>
        - string: springer-socpsych-author-date
          details: <p>Springer - SocPsych (author-date)</p>
        - string: trends
          details: <p>Trends journals</p>
        - string: gost-r-705-2008-numeric
          details: <p>Russian GOST R 7.0.5-2008 (numeric)</p>
        - string: american-political-science-association
          details: <p>American Political Science Association</p>
        - string: future-science
          details: <p>Future Science Group</p>
        - string: association-for-computing-machinery
          details: <p>Association for Computing Machinery</p>
        - string: elsevier-harvard
          details: <p>Elsevier - Harvard (with titles)</p>
        - string: american-chemical-society
          details: <p>American Chemical Society</p>
        - string: cell
          details: <p>Cell</p>
        - string: royal-society-of-chemistry
          details: <p>Royal Society of Chemistry</p>
        - string: sist02
          details: <p>SIST02 (日本語)</p>
        - string: gb-7714-2005-numeric
          details: <p>China National Standard GB/T 7714-2005 (numeric, 中文)</p>
        - string: institute-of-electrical-and-electronics-engineers
          details: <p>IEEE</p>
        - string: springer-humanities-author-date
          details: <p>Springer - Humanities (author-date)</p>
        - string: deutsche-gesellschaft-für-psychologie
          details: <p>Deutsche Gesellschaft für Psychologie 5. Auflage (Deutsch)</p>
        - string: springer-basic-author-date
          details: <p>Springer - Basic (author-date)</p>
        - string: institute-of-physics-numeric
          details: <p>Institute of Physics (numeric)</p>
        - string: vancouver
          details: <p>Vancouver</p>
        - string: nature
          details: <p>Nature</p>
        - string: current-opinion
          details: <p>Current Opinion journals</p>
        - string: annual-reviews-author-date
          details: <p>Annual Reviews (author-date)</p>
        - string: american-institute-of-physics
          details: <p>American Institute of Physics 4th edition</p>
        - string: gb-7714-2015-numeric
          details: <p>China National Standard GB/T 7714-2015 (numeric, 中文)</p>
        - string: the-lancet
          details: <p>The Lancet</p>
        - string: springer-basic
          details: <p>Springer - Basic (numeric, brackets)</p>
        - string: american-geophysical-union
          details: <p>American Geophysical Union</p>
        - string: turabian-fullnote-8
          details: <p>Turabian 8th edition (full note)</p>
        - string: taylor-and-francis-national-library-of-medicine
          details: <p>Taylor &amp; Francis - National Library of Medicine</p>
        - string: american-physiological-society
          details: <p>American Physiological Society</p>
        - string: thieme
          details: <p>Thieme-German (Deutsch)</p>
        - string: copernicus
          details: <p>Copernicus Publications</p>
        - string: the-institution-of-engineering-and-technology
          details: <p>The Institution of Engineering and Technology</p>
        - string: annual-reviews
          details: <p>Annual Reviews (sorted by order of appearance)</p>
        - string: deutsche-sprache
          details: <p>Deutsche Sprache (Deutsch)</p>
        - string: harvard-cite-them-right
          details: <p>Cite Them Right 12th edition - Harvard</p>
        - string: chicago-fullnotes
          details: <p>Chicago Manual of Style 17th edition (full note)</p>
        - string: iso-690-author-date
          details: <p>ISO-690 (author-date, English)</p>
        - string: council-of-science-editors-author-date
          details: <p>Council of Science Editors, Name-Year (author-date)</p>
        - string: springer-mathphys
          details: <p>Springer - MathPhys (numeric, brackets)</p>
        - string: american-society-of-mechanical-engineers
          details: <p>American Society of Mechanical Engineers</p>
        - string: karger
          details: <p>Karger journals</p>
        - string: multidisciplinary-digital-publishing-institute
          details: <p>Multidisciplinary Digital Publishing Institute</p>
        - string: american-psychological-association
          details: <p>American Psychological Association 7th edition</p>
        - string: modern-language-association-8
          details: <p>Modern Language Association 8th edition</p>
        - string: gb-7714-2015-author-date
          details: <p>China National Standard GB/T 7714-2015 (author-date, 中文)</p>
        - string: springer-vancouver
          details: <p>Springer - Vancouver (brackets)</p>
        - string: british-medical-journal
          details: <p>BMJ</p>
        - string: turabian-author-date
          details: <p>Turabian 9th edition (author-date)</p>
        - string: chicago-author-date
          details: <p>Chicago Manual of Style 17th edition (author-date)</p>
        - string: associacao-brasileira-de-normas-tecnicas
          details: <p>Associação Brasileira de Normas Técnicas (Português - Brasil)</p>
        - string: vancouver-superscript
          details: <p>Vancouver (superscript)</p>
        - string: angewandte-chemie
          details: <p>Angewandte Chemie International Edition</p>
        - string: elsevier-with-titles
          details: <p>Elsevier (numeric, with titles)</p>
        - string: iso-690-numeric
          details: <p>ISO-690 (numeric, English)</p>
        - string: modern-language-association
          details: <p>Modern Language Association 9th edition</p>
        - string: council-of-science-editors
          details: <p>Council of Science Editors, Citation-Sequence (numeric, brackets)</p>
        - string: spie
          details: <p>SPIE journals</p>
        - string: springer-fachzeitschriften-medizin-psychologie
          details: <p>Springer - Fachzeitschriften Medizin Psychologie (Deutsch)</p>
        - string: frontiers
          details: <p>Frontiers journals</p>
        - string: american-physics-society
          details: <p>American Physical Society</p>
        - string: american-sociological-association
          details: <p>American Sociological Association 6th edition</p>
        - string: elsevier-vancouver
          details: <p>Elsevier - Vancouver</p>
        - string: chicago-notes
          details: <p>Chicago Manual of Style 17th edition (note)</p>
        - string: alphanumeric
          details: <p>Alphanumeric</p>
        default: <code><span class="typ-str">&quot;ieee&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/list/
  title: Bullet List
  description: '`list` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-tight
      name: tight
      children: []
    - id: parameters-marker
      name: marker
      children: []
    - id: parameters-indent
      name: indent
      children: []
    - id: parameters-body-indent
      name: body-indent
      children: []
    - id: parameters-spacing
      name: spacing
      children: []
    - id: parameters-children
      name: children
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-item
      name: Bullet List Item
      children:
      - id: definitions-item-body
        name: body
        children: []
  body:
    kind: func
    content:
      path: []
      name: list
      title: Bullet List
      keywords: []
      oneliner: A bullet list.
      element: true
      details: |-
        <p>A bullet list.</p>
        <p>Displays a sequence of items vertically, with each item introduced by a
        marker.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Normal list.
        <span class="typ-marker">-</span> Text
        <span class="typ-marker">-</span> Math
        <span class="typ-marker">-</span> Layout
        <span class="typ-marker">-</span> <span class="typ-escape">...</span>

        Multiple lines.
        <span class="typ-marker">-</span> This list item spans multiple
          lines because it is indented.

        Function call.
        <span class="typ-func">#</span><span class="typ-func">list</span><span class="typ-punct">(</span>
          <span class="typ-punct">[</span>Foundations<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Calculate<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Construct<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Data Loading<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/44d94f354be4a94abad08aaaf05b8bf6.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This functions also has dedicated syntax: Start a line with a hyphen,
        followed by a space to create a list item. A list item can contain multiple
        paragraphs and other block-level content. All content that is indented
        more than an item's marker becomes part of that item.</p>
      example: null
      self: false
      params:
      - name: tight
        details: |-
          <p>If this is <code><span class="typ-key">false</span></code>, the items are spaced apart with
          <a href="/docs/reference/model/list/#parameters-spacing">list spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use normal
          <a href="/docs/reference/model/par/#parameters-leading">leading</a> instead. This makes the list more compact, which
          can look better if the items are short.</p>
          <p>In markup mode, the value of this parameter is determined based on
          whether items are separated with a blank line. If items directly follow
          each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
          line, this is set to <code><span class="typ-key">false</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-marker">-</span> If a list has a lot of text, and
            maybe other inline content, it
            should not be tight anymore.

          <span class="typ-marker">-</span> To make a list wide, simply insert
            a blank line between the items.
          </code></pre><div class="preview"><img src="/assets/docs/be533bb8cc4d52ede47b0d7ac5c265b6.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: marker
        details: |-
          <p>The marker which introduces each item.</p>
          <p>Instead of plain content, you can also pass an array with multiple
          markers that should be used for nested lists. If the list nesting depth
          exceeds the number of markers, the last one is repeated. For total
          control, you may pass a function that maps the list's nesting depth
          (starting from <code><span class="typ-num">0</span></code>) to a desired marker.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">list</span><span class="typ-punct">(</span>marker<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-escape">--</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
          <span class="typ-marker">-</span> A more classic list
          <span class="typ-marker">-</span> With en-dashes

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">list</span><span class="typ-punct">(</span>marker<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-punct">[</span>•<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-escape">--</span><span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-marker">-</span> Top-level
            <span class="typ-marker">-</span> Nested
            <span class="typ-marker">-</span> Items
          <span class="typ-marker">-</span> Items
          </code></pre><div class="preview"><img src="/assets/docs/18c221333ad89a86ce57886c90bb3625.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - content
        - array
        - function
        strings: []
        default: <code><span class="typ-punct">[</span>•<span class="typ-punct">]</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: indent
        details: <p>The indent of each item.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body-indent
        details: <p>The spacing between the marker and the body of each item.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0.5em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: spacing
        details: |-
          <p>The spacing between the items of a wide (non-tight) list.</p>
          <p>If set to <code><span class="typ-key">auto</span></code>, uses the spacing <a href="/docs/reference/layout/block/#parameters-below">below blocks</a>.</p>
        example: null
        types:
        - auto
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: |-
          <p>The bullet list's children.</p>
          <p>When using the list syntax, adjacent items are automatically collected
          into lists, even through constructs like for loops.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> letter <span class="typ-key">in</span> <span class="typ-str">&quot;ABC&quot;</span> <span class="typ-punct">[</span>
            <span class="typ-marker">-</span> Letter <span class="typ-pol">#</span><span class="typ-pol">letter</span>
          <span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/83401976648525e88cced5e8839bfbb6.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope:
      - path:
        - list
        name: item
        title: Bullet List Item
        keywords: []
        oneliner: A bullet list item.
        element: true
        details: <p>A bullet list item.</p>
        example: null
        self: false
        params:
        - name: body
          details: <p>The item's body.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        returns:
        - content
        scope: []
  children: []
- route: /docs/reference/model/cite/
  title: Cite
  description: '`cite` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-key
      name: key
      children: []
    - id: parameters-supplement
      name: supplement
      children: []
    - id: parameters-form
      name: form
      children: []
    - id: parameters-style
      name: style
      children: []
  body:
    kind: func
    content:
      path: []
      name: cite
      title: Cite
      keywords: []
      oneliner: Cite a work from the bibliography.
      element: true
      details: |-
        <p>Cite a work from the bibliography.</p>
        <p>Before you starting citing, you need to add a <a href="/docs/reference/model/bibliography/">bibliography</a>
        somewhere in your document.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>This was already noted by
        pirates long ago. <span class="typ-ref">@arrgh</span>

        Multiple sources say <span class="typ-escape">...</span>
        <span class="typ-ref">@arrgh</span> <span class="typ-ref">@netwok</span>.

        You can also call <span class="typ-raw">`cite`</span>
        explicitly. <span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;arrgh&gt;</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/bb07d2a9021052ed3feb5a6b11284f4a.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function indirectly has dedicated syntax. <a href="/docs/reference/model/ref/">References</a> can be
        used to cite works from the bibliography. The label then corresponds to the
        citation key.</p>
      example: null
      self: false
      params:
      - name: key
        details: |-
          <p>The citation key that identifies the entry in the bibliography that
          shall be cited, as a label.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-comment">// All the same</span>
          <span class="typ-ref">@netwok</span> <span class="typ-escape">\</span>
          <span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;netwok&gt;</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;netwok&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/e0a009c49d3ca68e4e7127e326f8123c.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - label
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: supplement
        details: |-
          <p>A supplement for the citation such as page or chapter number.</p>
          <p>In reference syntax, the supplement can be added in square brackets:</p>
        example: |-
          <div class="previewed-code"><pre><code>This has been proven. <span class="typ-ref">@distress<span class="typ-punct">[</span>p.<span class="typ-escape">~</span>7<span class="typ-punct">]</span></span>

          <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/481a7a6614e1edde3e16e2961c72a1e2.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: form
        details: |-
          <p>The kind of citation to produce. Different forms are useful in different
          scenarios: A normal citation is useful as a source at the end of a
          sentence, while a &quot;prose&quot; citation is more suitable for inclusion in the
          flow of text.</p>
          <p>If set to <code><span class="typ-key">none</span></code>, the cited work is included in the bibliography, but
          nothing will be displayed.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;netwok&gt;</span><span class="typ-punct">,</span> form<span class="typ-punct">:</span> <span class="typ-str">&quot;prose&quot;</span><span class="typ-punct">)</span>
          show the outsized effects of
          pirate life on the human psyche.
          </code></pre><div class="preview"><img src="/assets/docs/ab93f7b6b59da5ccd3007651be75c5e9.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - str
        strings:
        - string: normal
          details: <p>Display in the standard way for the active style.</p>
        - string: prose
          details: <p>Produces a citation that is suitable for inclusion in a sentence.</p>
        - string: full
          details: <p>Mimics a bibliography entry, with full information about the
            cited work.</p>
        - string: author
          details: <p>Shows only the cited work's author(s).</p>
        - string: year
          details: <p>Shows only the cited work's year.</p>
        default: <code><span class="typ-str">&quot;normal&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: style
        details: |-
          <p>The citation style.</p>
          <p>Should be either <code><span class="typ-key">auto</span></code>, one of the built-in styles (see below) or a
          path to a <a href="https://citationstyles.org/">CSL file</a>. Some of the styles
          listed below appear twice, once with their full name and once with a
          short alias.</p>
          <p>When set to <code><span class="typ-key">auto</span></code>, automatically use the
          <a href="/docs/reference/model/bibliography/#parameters-style">bibliography's style</a> for the citations.</p>
        example: null
        types:
        - auto
        - str
        strings:
        - string: american-anthropological-association
          details: <p>American Anthropological Association</p>
        - string: springer-lecture-notes-in-computer-science
          details: <p>Springer - Lecture Notes in Computer Science</p>
        - string: american-medical-association
          details: <p>American Medical Association 11th edition</p>
        - string: sage-vancouver
          details: <p>SAGE - Vancouver</p>
        - string: biomed-central
          details: <p>BioMed Central</p>
        - string: american-society-of-civil-engineers
          details: <p>American Society of Civil Engineers</p>
        - string: taylor-and-francis-chicago-author-date
          details: <p>Taylor &amp; Francis - Chicago Manual of Style (author-date)</p>
        - string: gb-7714-2015-note
          details: <p>China National Standard GB/T 7714-2015 (note, 中文)</p>
        - string: american-society-for-microbiology
          details: <p>American Society for Microbiology</p>
        - string: american-meteorological-society
          details: <p>American Meteorological Society</p>
        - string: future-medicine
          details: <p>Future Medicine journals</p>
        - string: bristol-university-press
          details: <p>Bristol University Press</p>
        - string: public-library-of-science
          details: <p>Public Library of Science</p>
        - string: pensoft
          details: <p>Pensoft Journals</p>
        - string: american-institute-of-aeronautics-and-astronautics
          details: <p>American Institute of Aeronautics and Astronautics</p>
        - string: mary-ann-liebert-vancouver
          details: <p>Mary Ann Liebert - Vancouver</p>
        - string: modern-humanities-research-association
          details: <p>Modern Humanities Research Association 3rd edition (note with
            bibliography)</p>
        - string: springer-socpsych-author-date
          details: <p>Springer - SocPsych (author-date)</p>
        - string: trends
          details: <p>Trends journals</p>
        - string: gost-r-705-2008-numeric
          details: <p>Russian GOST R 7.0.5-2008 (numeric)</p>
        - string: american-political-science-association
          details: <p>American Political Science Association</p>
        - string: future-science
          details: <p>Future Science Group</p>
        - string: association-for-computing-machinery
          details: <p>Association for Computing Machinery</p>
        - string: elsevier-harvard
          details: <p>Elsevier - Harvard (with titles)</p>
        - string: american-chemical-society
          details: <p>American Chemical Society</p>
        - string: cell
          details: <p>Cell</p>
        - string: royal-society-of-chemistry
          details: <p>Royal Society of Chemistry</p>
        - string: sist02
          details: <p>SIST02 (日本語)</p>
        - string: gb-7714-2005-numeric
          details: <p>China National Standard GB/T 7714-2005 (numeric, 中文)</p>
        - string: institute-of-electrical-and-electronics-engineers
          details: <p>IEEE</p>
        - string: springer-humanities-author-date
          details: <p>Springer - Humanities (author-date)</p>
        - string: deutsche-gesellschaft-für-psychologie
          details: <p>Deutsche Gesellschaft für Psychologie 5. Auflage (Deutsch)</p>
        - string: springer-basic-author-date
          details: <p>Springer - Basic (author-date)</p>
        - string: institute-of-physics-numeric
          details: <p>Institute of Physics (numeric)</p>
        - string: vancouver
          details: <p>Vancouver</p>
        - string: nature
          details: <p>Nature</p>
        - string: current-opinion
          details: <p>Current Opinion journals</p>
        - string: annual-reviews-author-date
          details: <p>Annual Reviews (author-date)</p>
        - string: american-institute-of-physics
          details: <p>American Institute of Physics 4th edition</p>
        - string: gb-7714-2015-numeric
          details: <p>China National Standard GB/T 7714-2015 (numeric, 中文)</p>
        - string: the-lancet
          details: <p>The Lancet</p>
        - string: springer-basic
          details: <p>Springer - Basic (numeric, brackets)</p>
        - string: american-geophysical-union
          details: <p>American Geophysical Union</p>
        - string: turabian-fullnote-8
          details: <p>Turabian 8th edition (full note)</p>
        - string: taylor-and-francis-national-library-of-medicine
          details: <p>Taylor &amp; Francis - National Library of Medicine</p>
        - string: american-physiological-society
          details: <p>American Physiological Society</p>
        - string: thieme
          details: <p>Thieme-German (Deutsch)</p>
        - string: copernicus
          details: <p>Copernicus Publications</p>
        - string: the-institution-of-engineering-and-technology
          details: <p>The Institution of Engineering and Technology</p>
        - string: annual-reviews
          details: <p>Annual Reviews (sorted by order of appearance)</p>
        - string: deutsche-sprache
          details: <p>Deutsche Sprache (Deutsch)</p>
        - string: harvard-cite-them-right
          details: <p>Cite Them Right 12th edition - Harvard</p>
        - string: chicago-fullnotes
          details: <p>Chicago Manual of Style 17th edition (full note)</p>
        - string: iso-690-author-date
          details: <p>ISO-690 (author-date, English)</p>
        - string: council-of-science-editors-author-date
          details: <p>Council of Science Editors, Name-Year (author-date)</p>
        - string: springer-mathphys
          details: <p>Springer - MathPhys (numeric, brackets)</p>
        - string: american-society-of-mechanical-engineers
          details: <p>American Society of Mechanical Engineers</p>
        - string: karger
          details: <p>Karger journals</p>
        - string: multidisciplinary-digital-publishing-institute
          details: <p>Multidisciplinary Digital Publishing Institute</p>
        - string: american-psychological-association
          details: <p>American Psychological Association 7th edition</p>
        - string: modern-language-association-8
          details: <p>Modern Language Association 8th edition</p>
        - string: gb-7714-2015-author-date
          details: <p>China National Standard GB/T 7714-2015 (author-date, 中文)</p>
        - string: springer-vancouver
          details: <p>Springer - Vancouver (brackets)</p>
        - string: british-medical-journal
          details: <p>BMJ</p>
        - string: turabian-author-date
          details: <p>Turabian 9th edition (author-date)</p>
        - string: chicago-author-date
          details: <p>Chicago Manual of Style 17th edition (author-date)</p>
        - string: associacao-brasileira-de-normas-tecnicas
          details: <p>Associação Brasileira de Normas Técnicas (Português - Brasil)</p>
        - string: vancouver-superscript
          details: <p>Vancouver (superscript)</p>
        - string: angewandte-chemie
          details: <p>Angewandte Chemie International Edition</p>
        - string: elsevier-with-titles
          details: <p>Elsevier (numeric, with titles)</p>
        - string: iso-690-numeric
          details: <p>ISO-690 (numeric, English)</p>
        - string: modern-language-association
          details: <p>Modern Language Association 9th edition</p>
        - string: council-of-science-editors
          details: <p>Council of Science Editors, Citation-Sequence (numeric, brackets)</p>
        - string: spie
          details: <p>SPIE journals</p>
        - string: springer-fachzeitschriften-medizin-psychologie
          details: <p>Springer - Fachzeitschriften Medizin Psychologie (Deutsch)</p>
        - string: frontiers
          details: <p>Frontiers journals</p>
        - string: american-physics-society
          details: <p>American Physical Society</p>
        - string: american-sociological-association
          details: <p>American Sociological Association 6th edition</p>
        - string: elsevier-vancouver
          details: <p>Elsevier - Vancouver</p>
        - string: chicago-notes
          details: <p>Chicago Manual of Style 17th edition (note)</p>
        - string: alphanumeric
          details: <p>Alphanumeric</p>
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/document/
  title: Document
  description: '`document` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-title
      name: title
      children: []
    - id: parameters-author
      name: author
      children: []
    - id: parameters-keywords
      name: keywords
      children: []
    - id: parameters-date
      name: date
      children: []
  body:
    kind: func
    content:
      path: []
      name: document
      title: Document
      keywords: []
      oneliner: The root element of a document and its metadata.
      element: true
      details: |-
        <p>The root element of a document and its metadata.</p>
        <p>All documents are automatically wrapped in a <code>document</code> element. You cannot
        create a document element yourself. This function is only used with
        <a href="/docs/reference/styling/#set-rules">set rules</a> to specify document metadata. Such a set
        rule must appear before any of the document's contents.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span>title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">)</span>

        This has no visible output, but
        embeds metadata into the PDF!
        </code></pre><div class="preview"><img src="/assets/docs/b00d966ea2446c868ea7ea0602641a2c.png" alt="Preview" width="480" height="190"/></div></div>
        <p>Note that metadata set with this function is not rendered within the
        document. Instead, it is embedded in the compiled PDF file.</p>
      example: null
      self: false
      params:
      - name: title
        details: |-
          <p>The document's title. This is often rendered as the title of the
          PDF viewer window.</p>
          <p>While this can be arbitrary content, PDF viewers only support plain text
          titles, so the conversion might be lossy.</p>
        example: null
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: author
        details: <p>The document's authors.</p>
        example: null
        types:
        - str
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: keywords
        details: <p>The document's keywords.</p>
        example: null
        types:
        - str
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: date
        details: |-
          <p>The document's creation date.</p>
          <p>If this is <code><span class="typ-key">auto</span></code> (default), Typst uses the current date and time.
          Setting it to <code><span class="typ-key">none</span></code> prevents Typst from embedding any creation date
          into the PDF metadata.</p>
          <p>The year component must be at least zero in order to be embedded into a
          PDF.</p>
        example: null
        types:
        - none
        - auto
        - datetime
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/emph/
  title: Emphasis
  description: '`emph` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: emph
      title: Emphasis
      keywords: []
      oneliner: Emphasizes content by toggling italics.
      element: true
      details: |-
        <p>Emphasizes content by toggling italics.</p>
        <ul>
        <li>If the current <a href="/docs/reference/text/text/#parameters-style">text style</a> is <code><span class="typ-str">&quot;normal&quot;</span></code>, this turns it
        into <code><span class="typ-str">&quot;italic&quot;</span></code>.</li>
        <li>If it is already <code><span class="typ-str">&quot;italic&quot;</span></code> or <code><span class="typ-str">&quot;oblique&quot;</span></code>, it turns it back to
        <code><span class="typ-str">&quot;normal&quot;</span></code>.</li>
        </ul>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>This is <span class="typ-emph">_emphasized._</span> <span class="typ-escape">\</span>
        This is <span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">[</span>too.<span class="typ-punct">]</span>

        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">emph</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
          <span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">,</span> it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
        <span class="typ-punct">}</span>

        This is <span class="typ-emph">_emphasized_</span> differently.
        </code></pre><div class="preview"><img src="/assets/docs/e994151e9b1baafdc57d2fb5046ee42b.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function also has dedicated syntax: To emphasize content, simply
        enclose it in underscores (<code>_</code>). Note that this only works at word
        boundaries. To emphasize part of a word, you have to use the function.</p>
      example: null
      self: false
      params:
      - name: body
        details: <p>The content to emphasize.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/figure/
  title: Figure
  description: '`figure` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: examples
    name: Examples
    children: []
  - id: figure-behaviour
    name: Figure Behaviour
    children: []
  - id: caption-customization
    name: Caption Customization
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-body
      name: body
      children: []
    - id: parameters-placement
      name: placement
      children: []
    - id: parameters-caption
      name: caption
      children: []
    - id: parameters-kind
      name: kind
      children: []
    - id: parameters-supplement
      name: supplement
      children: []
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-gap
      name: gap
      children: []
    - id: parameters-outlined
      name: outlined
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-caption
      name: Caption
      children:
      - id: definitions-caption-position
        name: position
        children: []
      - id: definitions-caption-separator
        name: separator
        children: []
      - id: definitions-caption-body
        name: body
        children: []
  body:
    kind: func
    content:
      path: []
      name: figure
      title: Figure
      keywords: []
      oneliner: A figure with an optional caption.
      element: true
      details: |-
        <p>A figure with an optional caption.</p>
        <p>Automatically detects its kind to select the correct counting track. For
        example, figures containing images will be numbered separately from figures
        containing tables.</p>
        <h2 id="examples">Examples</h2>
        <p>The example below shows a basic figure with an image:</p>
        <div class="previewed-code"><pre><code><span class="typ-ref">@glacier</span> shows a glacier. Glaciers
        are complex systems.

        <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A curious figure.<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span> <span class="typ-label">&lt;glacier&gt;</span>
        </code></pre><div class="preview"><img src="/assets/docs/b09671cdf78ea3377e94f6b859169380.png" alt="Preview" width="480" height="190"/></div></div>
        <p>You can also insert <a href="/docs/reference/model/table/">tables</a> into figures to give them a caption.
        The figure will detect this and automatically use a separate counter.</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
          <span class="typ-func">table</span><span class="typ-punct">(</span>
            columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>t<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>y<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.3s<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.4s<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.8s<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Timing results<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/a387ba00bc1048db021396309eaa9db6.png" alt="Preview" width="480" height="190"/></div></div>
        <p>This behaviour can be overridden by explicitly specifying the figure's
        <code>kind</code>. All figures of the same kind share a common counter.</p>
        <h2 id="figure-behaviour">Figure behaviour</h2>
        <p>By default, figures are placed within the flow of content. To make them
        float to the top or bottom of the page, you can use the
        <a href="/docs/reference/model/figure/#parameters-placement"><code>placement</code></a> argument.</p>
        <p>If your figure is too large and its contents are breakable across pages
        (e.g. if it contains a large table), then you can make the figure itself
        breakable across pages as well with this show rule:</p>
        <pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>breakable<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        </code></pre>
        <p>See the <a href="/docs/reference/layout/block/#parameters-breakable">block</a> documentation for more information about
        breakable and non-breakable blocks.</p>
        <h2 id="caption-customization">Caption customization</h2>
        <p>You can modify the appearance of the figure's caption with its associated
        <a href="/docs/reference/model/figure/#definitions-caption"><code>caption</code></a> function. In the example below, we emphasize
        all captions:</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> <span class="typ-func">emph</span>

        <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
          <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I am emphasized!<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/d6f2c1c705909d49bde78ef346cf66a4.png" alt="Preview" width="480" height="190"/></div></div>
        <p>By using a <a href="/docs/reference/foundations/function/#definitions-where"><code>where</code></a> selector, we can scope such rules to
        specific kinds of figures. For example, to position the caption above
        tables, but keep it below for all other kinds of figures, we could write the
        following show-set rule:</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
          kind<span class="typ-punct">:</span> table
        <span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>position<span class="typ-punct">:</span> top<span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
          <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">[</span>D<span class="typ-punct">]</span><span class="typ-punct">,</span>
          caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m up here<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/a0595def8feb7fdaf8b71b9cf3b8851f.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: body
        details: <p>The content of the figure. Often, an <a href="/docs/reference/visualize/image/">image</a>.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: placement
        details: |-
          <p>The figure's placement on the page.</p>
          <ul>
          <li><code><span class="typ-key">none</span></code>: The figure stays in-flow exactly where it was specified
          like other content.</li>
          <li><code><span class="typ-key">auto</span></code>: The figure picks <code>top</code> or <code>bottom</code> depending on which
          is closer.</li>
          <li><code>top</code>: The figure floats to the top of the page.</li>
          <li><code>bottom</code>: The figure floats to the bottom of the page.</li>
          </ul>
          <p>The gap between the main flow content and the floating figure is
          controlled by the <a href="/docs/reference/layout/place/#parameters-clearance"><code>clearance</code></a> argument on the
          <code>place</code> function.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">200pt</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Introduction</span>
          <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
            placement<span class="typ-punct">:</span> bottom<span class="typ-punct">,</span>
            caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A glacier<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">60</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/535010f94ae951ccf010bad63d268d81.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - auto
        - alignment
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: caption
        details: <p>The figure's caption.</p>
        example: null
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: kind
        details: |-
          <p>The kind of figure this is.</p>
          <p>All figures of the same kind share a common counter.</p>
          <p>If set to <code><span class="typ-key">auto</span></code>, the figure will try to automatically determine its
          kind based on the type of its body. Automatically detected kinds are
          <a href="/docs/reference/model/table/">tables</a> and <a href="/docs/reference/text/raw/">code</a>. In other cases, the inferred kind is
          that of an <a href="/docs/reference/visualize/image/">image</a>.</p>
          <p>Setting this to something other than <code><span class="typ-key">auto</span></code> will override the
          automatic detection. This can be useful if</p>
          <ul>
          <li>you wish to create a custom figure type that is not an
          <a href="/docs/reference/visualize/image/">image</a>, a <a href="/docs/reference/model/table/">table</a> or <a href="/docs/reference/text/raw/">code</a>,</li>
          <li>you want to force the figure to use a specific counter regardless of
          its content.</li>
          </ul>
          <p>You can set the kind to be an element function or a string. If you set
          it to an element function other than <a href="/docs/reference/model/table/"><code>table</code></a>, <a href="/docs/reference/text/raw/"><code>raw</code></a>
          or <a href="/docs/reference/visualize/image/"><code>image</code></a>, you will need to manually specify the figure's
          supplement.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
            <span class="typ-func">circle</span><span class="typ-punct">(</span>radius<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A curious atom.<span class="typ-punct">]</span><span class="typ-punct">,</span>
            kind<span class="typ-punct">:</span> <span class="typ-str">&quot;atom&quot;</span><span class="typ-punct">,</span>
            supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Atom<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/e5e5c8c9b4f2694a221ed02efeef52d4.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - str
        - function
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: supplement
        details: |-
          <p>The figure's supplement.</p>
          <p>If set to <code><span class="typ-key">auto</span></code>, the figure will try to automatically determine the
          correct supplement based on the <code>kind</code> and the active
          <a href="/docs/reference/text/text/#parameters-lang">text language</a>. If you are using a custom figure type, you
          will need to manually specify the supplement.</p>
          <p>If a function is specified, it is passed the first descendant of the
          specified <code>kind</code> (typically, the figure's body) and should return
          content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
            <span class="typ-punct">[</span>The contents of my figure!<span class="typ-punct">]</span><span class="typ-punct">,</span>
            caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>My custom figure<span class="typ-punct">]</span><span class="typ-punct">,</span>
            supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Bar<span class="typ-punct">]</span><span class="typ-punct">,</span>
            kind<span class="typ-punct">:</span> <span class="typ-str">&quot;foo&quot;</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/353d5294387754232973549e77bc2f46.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - auto
        - content
        - function
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: numbering
        details: |-
          <p>How to number the figure. Accepts a
          <a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
        example: null
        types:
        - none
        - str
        - function
        strings: []
        default: <code><span class="typ-str">&quot;1&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: gap
        details: <p>The vertical gap between the body and caption.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0.65em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: outlined
        details: <p>Whether the figure should appear in an <a href="/docs/reference/model/outline/"><code>outline</code></a>
          of figures.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope:
      - path:
        - figure
        name: caption
        title: Caption
        keywords: []
        oneliner: The caption of a figure. This element can be used in set and show
          rules to
        element: true
        details: |-
          <p>The caption of a figure. This element can be used in set and show rules to
          customize the appearance of captions for all figures or figures of a
          specific kind.</p>
          <p>In addition to its <code>pos</code> and <code>body</code>, the <code>caption</code> also provides the
          figure's <code>kind</code>, <code>supplement</code>, <code>counter</code>, <code>numbering</code>, and <code>location</code> as
          fields. These parts can be used in <a href="/docs/reference/foundations/function/#definitions-where"><code>where</code></a> selectors and
          show rules to build a completely custom caption.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> <span class="typ-func">emph</span>

          <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
            <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
            caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/d982dae89f1ad9abbd243ddaf492155a.png" alt="Preview" width="480" height="190"/></div></div>
        self: false
        params:
        - name: position
          details: <p>The caption's position in the figure. Either <code>top</code>
            or <code>bottom</code>.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
              kind<span class="typ-punct">:</span> table
            <span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>position<span class="typ-punct">:</span> top<span class="typ-punct">)</span>

            <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
              <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
              caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m up here<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span>

            <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
              <span class="typ-func">rect</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span><span class="typ-punct">,</span>
              caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m down here<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span>

            <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
              <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
              caption<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>
                position<span class="typ-punct">:</span> bottom<span class="typ-punct">,</span>
                <span class="typ-punct">[</span>I&#39;m down here too!<span class="typ-punct">]</span>
              <span class="typ-punct">)</span>
            <span class="typ-punct">)</span>
            </code></pre><div class="preview"><img src="/assets/docs/22e33b9f554f4e30a0916c67cc458700.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - alignment
          strings: []
          default: <code>bottom</code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        - name: separator
          details: |-
            <p>The separator which will appear between the number and body.</p>
            <p>If set to <code><span class="typ-key">auto</span></code>, the separator will be adapted to the current
            <a href="/docs/reference/text/text/#parameters-lang">language</a> and <a href="/docs/reference/text/text/#parameters-region">region</a>.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>separator<span class="typ-punct">:</span> <span class="typ-punct">[</span> <span class="typ-escape">---</span> <span class="typ-punct">]</span><span class="typ-punct">)</span>

            <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
              <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
              caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span>
            </code></pre><div class="preview"><img src="/assets/docs/37e28ada00e023eeb974618f70aa7026.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - auto
          - content
          strings: []
          default: <code><span class="typ-key">auto</span></code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        - name: body
          details: |-
            <p>The caption's body.</p>
            <p>Can be used alongside <code>kind</code>, <code>supplement</code>, <code>counter</code>, <code>numbering</code>, and
            <code>location</code> to completely customize the caption.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
              <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span> |
              <span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">supplement</span> <span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">counter</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>numbering<span class="typ-punct">)</span>
            <span class="typ-punct">]</span>

            <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
              <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
              caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span>
            </code></pre><div class="preview"><img src="/assets/docs/799a48590ec046b3e9a21ce5f491602b.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        returns:
        - content
        scope: []
  children: []
- route: /docs/reference/model/footnote/
  title: Footnote
  description: '`footnote` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-body
      name: body
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-entry
      name: Footnote Entry
      children:
      - id: definitions-entry-note
        name: note
        children: []
      - id: definitions-entry-separator
        name: separator
        children: []
      - id: definitions-entry-clearance
        name: clearance
        children: []
      - id: definitions-entry-gap
        name: gap
        children: []
      - id: definitions-entry-indent
        name: indent
        children: []
  body:
    kind: func
    content:
      path: []
      name: footnote
      title: Footnote
      keywords: []
      oneliner: A footnote.
      element: true
      details: |-
        <p>A footnote.</p>
        <p>Includes additional remarks and references on the same page with footnotes.
        A footnote will insert a superscript number that links to the note at the
        bottom of the page. Notes are numbered sequentially throughout your document
        and can break across multiple pages.</p>
        <p>To customize the appearance of the entry in the footnote listing, see
        <a href="/docs/reference/model/footnote/#definitions-entry"><code>footnote.entry</code></a>. The footnote itself is realized as a
        normal superscript, so you can use a set rule on the <a href="/docs/reference/text/super/"><code>super</code></a>
        function to customize it.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Check the docs for more details.
        <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span><span class="typ-link">https://typst.app/docs</span><span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/3ab6fa6cbda0e8fa90daddf32fd1d8ae.png" alt="Preview" width="480" height="190"/></div></div>
        <p>The footnote automatically attaches itself to the preceding word, even if
        there is a space before it in the markup. To force space, you can use the
        string <code><span class="typ-str">#</span><span class="typ-str">&quot; &quot;</span></code> or explicit <a href="/docs/reference/layout/h/">horizontal spacing</a>.</p>
        <p>By giving a label to a footnote, you can have multiple references to it.</p>
        <div class="previewed-code"><pre><code>You can edit Typst documents online.
        <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span><span class="typ-link">https://typst.app/app</span><span class="typ-punct">]</span> <span class="typ-label">&lt;fn&gt;</span>
        Checkout Typst&#39;s website. <span class="typ-ref">@fn</span>
        And the online app. <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">(</span><span class="typ-label">&lt;fn&gt;</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/25e0276b874a5d2e1dc361db32f6adc9.png" alt="Preview" width="480" height="190"/></div></div>
        <p><em>Note:</em> Set and show rules in the scope where <code>footnote</code> is called may not
        apply to the footnote's content. See <a href="https://github.com/typst/typst/issues/1467#issuecomment-1588799440">here</a> for more information.</p>
      example: null
      self: false
      params:
      - name: numbering
        details: |-
          <p>How to number footnotes.</p>
          <p>By default, the footnote numbering continues throughout your document.
          If you prefer per-page footnote numbering, you can reset the footnote
          <a href="/docs/reference/introspection/counter/">counter</a> in the page <a href="/docs/reference/layout/page/#parameters-header">header</a>. In the future,
          there might be a simpler way to achieve this.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">footnote</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;*&quot;</span><span class="typ-punct">)</span>

          Footnotes:
          <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Star<span class="typ-punct">]</span>,
          <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Dagger<span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/cfbc69c9278ca30700ff7034eff98939.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - str
        - function
        strings: []
        default: <code><span class="typ-str">&quot;1&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: |-
          <p>The content to put into the footnote. Can also be the label of another
          footnote this one should point to.</p>
        example: null
        types:
        - label
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope:
      - path:
        - footnote
        name: entry
        title: Footnote Entry
        keywords: []
        oneliner: An entry in a footnote list.
        element: true
        details: |-
          <p>An entry in a footnote list.</p>
          <p>This function is not intended to be called directly. Instead, it is used
          in set and show rules to customize footnote listings.</p>
          <p><em>Note:</em> Set and show rules for <code>footnote.entry</code> must be defined at the
          beginning of the document in order to work correctly.
          See <a href="https://github.com/typst/typst/issues/1348#issuecomment-1566316463">here</a>
          for more information.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>

          My footnote listing
          <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>It&#39;s down here<span class="typ-punct">]</span>
          has red text!
          </code></pre><div class="preview"><img src="/assets/docs/e07bed06d522a25126bd74abd9d30066.png" alt="Preview" width="480" height="190"/></div></div>
        self: false
        params:
        - name: note
          details: |-
            <p>The footnote for this entry. It's location can be used to determine
            the footnote counter state.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
              <span class="typ-key">let</span> loc <span class="typ-op">=</span> it<span class="typ-punct">.</span>note<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
              <span class="typ-func">numbering</span><span class="typ-punct">(</span>
                <span class="typ-str">&quot;1: &quot;</span><span class="typ-punct">,</span>
                <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>footnote<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>loc<span class="typ-punct">)</span><span class="typ-punct">,</span>
              <span class="typ-punct">)</span>
              it<span class="typ-punct">.</span>note<span class="typ-punct">.</span>body
            <span class="typ-punct">}</span>

            Customized <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span>
            listing <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>World! 🌏<span class="typ-punct">]</span>
            </code></pre><div class="preview"><img src="/assets/docs/7a57f89b5a467d502465f930700c729e.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: separator
          details: <p>The separator between the document body and the footnote listing.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>
              separator<span class="typ-punct">:</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>.<span class="typ-punct">]</span>
            <span class="typ-punct">)</span>

            Testing a different separator.
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>
              Unconventional, but maybe
              not that bad?
            <span class="typ-punct">]</span>
            </code></pre><div class="preview"><img src="/assets/docs/4ca5e2af377122f6526b5b2b8e59a092.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - content
          strings: []
          default: <code><span class="typ-func">line</span><span class="typ-punct">(</span>length<span
            class="typ-punct">:</span> <span class="typ-num">30%</span><span class="typ-punct">,</span>
            stroke<span class="typ-punct">:</span> <span class="typ-num">0.5pt</span><span
            class="typ-punct">)</span></code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        - name: clearance
          details: <p>The amount of clearance between the document body and the separator.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>clearance<span class="typ-punct">:</span> <span class="typ-num">3em</span><span class="typ-punct">)</span>

            Footnotes also need <span class="typ-escape">...</span>
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>
              <span class="typ-escape">...</span> some space to breathe.
            <span class="typ-punct">]</span>
            </code></pre><div class="preview"><img src="/assets/docs/48b249bfacb712a4ab2ff95f7bf1466e.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - length
          strings: []
          default: <code><span class="typ-num">1em</span></code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        - name: gap
          details: <p>The gap between footnote entries.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">0.8em</span><span class="typ-punct">)</span>

            Footnotes:
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Spaced<span class="typ-punct">]</span>,
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Apart<span class="typ-punct">]</span>
            </code></pre><div class="preview"><img src="/assets/docs/4dcaf4e51b42ffe5e8e7d6618fab0d4b.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - length
          strings: []
          default: <code><span class="typ-num">0.5em</span></code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        - name: indent
          details: <p>The indent of each footnote entry.</p>
          example: |-
            <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>indent<span class="typ-punct">:</span> <span class="typ-num">0em</span><span class="typ-punct">)</span>

            Footnotes:
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>No<span class="typ-punct">]</span>,
            <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Indent<span class="typ-punct">]</span>
            </code></pre><div class="preview"><img src="/assets/docs/2e0cc77362a1de51ac452703d072d073.png" alt="Preview" width="480" height="190"/></div></div>
          types:
          - length
          strings: []
          default: <code><span class="typ-num">1em</span></code>
          positional: false
          named: true
          required: false
          variadic: false
          settable: true
        returns:
        - content
        scope: []
  children: []
- route: /docs/reference/model/heading/
  title: Heading
  description: '`heading` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-level
      name: level
      children: []
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-supplement
      name: supplement
      children: []
    - id: parameters-outlined
      name: outlined
      children: []
    - id: parameters-bookmarked
      name: bookmarked
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: heading
      title: Heading
      keywords: []
      oneliner: A section heading.
      element: true
      details: |-
        <p>A section heading.</p>
        <p>With headings, you can structure your document into sections. Each heading
        has a <em>level,</em> which starts at one and is unbounded upwards. This level
        indicates the logical role of the following content (section, subsection,
        etc.)  A top-level heading indicates a top-level section of the document
        (not the document's title).</p>
        <p>Typst can automatically number your headings for you. To enable numbering,
        specify how you want your headings to be numbered with a
        <a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
        <p>Independently from the numbering, Typst can also automatically generate an
        <a href="/docs/reference/model/outline/">outline</a> of all headings for you. To exclude one or more headings
        from this outline, you can set the <code>outlined</code> parameter to <code><span class="typ-key">false</span></code>.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Introduction</span>
        In recent years, <span class="typ-escape">...</span>

        <span class="typ-heading">== Preliminaries</span>
        To start, <span class="typ-escape">...</span>
        </code></pre><div class="preview"><img src="/assets/docs/d04239332d534abb07860bba718a7a78.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>Headings have dedicated syntax: They can be created by starting a line with
        one or multiple equals signs, followed by a space. The number of equals
        signs determines the heading's logical nesting depth.</p>
      example: null
      self: false
      params:
      - name: level
        details: <p>The logical nesting depth of the heading, starting from one.</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">1</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: numbering
        details: |-
          <p>How to number the heading. Accepts a
          <a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a.&quot;</span><span class="typ-punct">)</span>

          <span class="typ-heading">= A section</span>
          <span class="typ-heading">== A subsection</span>
          <span class="typ-heading">=== A sub-subsection</span>
          </code></pre><div class="preview"><img src="/assets/docs/7f4c4cd2b391215182900c50aa7cc4b7.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - str
        - function
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: supplement
        details: |-
          <p>A supplement for the heading.</p>
          <p>For references to headings, this is added before the referenced number.</p>
          <p>If a function is specified, it is passed the referenced heading and
          should return content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">,</span> supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Chapter<span class="typ-punct">]</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
          In <span class="typ-ref">@intro</span>, we see how to turn
          Sections into Chapters. And
          in <span class="typ-ref">@intro<span class="typ-punct">[</span>Part<span class="typ-punct">]</span></span>, it is done
          manually.
          </code></pre><div class="preview"><img src="/assets/docs/63e880ca0df94d76567ec2b340edff29.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - auto
        - content
        - function
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: outlined
        details: |-
          <p>Whether the heading should appear in the <a href="/docs/reference/model/outline/">outline</a>.</p>
          <p>Note that this property, if set to <code><span class="typ-key">true</span></code>, ensures the heading is also
          shown as a bookmark in the exported PDF's outline (when exporting to
          PDF). To change that behavior, use the <code>bookmarked</code> property.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Normal<span class="typ-punct">]</span>
          This is a normal heading.

          <span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>outlined<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Hidden<span class="typ-punct">]</span>
          This heading does not appear
          in the outline.
          </code></pre><div class="preview"><img src="/assets/docs/3abd9effd2a8e1883a608bf74f377611.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: bookmarked
        details: |-
          <p>Whether the heading should appear as a bookmark in the exported PDF's
          outline. Doesn't affect other export formats, such as PNG.</p>
          <p>The default value of <code><span class="typ-key">auto</span></code> indicates that the heading will only
          appear in the exported PDF's outline if its <code>outlined</code> property is set
          to <code><span class="typ-key">true</span></code>, that is, if it would also be listed in Typst's
          <a href="/docs/reference/model/outline/">outline</a>. Setting this property to either <code><span class="typ-key">true</span></code> (bookmark)
          or <code><span class="typ-key">false</span></code> (don't bookmark) bypasses that behavior.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Normal heading<span class="typ-punct">]</span>
          This heading will be shown in
          the PDF&#39;s bookmark outline.

          <span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>bookmarked<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Not bookmarked<span class="typ-punct">]</span>
          This heading won&#39;t be
          bookmarked in the resulting
          PDF.
          </code></pre><div class="preview"><img src="/assets/docs/89a3cd37c6bae985e30435309b12d888.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - bool
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The heading's title.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/link/
  title: Link
  description: '`link` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-dest
      name: dest
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: link
      title: Link
      keywords: []
      oneliner: Links to a URL or a location in the document.
      element: true
      details: |-
        <p>Links to a URL or a location in the document.</p>
        <p>By default, links are not styled any different from normal text. However,
        you can easily apply a style of your choice with a show rule.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">link</span><span class="typ-punct">:</span> <span class="typ-func">underline</span>

        <span class="typ-link">https://example.com</span> <span class="typ-escape">\</span>

        <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://example.com&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://example.com&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
          See example.com
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/c4a5c2cf3deb1cac7c49fc85bceebd64.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function also has dedicated syntax: Text that starts with <code>http://</code> or
        <code>https://</code> is automatically turned into a link.</p>
      example: null
      self: false
      params:
      - name: dest
        details: |-
          <p>The destination the link points to.</p>
          <ul>
          <li>
          <p>To link to web pages, <code>dest</code> should be a valid URL string. If the URL
          is in the <code>mailto:</code> or <code>tel:</code> scheme and the <code>body</code> parameter is
          omitted, the email address or phone number will be the link's body,
          without the scheme.</p>
          </li>
          <li>
          <p>To link to another part of the document, <code>dest</code> can take one of three
          forms:</p>
          <ul>
          <li>
          <p>A <a href="/docs/reference/foundations/label/">label</a> attached to an element. If you also want automatic
          text for the link based on the element, consider using a
          <a href="/docs/reference/model/ref/">reference</a> instead.</p>
          </li>
          <li>
          <p>A <a href="/docs/reference/introspection/locate/">location</a> resulting from a <a href="/docs/reference/introspection/locate/"><code>locate</code></a> call or
          <a href="/docs/reference/introspection/query/"><code>query</code></a>.</p>
          </li>
          <li>
          <p>A dictionary with a <code>page</code> key of type <a href="/docs/reference/foundations/int/">integer</a> and <code>x</code> and
          <code>y</code> coordinates of type <a href="/docs/reference/layout/length/">length</a>. Pages are counted from
          one, and the coordinates are relative to the page's top left corner.</p>
          </li>
          </ul>
          </li>
          </ul>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
          <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;mailto:hello@typst.app&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Go to intro<span class="typ-punct">]</span> <span class="typ-escape">\</span>
          <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-punct">(</span>page<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> x<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
            Go to top
          <span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/a67297a9276e3982b05fee7ab647477b.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - str
        - label
        - location
        - dictionary
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: body
        details: |-
          <p>The content that should become a link.</p>
          <p>If <code>dest</code> is an URL string, the parameter can be omitted. In this case,
          the URL will be shown as the link.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/enum/
  title: Numbered List
  description: '`enum` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-tight
      name: tight
      children: []
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-start
      name: start
      children: []
    - id: parameters-full
      name: full
      children: []
    - id: parameters-indent
      name: indent
      children: []
    - id: parameters-body-indent
      name: body-indent
      children: []
    - id: parameters-spacing
      name: spacing
      children: []
    - id: parameters-number-align
      name: number-align
      children: []
    - id: parameters-children
      name: children
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-item
      name: Numbered List Item
      children:
      - id: definitions-item-number
        name: number
        children: []
      - id: definitions-item-body
        name: body
        children: []
  body:
    kind: func
    content:
      path: []
      name: enum
      title: Numbered List
      keywords: []
      oneliner: A numbered list.
      element: true
      details: |-
        <p>A numbered list.</p>
        <p>Displays a sequence of items vertically and numbers them consecutively.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Automatically numbered:
        <span class="typ-marker">+</span> Preparations
        <span class="typ-marker">+</span> Analysis
        <span class="typ-marker">+</span> Conclusions

        Manually numbered:
        <span class="typ-marker">2.</span> What is the first step?
        <span class="typ-marker">5.</span> I am confused.
        <span class="typ-marker">+</span>  Moving on <span class="typ-escape">...</span>

        Multiple lines:
        <span class="typ-marker">+</span> This enum item has multiple
          lines because the next line
          is indented.

        Function call.
        <span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">[</span>First<span class="typ-punct">]</span><span class="typ-punct">[</span>Second<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/7f1849410764a429269845fbfbe70e06.png" alt="Preview" width="480" height="190"/></div></div>
        <p>You can easily switch all your enumerations to a different numbering style
        with a set rule.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;a)&quot;</span><span class="typ-punct">)</span>

        <span class="typ-marker">+</span> Starting off <span class="typ-escape">...</span>
        <span class="typ-marker">+</span> Don&#39;t forget step two
        </code></pre><div class="preview"><img src="/assets/docs/e99fd30bf2771e1086e84995cb06129f.png" alt="Preview" width="480" height="190"/></div></div>
        <p>You can also use <a href="/docs/reference/model/enum/#definitions-item"><code>enum.item</code></a> to programmatically customize the
        number of each item in the enumeration:</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
          enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">[</span>First step<span class="typ-punct">]</span><span class="typ-punct">,</span>
          enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Fifth step<span class="typ-punct">]</span><span class="typ-punct">,</span>
          enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Tenth step<span class="typ-punct">]</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/4ef4c95adffafce967eed5d6682bc04a.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This functions also has dedicated syntax:</p>
        <ul>
        <li>Starting a line with a plus sign creates an automatically numbered
        enumeration item.</li>
        <li>Starting a line with a number followed by a dot creates an explicitly
        numbered enumeration item.</li>
        </ul>
        <p>Enumeration items can contain multiple paragraphs and other block-level
        content. All content that is indented more than an item's marker becomes
        part of that item.</p>
      example: null
      self: false
      params:
      - name: tight
        details: |-
          <p>If this is <code><span class="typ-key">false</span></code>, the items are spaced apart with
          <a href="/docs/reference/model/enum/#parameters-spacing">enum spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use normal
          <a href="/docs/reference/model/par/#parameters-leading">leading</a> instead. This makes the enumeration more
          compact, which can look better if the items are short.</p>
          <p>In markup mode, the value of this parameter is determined based on
          whether items are separated with a blank line. If items directly follow
          each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
          line, this is set to <code><span class="typ-key">false</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-marker">+</span> If an enum has a lot of text, and
            maybe other inline content, it
            should not be tight anymore.

          <span class="typ-marker">+</span> To make an enum wide, simply
            insert a blank line between the
            items.
          </code></pre><div class="preview"><img src="/assets/docs/c5b946d1e90cf92ed6f50697f0b959a8.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: numbering
        details: |-
          <p>How to number the enumeration. Accepts a
          <a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
          <p>If the numbering pattern contains multiple counting symbols, they apply
          to nested enums. If given a function, the function receives one argument
          if <code>full</code> is <code><span class="typ-key">false</span></code> and multiple arguments if <code>full</code> is <code><span class="typ-key">true</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>
          <span class="typ-marker">+</span> Different
          <span class="typ-marker">+</span> Numbering
            <span class="typ-marker">+</span> Nested
            <span class="typ-marker">+</span> Items
          <span class="typ-marker">+</span> Style

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-func">super</span><span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">n</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
          <span class="typ-marker">+</span> Superscript
          <span class="typ-marker">+</span> Numbering!
          </code></pre><div class="preview"><img src="/assets/docs/8bc6c994985ccebd90877361ea72db0c.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - str
        - function
        strings: []
        default: <code><span class="typ-str">&quot;1.&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: start
        details: <p>Which number to start the enumeration with.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
            start<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Skipping<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Ahead<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/5e6eccec65aef0b3bd248292e08111e2.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - int
        strings: []
        default: <code><span class="typ-num">1</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: full
        details: |-
          <p>Whether to display the full numbering, including the numbers of
          all parent enumerations.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">,</span> full<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          <span class="typ-marker">+</span> Cook
            <span class="typ-marker">+</span> Heat water
            <span class="typ-marker">+</span> Add integredients
          <span class="typ-marker">+</span> Eat
          </code></pre><div class="preview"><img src="/assets/docs/89cae67aed31e7f8a3ade0fdcbb3bc35.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: indent
        details: <p>The indentation of each item.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body-indent
        details: <p>The space between the numbering and the body of each item.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0.5em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: spacing
        details: |-
          <p>The spacing between the items of a wide (non-tight) enumeration.</p>
          <p>If set to <code><span class="typ-key">auto</span></code>, uses the spacing <a href="/docs/reference/layout/block/#parameters-below">below blocks</a>.</p>
        example: null
        types:
        - auto
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: number-align
        details: |-
          <p>The alignment that enum numbers should have.</p>
          <p>By default, this is set to <code>end <span class="typ-op">+</span> top</code>, which aligns enum numbers
          towards end of the current text direction (in left-to-right script,
          for example, this is the same as <code>right</code>) and at the top of the line.
          The choice of <code>end</code> for horizontal alignment of enum numbers is
          usually preferred over <code>start</code>, as numbers then grow away from the
          text instead of towards it, avoiding certain visual issues. This option
          lets you override this behavior, however. (Also to note is that the
          <a href="/docs/reference/model/list/">unordered list</a> uses a different method for this, by giving the
          <code>marker</code> content an alignment directly.).</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>number-align<span class="typ-punct">:</span> start <span class="typ-op">+</span> bottom<span class="typ-punct">)</span>

          Here are some powers of two:
          <span class="typ-marker">1.</span> One
          <span class="typ-marker">2.</span> Two
          <span class="typ-marker">4.</span> Four
          <span class="typ-marker">8.</span> Eight
          <span class="typ-marker">16.</span> Sixteen
          <span class="typ-marker">32.</span> Thirty two
          </code></pre><div class="preview"><img src="/assets/docs/94cdfa3fd3a6ea603c3fb91f73a34c3c.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - alignment
        strings: []
        default: <code>end <span class="typ-op">+</span> top</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: |-
          <p>The numbered list's items.</p>
          <p>When using the enum syntax, adjacent items are automatically collected
          into enumerations, even through constructs like for loops.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> phase <span class="typ-key">in</span> <span class="typ-punct">(</span>
             <span class="typ-str">&quot;Launch&quot;</span><span class="typ-punct">,</span>
             <span class="typ-str">&quot;Orbit&quot;</span><span class="typ-punct">,</span>
             <span class="typ-str">&quot;Descent&quot;</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">+</span> <span class="typ-pol">#</span><span class="typ-pol">phase</span><span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/6a018531caaa329d79d90455bb6bec04.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - content
        - array
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope:
      - path:
        - enum
        name: item
        title: Numbered List Item
        keywords: []
        oneliner: An enumeration item.
        element: true
        details: <p>An enumeration item.</p>
        example: null
        self: false
        params:
        - name: number
          details: <p>The item's number.</p>
          example: null
          types:
          - none
          - int
          strings: []
          default: <code><span class="typ-key">none</span></code>
          positional: true
          named: false
          required: false
          variadic: false
          settable: true
        - name: body
          details: <p>The item's body.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        returns:
        - content
        scope: []
  children: []
- route: /docs/reference/model/numbering/
  title: Numbering
  description: '`numbering` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-numbers
      name: numbers
      children: []
  body:
    kind: func
    content:
      path: []
      name: numbering
      title: Numbering
      keywords: []
      oneliner: Applies a numbering to a sequence of numbers.
      element: false
      details: |-
        <p>Applies a numbering to a sequence of numbers.</p>
        <p>A numbering defines how a sequence of numbers should be displayed as
        content. It is defined either through a pattern string or an arbitrary
        function.</p>
        <p>A numbering pattern consists of counting symbols, for which the actual
        number is substituted, their prefixes, and one suffix. The prefixes and the
        suffix are repeated as-is.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.1)&quot;</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.a.i&quot;</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;I – 1&quot;</span><span class="typ-punct">,</span> <span class="typ-num">12</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span>
          <span class="typ-punct">(</span><span class="typ-op">..</span>nums<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> nums
            <span class="typ-punct">.</span><span class="typ-func">pos</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
            <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>str<span class="typ-punct">)</span>
            <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;.&quot;</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-str">&quot;)&quot;</span><span class="typ-punct">,</span>
          <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/c49443caf46299c5a909ea27c0c42f0c.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: numbering
        details: |-
          <p>Defines how the numbering works.</p>
          <p><strong>Counting symbols</strong> are <code>1</code>, <code>a</code>, <code>A</code>, <code>i</code>, <code>I</code>, <code>い</code>, <code>イ</code>, <code>א</code>, <code>가</code>,
          <code>ㄱ</code>, and <code>*</code>. They are replaced by the number in the sequence, in the
          given case.</p>
          <p>The <code>*</code> character means that symbols should be used to count, in the
          order of <code>*</code>, <code>†</code>, <code>‡</code>, <code>§</code>, <code>¶</code>, and <code>‖</code>. If there are more than six
          items, the number is represented using multiple symbols.</p>
          <p><strong>Suffixes</strong> are all characters after the last counting symbol. They are
          repeated as-is at the end of any rendered number.</p>
          <p><strong>Prefixes</strong> are all characters that are neither counting symbols nor
          suffixes. They are repeated as-is at in front of their rendered
          equivalent of their counting symbol.</p>
          <p>This parameter can also be an arbitrary function that gets each number
          as an individual argument. When given a function, the <code>numbering</code>
          function just forwards the arguments to that function. While this is not
          particularly useful in itself, it means that you can just give arbitrary
          numberings to the <code>numbering</code> function without caring whether they are
          defined as a pattern or function.</p>
        example: null
        types:
        - str
        - function
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: numbers
        details: |-
          <p>The numbers to apply the numbering to. Must be positive.</p>
          <p>If <code>numbering</code> is a pattern and more numbers than counting symbols are
          given, the last counting symbol with its prefix is repeated.</p>
        example: null
        types:
        - int
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - any
      scope: []
  children: []
- route: /docs/reference/model/outline/
  title: Outline
  description: '`outline` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: alternative-outlines
    name: Alternative Outlines
    children: []
  - id: styling-the-outline
    name: Styling The Outline
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-title
      name: title
      children: []
    - id: parameters-target
      name: target
      children: []
    - id: parameters-depth
      name: depth
      children: []
    - id: parameters-indent
      name: indent
      children: []
    - id: parameters-fill
      name: fill
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-entry
      name: Outline Entry
      children:
      - id: definitions-entry-level
        name: level
        children: []
      - id: definitions-entry-element
        name: element
        children: []
      - id: definitions-entry-body
        name: body
        children: []
      - id: definitions-entry-fill
        name: fill
        children: []
      - id: definitions-entry-page
        name: page
        children: []
  body:
    kind: func
    content:
      path: []
      name: outline
      title: Outline
      keywords:
      - Table of Contents
      oneliner: A table of contents, figures, or other elements.
      element: true
      details: |-
        <p>A table of contents, figures, or other elements.</p>
        <p>This function generates a list of all occurrences of an element in the
        document, up to a given depth. The element's numbering and page number will
        be displayed in the outline alongside its title or caption. By default this
        generates a table of contents.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Introduction</span>
        <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Prior work</span>
        <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/16659a9adad8e0711ea2c3f594354805.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="alternative-outlines">Alternative outlines</h2>
        <p>By setting the <code>target</code> parameter, the outline can be used to generate a
        list of other kinds of elements than headings. In the example below, we list
        all figures containing images by setting <code>target</code> to <code>figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> image<span class="typ-punct">)</span></code>. We could have also set it to just <code>figure</code>, but then the list
        would also include figures containing tables or other material. For more
        details on the <code>where</code> selector, <a href="/docs/reference/foundations/function/#definitions-where">see here</a>.</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
          title<span class="typ-punct">:</span> <span class="typ-punct">[</span>List of Figures<span class="typ-punct">]</span><span class="typ-punct">,</span>
          target<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> image<span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A nice figure!<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/24cba25ff538ac4658e836abe5d1e344.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="styling-the-outline">Styling the outline</h2>
        <p>The outline element has several options for customization, such as its
        <code>title</code> and <code>indent</code> parameters. If desired, however, it is possible to have
        more control over the outline's look and style through the
        <a href="/docs/reference/model/outline/#definitions-entry"><code>outline.entry</code></a> element.</p>
      example: null
      self: false
      params:
      - name: title
        details: |-
          <p>The title of the outline.</p>
          <ul>
          <li>When set to <code><span class="typ-key">auto</span></code>, an appropriate title for the
          <a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
          <li>When set to <code><span class="typ-key">none</span></code>, the outline will not have a title.</li>
          <li>A custom title can be set by passing content.</li>
          </ul>
          <p>The outline's heading will not be numbered by default, but you can
          force it to be with a show-set rule:
          <code><span class="typ-key">show</span> <span class="typ-func">outline</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span></code></p>
        example: <pre></pre>
        types:
        - none
        - auto
        - content
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: target
        details: |-
          <p>The type of element to include in the outline.</p>
          <p>To list figures containing a specific kind of element, like a table, you
          can write <code>figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> table<span class="typ-punct">)</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
            title<span class="typ-punct">:</span> <span class="typ-punct">[</span>List of Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
            target<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> table<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
            <span class="typ-func">table</span><span class="typ-punct">(</span>
              columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
              <span class="typ-punct">[</span>t<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span>
              <span class="typ-punct">[</span>y<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.3<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.7<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.5<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span><span class="typ-punct">,</span>
            caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Experiment results<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/7a4f56e746456431a7a6f260de1c2a53.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - label
        - selector
        - function
        strings: []
        default: <code>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span
          class="typ-punct">(</span>outlined<span class="typ-punct">:</span> <span
          class="typ-key">true</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: depth
        details: |-
          <p>The maximum level up to which elements are included in the outline. When
          this argument is <code><span class="typ-key">none</span></code>, all elements are included.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>depth<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Yes</span>
          Top-level section.

          <span class="typ-heading">== Still</span>
          Subsection.

          <span class="typ-heading">=== Nope</span>
          Not included.
          </code></pre><div class="preview"><img src="/assets/docs/3e1852334233b65658daf6dfa4c9c4e2.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - int
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: indent
        details: |-
          <p>How to indent the outline's entries.</p>
          <ul>
          <li><code><span class="typ-key">none</span></code>: No indent</li>
          <li><code><span class="typ-key">auto</span></code>: Indents the numbering of the nested entry with the title of
          its parent entry. This only has an effect if the entries are numbered
          (e.g., via <a href="/docs/reference/model/heading/#parameters-numbering">heading numbering</a>).</li>
          <li><a href="/docs/reference/layout/relative/">Relative length</a>: Indents the item by this length
          multiplied by its nesting level. Specifying <code><span class="typ-num">2em</span></code>, for instance,
          would indent top-level headings (not nested) by <code><span class="typ-num">0em</span></code>, second level
          headings by <code><span class="typ-num">2em</span></code> (nested once), third-level headings by <code><span class="typ-num">4em</span></code>
          (nested twice) and so on.</li>
          <li><a href="/docs/reference/foundations/function/">Function</a>: You can completely customize this setting with
          a function. That function receives the nesting level as a parameter
          (starting at 0 for top-level headings/elements) and can return a
          relative length or content making up the indent. For example,
          <code>n <span class="typ-op">=&gt;</span> n <span class="typ-op">*</span> <span class="typ-num">2em</span></code> would be equivalent to just specifying <code><span class="typ-num">2em</span></code>, while
          <code>n <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>→ <span class="typ-punct">]</span> <span class="typ-op">*</span> n</code> would indent with one arrow per nesting level.</li>
          </ul>
          <p><em>Migration hints:</em>  Specifying <code><span class="typ-key">true</span></code> (equivalent to <code><span class="typ-key">auto</span></code>) or
          <code><span class="typ-key">false</span></code> (equivalent to <code><span class="typ-key">none</span></code>) for this option is deprecated and
          will be removed in a future release.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a.&quot;</span><span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
            title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Automatic)<span class="typ-punct">]</span><span class="typ-punct">,</span>
            indent<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
            title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Length)<span class="typ-punct">]</span><span class="typ-punct">,</span>
            indent<span class="typ-punct">:</span> <span class="typ-num">2em</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
            title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Function)<span class="typ-punct">]</span><span class="typ-punct">,</span>
            indent<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>→ <span class="typ-punct">]</span> <span class="typ-op">*</span> n<span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-heading">= About ACME Corp.</span>
          <span class="typ-heading">== History</span>
          <span class="typ-heading">=== Origins</span>
          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

          <span class="typ-heading">== Products</span>
          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/60fc7447a0d75087244fae5f753d8c29.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - auto
        - bool
        - relative
        - function
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: |-
          <p>Content to fill the space between the title and the page number. Can be
          set to <code>none</code> to disable filling.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

          <span class="typ-heading">= A New Beginning</span>
          </code></pre><div class="preview"><img src="/assets/docs/08067a118a76fdd280de494e1bdec598.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-func">repeat</span><span class="typ-punct">(</span>body<span
          class="typ-punct">:</span> <span class="typ-punct">[</span>.<span class="typ-punct">]</span><span
          class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope:
      - path:
        - outline
        name: entry
        title: Outline Entry
        keywords: []
        oneliner: Represents each entry line in an outline, including the reference
          to the
        element: true
        details: |-
          <p>Represents each entry line in an outline, including the reference to the
          outlined element, its page number, and the filler content between both.</p>
          <p>This element is intended for use with show rules to control the appearance
          of outlines. To customize an entry's line, you can build it from scratch by
          accessing the <code>level</code>, <code>element</code>, <code>body</code>, <code>fill</code> and <code>page</code> fields on the
          entry.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

          <span class="typ-key">#</span><span class="typ-key">show</span> outline<span class="typ-punct">.</span>entry<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
            level<span class="typ-punct">:</span> <span class="typ-num">1</span>
          <span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
            <span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">12pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
            <span class="typ-func">strong</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span>
          <span class="typ-punct">}</span>

          <span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>indent<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Introduction</span>
          <span class="typ-heading">= Background</span>
          <span class="typ-heading">== History</span>
          <span class="typ-heading">== State of the Art</span>
          <span class="typ-heading">= Analysis</span>
          <span class="typ-heading">== Setup</span>
          </code></pre><div class="preview"><img src="/assets/docs/cd45cfe4eaea270917dc7a4058e0e946.png" alt="Preview" width="480" height="190"/></div></div>
        self: false
        params:
        - name: level
          details: |-
            <p>The nesting level of this outline entry. Starts at <code><span class="typ-num">1</span></code> for top-level
            entries.</p>
          example: null
          types:
          - int
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: element
          details: |-
            <p>The element this entry refers to. Its location will be available
            through the <a href="/docs/reference/foundations/content/#definitions-location"><code>location</code></a> method on content
            and can be <a href="/docs/reference/model/link/">linked</a> to.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: body
          details: |-
            <p>The content which is displayed in place of the referred element at its
            entry in the outline. For a heading, this would be its number followed
            by the heading's title, for example.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: fill
          details: |-
            <p>The content used to fill the space between the element's outline and
            its page number, as defined by the outline element this entry is
            located in. When <code><span class="typ-key">none</span></code>, empty space is inserted in that gap instead.</p>
            <p>Note that, when using show rules to override outline entries, it is
            recommended to wrap the filling content in a <a href="/docs/reference/layout/box/"><code>box</code></a> with
            fractional width. For example, <code><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>-<span class="typ-punct">]</span><span class="typ-punct">)</span></code> would show
            precisely as many <code>-</code> characters as necessary to fill a particular gap.</p>
          example: null
          types:
          - none
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: page
          details: |-
            <p>The page number of the element this entry links to, formatted with the
            numbering set for the referenced page.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        returns:
        - content
        scope: []
  children: []
- route: /docs/reference/model/par/
  title: Paragraph
  description: '`par` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-leading
      name: leading
      children: []
    - id: parameters-justify
      name: justify
      children: []
    - id: parameters-linebreaks
      name: linebreaks
      children: []
    - id: parameters-first-line-indent
      name: first-line-indent
      children: []
    - id: parameters-hanging-indent
      name: hanging-indent
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: par
      title: Paragraph
      keywords: []
      oneliner: Arranges text, spacing and inline-level elements into a paragraph.
      element: true
      details: |-
        <p>Arranges text, spacing and inline-level elements into a paragraph.</p>
        <p>Although this function is primarily used in set rules to affect paragraph
        properties, it can also be used to explicitly render its argument onto a
        paragraph of its own.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">par</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">0.65em</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>
          first-line-indent<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
          justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        We proceed by contradiction.
        Suppose that there exists a set
        of positive integers <span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>, <span class="typ-math-delim">$</span>b<span class="typ-math-delim">$</span>, and
        <span class="typ-math-delim">$</span>c<span class="typ-math-delim">$</span> that satisfies the equation
        <span class="typ-math-delim">$</span>a<span class="typ-math-op">^</span>n + b<span class="typ-math-op">^</span>n = c<span class="typ-math-op">^</span>n<span class="typ-math-delim">$</span> for some
        integer value of <span class="typ-math-delim">$</span>n &gt; 2<span class="typ-math-delim">$</span>.

        Without loss of generality,
        let <span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span> be the smallest of the
        three integers. Then, we <span class="typ-escape">...</span>
        </code></pre><div class="preview"><img src="/assets/docs/4ad0c7e875ca044b839c4c85e8b6cb15.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: leading
        details: <p>The spacing between lines.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0.65em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: justify
        details: |-
          <p>Whether to justify text in its line.</p>
          <p>Hyphenation will be enabled for justified paragraphs if the
          <a href="/docs/reference/text/text/#parameters-hyphenate">text function's <code>hyphenate</code> property</a> is set to
          <code><span class="typ-key">auto</span></code> and the current language is known.</p>
          <p>Note that the current <a href="/docs/reference/layout/align/">alignment</a> still has an effect on the
          placement of the last line except if it ends with a
          <a href="/docs/reference/text/linebreak/#parameters-justify">justified line break</a>.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: linebreaks
        details: |-
          <p>How to determine line breaks.</p>
          <p>When this property is set to <code><span class="typ-key">auto</span></code>, its default value, optimized line
          breaks will be used for justified paragraphs. Enabling optimized line
          breaks for ragged paragraphs may also be worthwhile to improve the
          appearance of the text.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">207pt</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>linebreaks<span class="typ-punct">:</span> <span class="typ-str">&quot;simple&quot;</span><span class="typ-punct">)</span>
          Some texts feature many longer
          words. Those are often exceedingly
          challenging to break in a visually
          pleasing way.

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>linebreaks<span class="typ-punct">:</span> <span class="typ-str">&quot;optimized&quot;</span><span class="typ-punct">)</span>
          Some texts feature many longer
          words. Those are often exceedingly
          challenging to break in a visually
          pleasing way.
          </code></pre><div class="preview"><img src="/assets/docs/d47258d3796ed8315cbe2ad4974e1e42.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - str
        strings:
        - string: simple
          details: <p>Determine the line breaks in a simple first-fit style.</p>
        - string: optimized
          details: |-
            <p>Optimize the line breaks for the whole paragraph.</p>
            <p>Typst will try to produce more evenly filled lines of text by
            considering the whole paragraph when calculating line breaks.</p>
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: first-line-indent
        details: |-
          <p>The indent the first line of a paragraph should have.</p>
          <p>Only the first line of a consecutive paragraph will be indented (not
          the first one in a block or on the page).</p>
          <p>By typographic convention, paragraph breaks are indicated either by some
          space between paragraphs or by indented first lines. Consider reducing
          the <a href="/docs/reference/layout/block/#parameters-spacing">paragraph spacing</a> to the [<code>leading</code>] when
          using this property (e.g. using
          <code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">par</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">0.65em</span><span class="typ-punct">)</span></code>).</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: hanging-indent
        details: <p>The indent all but the first line of a paragraph should have.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The contents of the paragraph.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/parbreak/
  title: Paragraph Break
  description: '`parbreak` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  body:
    kind: func
    content:
      path: []
      name: parbreak
      title: Paragraph Break
      keywords: []
      oneliner: A paragraph break.
      element: true
      details: |-
        <p>A paragraph break.</p>
        <p>This starts a new paragraph. Especially useful when used within code like
        <a href="/docs/reference/scripting/#loops">for loops</a>. Multiple consecutive
        paragraph breaks collapse into a single one.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
          <span class="typ-punct">[</span>Blind text <span class="typ-pol">#</span><span class="typ-pol">i</span>: <span class="typ-punct">]</span>
          <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
          <span class="typ-func">parbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
        <span class="typ-punct">}</span>
        </code></pre><div class="preview"><img src="/assets/docs/a63f54897394fd70f58ecf6ce36d9679.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>Instead of calling this function, you can insert a blank line into your
        markup to create a paragraph break.</p>
      example: null
      self: false
      params: []
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/quote/
  title: Quote
  description: '`quote` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-block
      name: block
      children: []
    - id: parameters-quotes
      name: quotes
      children: []
    - id: parameters-attribution
      name: attribution
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: quote
      title: Quote
      keywords: []
      oneliner: Displays a quote alongside an optional attribution.
      element: true
      details: |-
        <p>Displays a quote alongside an optional attribution.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Plato is often misquoted as the author of <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>I know that I know
        nothing<span class="typ-punct">]</span>, however, this is a derivation form his original quote:

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>Plato<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
          <span class="typ-escape">...</span> ἔοικα γοῦν τούτου γε σμικρῷ τινι αὐτῷ τούτῳ σοφώτερος εἶναι, ὅτι
          ἃ μὴ οἶδα οὐδὲ οἴομαι εἰδέναι.
        <span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>from the Henry Cary literal translation of 1897<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
          <span class="typ-escape">...</span> I seem, then, in just this little thing to be wiser than this man at
          any rate, that what I do not know I do not think I know either.
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/22c370bf2c961fe57d4cf3e653ee2a50.png" alt="Preview" width="480" height="190"/></div></div>
        <p>By default block quotes are padded left and right by <code><span class="typ-num">1em</span></code>, alignment and
        padding can be controlled with show rules:</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">quote</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">quote</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">pad</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">5em</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>
          You cannot pass<span class="typ-escape">...</span> I am a servant of the Secret Fire, wielder of the
          flame of Anor. You cannot pass. The dark fire will not avail you,
          flame of Udûn. Go back to the Shadow! You cannot pass.
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/873cc484534e1a0603b0aaa2b05c5d48.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: block
        details: <p>Whether this is a block quote.</p>
        example: |-
          <div class="previewed-code"><pre><code>An inline citation would look like
          this: <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
            attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>René Descartes<span class="typ-punct">]</span>
          <span class="typ-punct">)</span><span class="typ-punct">[</span>
            cogito, ergo sum
          <span class="typ-punct">]</span>, and a block equation like this:
          <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
            block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
            attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>JFK<span class="typ-punct">]</span>
          <span class="typ-punct">)</span><span class="typ-punct">[</span>
            Ich bin ein Berliner.
          <span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/51b31f61d982f0fdc803d080fa60731e.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: quotes
        details: |-
          <p>Whether double quotes should be added around this quote.</p>
          <p>The double quotes used are inferred from the <code>quotes</code> property on
          <a href="/docs/reference/text/smartquote/">smartquote</a>, which is affected by the <code>lang</code> property on
          <a href="/docs/reference/text/text/">text</a>.</p>
          <ul>
          <li><code><span class="typ-key">true</span></code>: Wrap this quote in double quotes.</li>
          <li><code><span class="typ-key">false</span></code>: Do not wrap this quote in double quotes.</li>
          <li><code><span class="typ-key">auto</span></code>: Infer whether to wrap this quote in double quotes based on
          the <code>block</code> property. If <code>block</code> is <code><span class="typ-key">false</span></code>, double quotes are
          automatically added.</li>
          </ul>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>

          Ein deutsch-sprechender Author
          zitiert unter umständen JFK:
          <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>Ich bin ein Berliner.<span class="typ-punct">]</span>

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;en&quot;</span><span class="typ-punct">)</span>

          And an english speaking one may
          translate the quote:
          <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>I am a Berliner.<span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/66c22965686d14bca1c4c7eab97e9bfb.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - bool
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: attribution
        details: |-
          <p>The attribution of this quote, usually the author or source. Can be a
          label pointing to a bibliography entry or any content. By default only
          displayed for block quotes, but can be changed using a <code><span class="typ-key">show</span></code> rule.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>René Descartes<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
            cogito, ergo sum
          <span class="typ-punct">]</span>

          <span class="typ-key">#</span><span class="typ-key">show</span> quote<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
            <span class="typ-punct">[</span>&quot;<span class="typ-punct">]</span> <span class="typ-op">+</span> <span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-op">+</span> it<span class="typ-punct">.</span>body <span class="typ-op">+</span> <span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-punct">[</span>&quot;<span class="typ-punct">]</span>
            <span class="typ-key">if</span> it<span class="typ-punct">.</span>attribution <span class="typ-op">!=</span> <span class="typ-key">none</span> <span class="typ-punct">[</span> (<span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">attribution</span>)<span class="typ-punct">]</span>
          <span class="typ-punct">}</span>

          <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
            attribution<span class="typ-punct">:</span> <span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://typst.app/home&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>typst.com<span class="typ-punct">]</span>
          <span class="typ-punct">)</span><span class="typ-punct">[</span>
            Compose papers faster
          <span class="typ-punct">]</span>

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-label">&lt;tolkien54&gt;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
            You cannot pass<span class="typ-escape">...</span> I am a servant
            of the Secret Fire, wielder of the
            flame of Anor. You cannot pass. The
            dark fire will not avail you, flame
            of Udûn. Go back to the Shadow! You
            cannot pass.
          <span class="typ-punct">]</span>

          <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;apa&quot;</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/c418e1d0ab04fb657912d42a3a6053d3.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - label
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The quote.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/ref/
  title: Reference
  description: '`ref` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: customization
    name: Customization
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-target
      name: target
      children: []
    - id: parameters-supplement
      name: supplement
      children: []
  body:
    kind: func
    content:
      path: []
      name: ref
      title: Reference
      keywords: []
      oneliner: A reference to a label or bibliography.
      element: true
      details: |-
        <p>A reference to a label or bibliography.</p>
        <p>Produces a textual reference to a label. For example, a reference to a
        heading will yield an appropriate string such as &quot;Section 1&quot; for a reference
        to the first heading. The references are also links to the respective
        element. Reference syntax can also be used to <a href="/docs/reference/model/cite/">cite</a> from a
        bibliography.</p>
        <p>Referenceable elements include <a href="/docs/reference/model/heading/">headings</a>, <a href="/docs/reference/model/figure/">figures</a>,
        <a href="/docs/reference/math/equation/">equations</a>, and <a href="/docs/reference/model/footnote/">footnotes</a>. To create a custom
        referenceable element like a theorem, you can create a figure of a custom
        <a href="/docs/reference/model/figure/#parameters-kind"><code>kind</code></a> and write a show rule for it. In the future, there
        might be a more direct way to define a custom referenceable element.</p>
        <p>If you just want to link to a labelled element and not get an automatic
        textual reference, consider using the <a href="/docs/reference/model/link/"><code>link</code></a> function instead.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

        <span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
        Recent developments in
        typesetting software have
        rekindled hope in previously
        frustrated researchers. <span class="typ-ref">@distress</span>
        As shown in <span class="typ-ref">@results</span>, we <span class="typ-escape">...</span>

        <span class="typ-heading">= Results</span> <span class="typ-label">&lt;results&gt;</span>
        We discuss our approach in
        comparison with others.

        <span class="typ-heading">== Performance</span> <span class="typ-label">&lt;perf&gt;</span>
        <span class="typ-ref">@slow</span> demonstrates what slow
        software looks like.
        <span class="typ-math-delim">$</span> O(n) = 2<span class="typ-math-op">^</span>n <span class="typ-math-delim">$</span> <span class="typ-label">&lt;slow&gt;</span>

        <span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/3492082c98f2903651fb394f3d2e9472.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function also has dedicated syntax: A reference to a label can be
        created by typing an <code>@</code> followed by the name of the label (e.g.
        <code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span></code> can be referenced by typing <code><span class="typ-ref">@intro</span></code>).</p>
        <p>To customize the supplement, add content in square brackets after the
        reference: <code><span class="typ-ref">@intro<span class="typ-punct">[</span>Chapter<span class="typ-punct">]</span></span></code>.</p>
        <h2 id="customization">Customization</h2>
        <p>If you write a show rule for references, you can access the referenced
        element through the <code>element</code> field of the reference. The <code>element</code> may
        be <code><span class="typ-key">none</span></code> even if it exists if Typst hasn't discovered it yet, so you
        always need to handle that case in your code.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">ref</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
          <span class="typ-key">let</span> eq <span class="typ-op">=</span> math<span class="typ-punct">.</span>equation
          <span class="typ-key">let</span> el <span class="typ-op">=</span> it<span class="typ-punct">.</span>element
          <span class="typ-key">if</span> el <span class="typ-op">!=</span> <span class="typ-key">none</span> <span class="typ-key">and</span> el<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> eq <span class="typ-punct">{</span>
            <span class="typ-comment">// Override equation references.</span>
            <span class="typ-func">numbering</span><span class="typ-punct">(</span>
              el<span class="typ-punct">.</span>numbering<span class="typ-punct">,</span>
              <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>eq<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>el<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
            <span class="typ-punct">)</span>
          <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
            <span class="typ-comment">// Other references as usual.</span>
            it
          <span class="typ-punct">}</span>
        <span class="typ-punct">}</span>

        <span class="typ-heading">= Beginnings</span> <span class="typ-label">&lt;beginning&gt;</span>
        In <span class="typ-ref">@beginning</span> we prove <span class="typ-ref">@pythagoras</span>.
        <span class="typ-math-delim">$</span> a<span class="typ-math-op">^</span>2 + b<span class="typ-math-op">^</span>2 = c<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;pythagoras&gt;</span>
        </code></pre><div class="preview"><img src="/assets/docs/670ed605e234dd0e2bb76e690e91de9b.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: target
        details: |-
          <p>The target label that should be referenced.</p>
          <p>Can be a label that is defined in the document or an entry from the
          <a href="/docs/reference/model/bibliography/"><code>bibliography</code></a>.</p>
        example: null
        types:
        - label
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: supplement
        details: |-
          <p>A supplement for the reference.</p>
          <p>For references to headings or figures, this is added before the
          referenced number. For citations, this can be used to add a page number.</p>
          <p>If a function is specified, it is passed the referenced element and
          should return content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">ref</span><span class="typ-punct">(</span>supplement<span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
            <span class="typ-key">if</span> it<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> heading <span class="typ-punct">{</span>
              <span class="typ-str">&quot;Chapter&quot;</span>
            <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
              <span class="typ-str">&quot;Thing&quot;</span>
            <span class="typ-punct">}</span>
          <span class="typ-punct">}</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
          In <span class="typ-ref">@intro</span>, we see how to turn
          Sections into Chapters. And
          in <span class="typ-ref">@intro<span class="typ-punct">[</span>Part<span class="typ-punct">]</span></span>, it is done
          manually.
          </code></pre><div class="preview"><img src="/assets/docs/2f427dc238f541c03aaf036dcd46e7e9.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - auto
        - content
        - function
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/strong/
  title: Strong Emphasis
  description: '`strong` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-delta
      name: delta
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: strong
      title: Strong Emphasis
      keywords: []
      oneliner: Strongly emphasizes content by increasing the font weight.
      element: true
      details: |-
        <p>Strongly emphasizes content by increasing the font weight.</p>
        <p>Increases the current font weight by a given <code>delta</code>.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>This is <span class="typ-strong">*strong.*</span> <span class="typ-escape">\</span>
        This is <span class="typ-func">#</span><span class="typ-func">strong</span><span class="typ-punct">[</span>too.<span class="typ-punct">]</span> <span class="typ-escape">\</span>

        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">strong</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>
        And this is <span class="typ-strong">*evermore.*</span>
        </code></pre><div class="preview"><img src="/assets/docs/014685f115101d62862a2bf909e6e378.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function also has dedicated syntax: To strongly emphasize content,
        simply enclose it in stars/asterisks (<code>*</code>). Note that this only works at
        word boundaries. To strongly emphasize part of a word, you have to use the
        function.</p>
      example: null
      self: false
      params:
      - name: delta
        details: <p>The delta to apply on the font weight.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">strong</span><span class="typ-punct">(</span>delta<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span>
          No <span class="typ-strong">*effect!*</span>
          </code></pre><div class="preview"><img src="/assets/docs/6fba91c4a7a0b5fd6b037f494d06b3f9.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - int
        strings: []
        default: <code><span class="typ-num">300</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to strongly emphasize.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/table/
  title: Table
  description: '`table` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-columns
      name: columns
      children: []
    - id: parameters-rows
      name: rows
      children: []
    - id: parameters-gutter
      name: gutter
      children: []
    - id: parameters-column-gutter
      name: column-gutter
      children: []
    - id: parameters-row-gutter
      name: row-gutter
      children: []
    - id: parameters-fill
      name: fill
      children: []
    - id: parameters-align
      name: align
      children: []
    - id: parameters-stroke
      name: stroke
      children: []
    - id: parameters-inset
      name: inset
      children: []
    - id: parameters-children
      name: children
      children: []
  body:
    kind: func
    content:
      path: []
      name: table
      title: Table
      keywords: []
      oneliner: A table of items.
      element: true
      details: |-
        <p>A table of items.</p>
        <p>Tables are used to arrange content in cells. Cells can contain arbitrary
        content, including multiple paragraphs and are specified in row-major order.
        Because tables are just grids with configurable cell properties, refer to
        the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on how to size the
        table tracks.</p>
        <p>To give a table a caption and make it <a href="/docs/reference/model/ref/">referenceable</a>, put it into a
        <a href="/docs/reference/model/figure/">figure</a>.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
          <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Area*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Parameters*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;cylinder.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-math-delim">$</span> <span class="typ-pol">pi</span> h <span class="typ-punct">(</span>D<span class="typ-math-op">^</span>2 <span class="typ-escape">-</span> d<span class="typ-math-op">^</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 4 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>
            <span class="typ-math-delim">$</span>h<span class="typ-math-delim">$</span>: height <span class="typ-escape">\</span>
            <span class="typ-math-delim">$</span>D<span class="typ-math-delim">$</span>: outer radius <span class="typ-escape">\</span>
            <span class="typ-math-delim">$</span>d<span class="typ-math-delim">$</span>: inner radius
          <span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tetrahedron.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 12 a<span class="typ-math-op">^</span>3 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span><span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>: edge length<span class="typ-punct">]</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/def578cdeaad880e80767056b9577c66.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: columns
        details: |-
          <p>The column sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more
          information on track sizing.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: rows
        details: |-
          <p>The row sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information
          on track sizing.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: gutter
        details: |-
          <p>The gaps between rows &amp; columns. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for
          more information on gutters.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: column-gutter
        details: |-
          <p>The gaps between columns. Takes precedence over <code>gutter</code>. See the
          <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: row-gutter
        details: |-
          <p>The gaps between rows. Takes precedence over <code>gutter</code>. See the
          <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: |-
          <p>How to fill the cells.</p>
          <p>This can be a color or a function that returns a color. The function is
          passed the cells' column and row index, starting at zero. This can be
          used to implement striped tables.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
            fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>col<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>col<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span><span class="typ-punct">,</span>
            align<span class="typ-punct">:</span> <span class="typ-punct">(</span>col<span class="typ-punct">,</span> row<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
              <span class="typ-key">if</span> row <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span>
              <span class="typ-key">else</span> <span class="typ-key">if</span> col <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span>
              <span class="typ-key">else</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span><span class="typ-punct">,</span>
            columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q1*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q2*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q3*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Revenue:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3000 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Expenses:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Profit:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/cb2582ac1a1db1e8719b8fd119e5fe8c.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - color
        - gradient
        - array
        - pattern
        - function
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: align
        details: |-
          <p>How to align the cells' content.</p>
          <p>This can either be a single alignment, an array of alignments
          (corresponding to each column) or a function that returns an alignment.
          The function is passed the cells' column and row index, starting at zero.
          If set to <code><span class="typ-key">auto</span></code>, the outer alignment is used.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
            columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
            align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> center<span class="typ-punct">,</span> right<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/5fcf012efff110eb740ed2d90febb2e0.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - array
        - alignment
        - function
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: |-
          <p>How to <a href="/docs/reference/visualize/stroke/">stroke</a> the cells.</p>
          <p>Strokes can be disabled by setting this to <code><span class="typ-key">none</span></code>.</p>
          <p><em>Note:</em> Richer stroke customization for individual cells is not yet
          implemented, but will be in the future. In the meantime, you can use the
          third-party <a href="https://github.com/PgBiel/typst-tablex/">tablex library</a>.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
          black</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: inset
        details: <p>How much to pad the cells' content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
            inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
            columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
            inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>
              x<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
              y<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
            <span class="typ-punct">)</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/51ec900d498b539d860dbaed5df278b1.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">5pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: <p>The contents of the table cells.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/model/terms/
  title: Term List
  description: '`terms` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-tight
      name: tight
      children: []
    - id: parameters-separator
      name: separator
      children: []
    - id: parameters-indent
      name: indent
      children: []
    - id: parameters-hanging-indent
      name: hanging-indent
      children: []
    - id: parameters-spacing
      name: spacing
      children: []
    - id: parameters-children
      name: children
      children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-item
      name: Term List Item
      children:
      - id: definitions-item-term
        name: term
        children: []
      - id: definitions-item-description
        name: description
        children: []
  body:
    kind: func
    content:
      path: []
      name: terms
      title: Term List
      keywords: []
      oneliner: A list of terms and their descriptions.
      element: true
      details: |-
        <p>A list of terms and their descriptions.</p>
        <p>Displays a sequence of terms and their descriptions vertically. When the
        descriptions span over multiple lines, they use hanging indent to
        communicate the visual hierarchy.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-marker">/</span> <span class="typ-term">Ligature</span><span class="typ-punct">:</span> A merged glyph.
        <span class="typ-marker">/</span> <span class="typ-term">Kerning</span><span class="typ-punct">:</span> A spacing adjustment
          between two adjacent letters.
        </code></pre><div class="preview"><img src="/assets/docs/3325004b6cf4c50937c1b673a8b3eec9.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="syntax">Syntax</h2>
        <p>This function also has dedicated syntax: Starting a line with a slash,
        followed by a term, a colon and a description creates a term list item.</p>
      example: null
      self: false
      params:
      - name: tight
        details: |-
          <p>If this is <code><span class="typ-key">false</span></code>, the items are spaced apart with
          <a href="/docs/reference/model/terms/#parameters-spacing">term list spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use normal
          <a href="/docs/reference/model/par/#parameters-leading">leading</a> instead. This makes the term list more compact,
          which can look better if the items are short.</p>
          <p>In markup mode, the value of this parameter is determined based on
          whether items are separated with a blank line. If items directly follow
          each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
          line, this is set to <code><span class="typ-key">false</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-marker">/</span> <span class="typ-term">Fact</span><span class="typ-punct">:</span> If a term list has a lot
            of text, and maybe other inline
            content, it should not be tight
            anymore.

          <span class="typ-marker">/</span> <span class="typ-term">Tip</span><span class="typ-punct">:</span> To make it wide, simply
            insert a blank line between the
            items.
          </code></pre><div class="preview"><img src="/assets/docs/f8ffd77b749c4ef711f291f4aebd266f.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: separator
        details: |-
          <p>The separator between the item and the description.</p>
          <p>If you want to just separate them with a certain amount of space, use
          <code><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2cm</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code> as the separator and replace <code><span class="typ-num">2cm</span></code> with your
          desired amount of space.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">terms</span><span class="typ-punct">(</span>separator<span class="typ-punct">:</span> <span class="typ-punct">[</span>: <span class="typ-punct">]</span><span class="typ-punct">)</span>

          <span class="typ-marker">/</span> <span class="typ-term">Colon</span><span class="typ-punct">:</span> A nice separator symbol.
          </code></pre><div class="preview"><img src="/assets/docs/9f44f12c1356a7533d0b113d74a3f7b1.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - content
        strings: []
        default: <code><span class="typ-func">h</span><span class="typ-punct">(</span>amount<span
          class="typ-punct">:</span> <span class="typ-num">0.6em</span><span class="typ-punct">,</span>
          weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span
          class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: indent
        details: <p>The indentation of each item.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: hanging-indent
        details: |-
          <p>The hanging indent of the description.</p>
          <p>This is in addition to the whole item's <code>indent</code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">terms</span><span class="typ-punct">(</span>hanging-indent<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
          <span class="typ-marker">/</span> <span class="typ-term">Term</span><span class="typ-punct">:</span> This term list does not
            make use of hanging indents.
          </code></pre><div class="preview"><img src="/assets/docs/f607ecd996ae16cc07d8a00a60cc39ba.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - length
        strings: []
        default: <code><span class="typ-num">2em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: spacing
        details: |-
          <p>The spacing between the items of a wide (non-tight) term list.</p>
          <p>If set to <code><span class="typ-key">auto</span></code>, uses the spacing <a href="/docs/reference/layout/block/#parameters-below">below blocks</a>.</p>
        example: null
        types:
        - auto
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: |-
          <p>The term list's children.</p>
          <p>When using the term list syntax, adjacent items are automatically
          collected into term lists, even through constructs like for loops.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> <span class="typ-punct">(</span>year<span class="typ-punct">,</span> product<span class="typ-punct">)</span> <span class="typ-key">in</span> <span class="typ-punct">(</span>
            <span class="typ-str">&quot;1978&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;TeX&quot;</span><span class="typ-punct">,</span>
            <span class="typ-str">&quot;1984&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;LaTeX&quot;</span><span class="typ-punct">,</span>
            <span class="typ-str">&quot;2019&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;Typst&quot;</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">/</span> <span class="typ-term"><span class="typ-pol">#</span><span class="typ-pol">product</span></span><span class="typ-punct">:</span> Born in <span class="typ-pol">#</span><span class="typ-pol">year</span>.<span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/1cfeb40c46faf0014934be9ad248ae61.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - content
        - array
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope:
      - path:
        - terms
        name: item
        title: Term List Item
        keywords: []
        oneliner: A term list item.
        element: true
        details: <p>A term list item.</p>
        example: null
        self: false
        params:
        - name: term
          details: <p>The term described by the list item.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        - name: description
          details: <p>The description of the term.</p>
          example: null
          types:
          - content
          strings: []
          default: null
          positional: true
          named: false
          required: true
          variadic: false
          settable: false
        returns:
        - content
        scope: []
  children: []
