route: /docs/reference/layout/
title: Layout
description: Typst 中与 Layout 有关联的函数族的文档
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: definitions
  name: Definitions
  children: []
body:
  kind: category
  content:
    name: layout
    title: Layout
    details: |-
      <p>Arranging elements on the page in different ways.</p>
      <p>By combining layout functions, you can create complex and automatic layouts.</p>
    items:
    - name: align
      route: /docs/reference/layout/align/
      oneliner: Aligns content horizontally and vertically.
      code: true
    - name: alignment
      route: /docs/reference/layout/alignment/
      oneliner: Where to [align]($align) something along an axis.
      code: true
    - name: angle
      route: /docs/reference/layout/angle/
      oneliner: An angle describing a rotation.
      code: true
    - name: block
      route: /docs/reference/layout/block/
      oneliner: A block-level container.
      code: true
    - name: box
      route: /docs/reference/layout/box/
      oneliner: An inline-level container that sizes content.
      code: true
    - name: colbreak
      route: /docs/reference/layout/colbreak/
      oneliner: Forces a column break.
      code: true
    - name: columns
      route: /docs/reference/layout/columns/
      oneliner: Separates a region into multiple equally sized columns.
      code: true
    - name: direction
      route: /docs/reference/layout/direction/
      oneliner: The four directions into which content can be laid out.
      code: true
    - name: fraction
      route: /docs/reference/layout/fraction/
      oneliner: Defines how the the remaining space in a layout is distributed.
      code: true
    - name: grid
      route: /docs/reference/layout/grid/
      oneliner: Arranges content in a grid.
      code: true
    - name: h
      route: /docs/reference/layout/h/
      oneliner: Inserts horizontal spacing into a paragraph.
      code: true
    - name: hide
      route: /docs/reference/layout/hide/
      oneliner: Hides content without affecting layout.
      code: true
    - name: layout
      route: /docs/reference/layout/layout/
      oneliner: Provides access to the current outer container's (or page's, if none)
        size
      code: true
    - name: length
      route: /docs/reference/layout/length/
      oneliner: A size or distance, possibly expressed with contextual units.
      code: true
    - name: measure
      route: /docs/reference/layout/measure/
      oneliner: Measures the layouted size of content.
      code: true
    - name: move
      route: /docs/reference/layout/move/
      oneliner: Moves content without affecting layout.
      code: true
    - name: pad
      route: /docs/reference/layout/pad/
      oneliner: Adds spacing around content.
      code: true
    - name: page
      route: /docs/reference/layout/page/
      oneliner: Layouts its child onto one or multiple pages.
      code: true
    - name: pagebreak
      route: /docs/reference/layout/pagebreak/
      oneliner: A manual page break.
      code: true
    - name: place
      route: /docs/reference/layout/place/
      oneliner: Places content at an absolute position.
      code: true
    - name: ratio
      route: /docs/reference/layout/ratio/
      oneliner: A ratio of a whole.
      code: true
    - name: relative
      route: /docs/reference/layout/relative/
      oneliner: A length in relation to some known length.
      code: true
    - name: repeat
      route: /docs/reference/layout/repeat/
      oneliner: Repeats content to the available space.
      code: true
    - name: rotate
      route: /docs/reference/layout/rotate/
      oneliner: Rotates content without affecting layout.
      code: true
    - name: scale
      route: /docs/reference/layout/scale/
      oneliner: Scales content without affecting layout.
      code: true
    - name: stack
      route: /docs/reference/layout/stack/
      oneliner: Arranges content and spacing horizontally or vertically.
      code: true
    - name: v
      route: /docs/reference/layout/v/
      oneliner: Inserts vertical spacing into a flow of blocks.
      code: true
    shorthands: null
children:
- route: /docs/reference/layout/align/
  title: Align
  description: '`align` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-alignment
      name: alignment
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: align
      title: Align
      keywords: []
      oneliner: Aligns content horizontally and vertically.
      element: true
      details: |-
        <p>Aligns content horizontally and vertically.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>

        Centered text, a sight to see <span class="typ-escape">\</span>
        In perfect balance, visually <span class="typ-escape">\</span>
        Not left nor right, it stands alone <span class="typ-escape">\</span>
        A work of art, a visual throne
        </code></pre><div class="preview"><img src="/assets/docs/99b62ab7d2744a6c2a0f96112724a0be.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: alignment
        details: <p>The <a href="/docs/reference/layout/alignment/">alignment</a>
          along both axes.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">6cm</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ar&quot;</span><span class="typ-punct">)</span>

          مثال
          <span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>
            end <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
            <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">12pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>ركن<span class="typ-punct">]</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/af1bf010107c79121d459388249efb42.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - alignment
        strings: []
        default: <code>start <span class="typ-op">+</span> top</code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to align.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/alignment/
  title: Alignment
  description: Alignment 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: 2d-alignments
    name: 2d Alignments
    children: []
  - id: fields
    name: Fields
    children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-axis
      name: Axis
      children: []
    - id: definitions-inv
      name: Inverse
      children: []
  body:
    kind: type
    content:
      name: alignment
      title: Alignment
      keywords: []
      oneliner: Where to [align]($align) something along an axis.
      details: |-
        <p>Where to <a href="/docs/reference/layout/align/">align</a> something along an axis.</p>
        <p>Possible values are:</p>
        <ul>
        <li><code>start</code>: Aligns at the <a href="/docs/reference/layout/direction/#definitions-start">start</a> of the <a href="/docs/reference/text/text/#parameters-dir">text
        direction</a>.</li>
        <li><code>end</code>: Aligns at the <a href="/docs/reference/layout/direction/#definitions-end">end</a> of the <a href="/docs/reference/text/text/#parameters-dir">text
        direction</a>.</li>
        <li><code>left</code>: Align at the left.</li>
        <li><code>center</code>: Aligns in the middle, horizontally.</li>
        <li><code>right</code>: Aligns at the right.</li>
        <li><code>top</code>: Aligns at the top.</li>
        <li><code>horizon</code>: Aligns in the middle, vertically.</li>
        <li><code>bottom</code>: Align at the bottom.</li>
        </ul>
        <p>These values are available globally and also in the alignment type's scope,
        so you can write either of the following two:</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>alignment<span class="typ-punct">.</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/e28d5f24b9b9ec5e2fe83dc55a4949ac.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="2d-alignments">2D alignments</h2>
        <p>To align along both axes at the same time, add the two alignments using the
        <code>+</code> operator. For example, <code>top + right</code> aligns the content to the top right
        corner.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/c4e80b2eeec7b0a44efebb1ec678f7c4.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="fields">Fields</h2>
        <p>The <code>x</code> and <code>y</code> fields hold the alignment's horizontal and vertical
        components, respectively (as yet another <code>alignment</code>). They may be <code><span class="typ-key">none</span></code>.</p>
        <div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span>top <span class="typ-op">+</span> right<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">x</span> <span class="typ-escape">\</span>
        <span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-pol">x</span> <span class="typ-escape">\</span>
        <span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-pol">y</span> (none)
        </code></pre><div class="preview"><img src="/assets/docs/7d1f8a6cbfa1518a7c3849b2338abdd5.png" alt="Preview" width="480" height="190"/></div></div>
      constructor: null
      scope:
      - path:
        - alignment
        name: axis
        title: Axis
        keywords: []
        oneliner: The axis this alignment belongs to.
        element: false
        details: |-
          <p>The axis this alignment belongs to.</p>
          <ul>
          <li><code><span class="typ-str">&quot;horizontal&quot;</span></code> for <code>start</code>, <code>left</code>, <code>center</code>, <code>right</code>, and <code>end</code></li>
          <li><code><span class="typ-str">&quot;vertical&quot;</span></code> for <code>top</code>, <code>horizon</code>, and <code>bottom</code></li>
          <li><code><span class="typ-key">none</span></code> for 2-dimensional alignments</li>
          </ul>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">bottom</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/db0a6842f60e42aea050f83ee6864d92.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns: []
        scope: []
      - path:
        - alignment
        name: inv
        title: Inverse
        keywords: []
        oneliner: The inverse alignment.
        element: false
        details: <p>The inverse alignment.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">top</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">center</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-punct">#</span><span class="typ-punct">(</span>left <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/36b68390211eaa28efa8a712f2e3d131.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns:
        - alignment
        scope: []
  children: []
- route: /docs/reference/layout/angle/
  title: Angle
  description: Angle 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-rad
      name: Radians
      children: []
    - id: definitions-deg
      name: Degrees
      children: []
  body:
    kind: type
    content:
      name: angle
      title: Angle
      keywords: []
      oneliner: An angle describing a rotation.
      details: |-
        <p>An angle describing a rotation.</p>
        <p>Typst supports the following angular units:</p>
        <ul>
        <li>Degrees: <code><span class="typ-num">180deg</span></code></li>
        <li>Radians: <code><span class="typ-num">3.14rad</span></code></li>
        </ul>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">10deg</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Hello there!<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/4d293c1fa9d576491b60d905e3d10ad5.png" alt="Preview" width="480" height="190"/></div></div>
      constructor: null
      scope:
      - path:
        - angle
        name: rad
        title: Radians
        keywords: []
        oneliner: Converts this angle to radians.
        element: false
        details: <p>Converts this angle to radians.</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
      - path:
        - angle
        name: deg
        title: Degrees
        keywords: []
        oneliner: Converts this angle to degrees.
        element: false
        details: <p>Converts this angle to degrees.</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
  children: []
- route: /docs/reference/layout/block/
  title: Block
  description: '`block` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: examples
    name: Examples
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-width
      name: width
      children: []
    - id: parameters-height
      name: height
      children: []
    - id: parameters-breakable
      name: breakable
      children: []
    - id: parameters-fill
      name: fill
      children: []
    - id: parameters-stroke
      name: stroke
      children: []
    - id: parameters-radius
      name: radius
      children: []
    - id: parameters-inset
      name: inset
      children: []
    - id: parameters-outset
      name: outset
      children: []
    - id: parameters-spacing
      name: spacing
      children: []
    - id: parameters-above
      name: above
      children: []
    - id: parameters-below
      name: below
      children: []
    - id: parameters-clip
      name: clip
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: block
      title: Block
      keywords: []
      oneliner: A block-level container.
      element: true
      details: |-
        <p>A block-level container.</p>
        <p>Such a container can be used to separate content, size it, and give it a
        background or border.</p>
        <h2 id="examples">Examples</h2>
        <p>With a block, you can give a background to content while still allowing it
        to break across multiple pages.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">230</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
          radius<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
          <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/ab89b7c75b487ae586e887637d73567f.png" alt="Preview" width="480" height="190"/></div></div>
        <p>Blocks are also useful to force elements that would otherwise be inline to
        become block-level, especially when writing show rules.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> it<span class="typ-punct">.</span>body
        <span class="typ-heading">= Blockless</span>
        More text.

        <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-func">block</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
        <span class="typ-heading">= Blocky</span>
        More text.
        </code></pre><div class="preview"><img src="/assets/docs/5ef4237b9611cf2dc612f6e7d9320917.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: width
        details: <p>The block's width.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
            width<span class="typ-punct">:</span> <span class="typ-num">60%</span><span class="typ-punct">,</span>
            inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> silver<span class="typ-punct">,</span>
            <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/0c485656ae4b3bfac064035a6baf6068.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - relative
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: height
        details: |-
          <p>The block's height. When the height is larger than the remaining space
          on a page and <a href="/docs/reference/layout/block/#parameters-breakable"><code>breakable</code></a> is <code><span class="typ-key">true</span></code>, the
          block will continue on the next page with the remaining height.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">80pt</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
            width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">,</span>
            height<span class="typ-punct">:</span> <span class="typ-num">150%</span><span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> aqua<span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/9216b477f8dc7b569ba3638a9e0c89db.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - relative
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: breakable
        details: <p>Whether the block can be broken and continue on the next page.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">80pt</span><span class="typ-punct">)</span>
          The following block will
          jump to its own page.
          <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
            breakable<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">,</span>
            <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/e7579ea793a5715ac5d8c07f80518a2e.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: |-
          <p>The block's background color. See the
          <a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - none
        - color
        - gradient
        - pattern
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: |-
          <p>The block's border color. See the
          <a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: radius
        details: |-
          <p>How much to round the block's corners. See the
          <a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: inset
        details: |-
          <p>How much to pad the block's content. See the
          <a href="/docs/reference/layout/box/#parameters-inset">box's documentation</a> for more details.</p>
        example: null
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: outset
        details: |-
          <p>How much to expand the block's size without affecting the layout. See
          the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>
        example: null
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: spacing
        details: |-
          <p>The spacing around this block. This is shorthand to set <code>above</code> and
          <code>below</code> to the same value.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>above<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span> below<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">)</span>

          This sum of <span class="typ-math-delim">$</span>x<span class="typ-math-delim">$</span> and <span class="typ-math-delim">$</span>y<span class="typ-math-delim">$</span>:
          <span class="typ-math-delim">$</span> x + y = z <span class="typ-math-delim">$</span>
          A second paragraph.
          </code></pre><div class="preview"><img src="/assets/docs/5ae55f84ba22f7cdd9f70a87f89d5d6a.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-num">1.2em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: above
        details: |-
          <p>The spacing between this block and its predecessor. Takes precedence
          over <code>spacing</code>. Can be used in combination with a show rule to adjust
          the spacing around arbitrary block-level elements.</p>
        example: null
        types:
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-num">1.2em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: below
        details: |-
          <p>The spacing between this block and its successor. Takes precedence
          over <code>spacing</code>.</p>
        example: null
        types:
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-num">1.2em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: clip
        details: <p>Whether to clip the content inside the block.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The contents of the block.</p>
        example: null
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/box/
  title: Box
  description: '`box` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-width
      name: width
      children: []
    - id: parameters-height
      name: height
      children: []
    - id: parameters-baseline
      name: baseline
      children: []
    - id: parameters-fill
      name: fill
      children: []
    - id: parameters-stroke
      name: stroke
      children: []
    - id: parameters-radius
      name: radius
      children: []
    - id: parameters-inset
      name: inset
      children: []
    - id: parameters-outset
      name: outset
      children: []
    - id: parameters-clip
      name: clip
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: box
      title: Box
      keywords: []
      oneliner: An inline-level container that sizes content.
      element: true
      details: |-
        <p>An inline-level container that sizes content.</p>
        <p>All elements except inline math, text, and boxes are block-level and cannot
        occur inside of a paragraph. The box function can be used to integrate such
        elements into a paragraph. Boxes take the size of their contents by default
        but can also be sized explicitly.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Refer to the docs
        <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
          height<span class="typ-punct">:</span> <span class="typ-num">9pt</span><span class="typ-punct">,</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;docs.svg&quot;</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        for more information.
        </code></pre><div class="preview"><img src="/assets/docs/a69161e8d3a6cd02c2396239bd663d75.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: width
        details: |-
          <p>The width of the box.</p>
          <p>Boxes can have <a href="/docs/reference/layout/fraction/">fractional</a> widths, as the example below
          demonstrates.</p>
          <p><em>Note:</em> Currently, only boxes and only their widths might be fractionally
          sized within paragraphs. Support for fractionally sized images, shapes,
          and more might be added in the future.</p>
        example: |-
          <div class="previewed-code"><pre><code>Line in <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span> between.
          </code></pre><div class="preview"><img src="/assets/docs/50a4139d6982ed738ffae9042f416f6b.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: height
        details: <p>The height of the box.</p>
        example: null
        types:
        - auto
        - relative
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: baseline
        details: <p>An amount to shift the box's baseline by.</p>
        example: |-
          <div class="previewed-code"><pre><code>Image: <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>baseline<span class="typ-punct">:</span> <span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">)</span><span class="typ-punct">)</span>.
          </code></pre><div class="preview"><img src="/assets/docs/8181c80f2ca7f6f8a74475f785b52c3a.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: |-
          <p>The box's background color. See the
          <a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - none
        - color
        - gradient
        - pattern
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: |-
          <p>The box's border color. See the
          <a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: radius
        details: |-
          <p>How much to round the box's corners. See the
          <a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>
        example: null
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: inset
        details: |-
          <p>How much to pad the box's content.</p>
          <p><em>Note:</em> When the box contains text, its exact size depends on the
          current <a href="/docs/reference/text/text/#parameters-top-edge">text edges</a>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Tight<span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/12b05daad4eeea64ffffc63388faaec7.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: outset
        details: |-
          <p>How much to expand the box's size without affecting the layout.</p>
          <p>This is useful to prevent padding from affecting line layout. For a
          generalized version of the example below, see the documentation for the
          <a href="/docs/reference/text/raw/#parameters-block">raw text's block parameter</a>.</p>
        example: |-
          <div class="previewed-code"><pre><code>An inline
          <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
            fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">235</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            outset<span class="typ-punct">:</span> <span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            radius<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">[</span>rectangle<span class="typ-punct">]</span>.
          </code></pre><div class="preview"><img src="/assets/docs/cef337f9046b8a1dcf367f5a927a24bc.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: clip
        details: <p>Whether to clip the content inside the box.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The contents of the box.</p>
        example: null
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/colbreak/
  title: Column Break
  description: '`colbreak` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-weak
      name: weak
      children: []
  body:
    kind: func
    content:
      path: []
      name: colbreak
      title: Column Break
      keywords: []
      oneliner: Forces a column break.
      element: true
      details: |-
        <p>Forces a column break.</p>
        <p>The function will behave like a <a href="/docs/reference/layout/pagebreak/">page break</a> when used in a
        single column layout or the last column on a page. Otherwise, content after
        the column break will be placed in the next column.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
        Preliminary findings from our
        ongoing research project have
        revealed a hitherto unknown
        phenomenon of extraordinary
        significance.

        <span class="typ-func">#</span><span class="typ-func">colbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
        Through rigorous experimentation
        and analysis, we have discovered
        a hitherto uncharacterized process
        that defies our current
        understanding of the fundamental
        laws of nature.
        </code></pre><div class="preview"><img src="/assets/docs/f12173d10bc20540810180f34274c028.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: weak
        details: |-
          <p>If <code><span class="typ-key">true</span></code>, the column break is skipped if the current column is
          already empty.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/columns/
  title: Columns
  description: '`columns` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-count
      name: count
      children: []
    - id: parameters-gutter
      name: gutter
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: columns
      title: Columns
      keywords: []
      oneliner: Separates a region into multiple equally sized columns.
      element: true
      details: |-
        <p>Separates a region into multiple equally sized columns.</p>
        <p>The <code>column</code> function allows to separate the interior of any container into
        multiple columns. It will not equalize the height of the columns, instead,
        the columns will take up the height of their container or the remaining
        height on the page. The columns function can break across pages if
        necessary.</p>
        <p>If you need to insert columns across your whole document, you can use the
        <a href="/docs/reference/layout/page/#parameters-columns"><code>page</code> function's <code>columns</code> parameter</a> instead.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-heading">= Towards Advanced Deep Learning</span>

        <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">68pt</span><span class="typ-punct">,</span>
         <span class="typ-func">columns</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> gutter<span class="typ-punct">:</span> <span class="typ-num">11pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
           <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
           This research was funded by the
           National Academy of Sciences.
           NAoS provided support for field
           tests and interviews with a
           grant of up to USD 40.000 for a
           period of 6 months.
         <span class="typ-punct">]</span>
        <span class="typ-punct">)</span>

        In recent years, deep learning has
        increasingly been used to solve a
        variety of problems.
        </code></pre><div class="preview"><img src="/assets/docs/c5eb795a3e563522297d1f157b2eb6d5.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: count
        details: <p>The number of columns.</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">2</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: gutter
        details: <p>The size of the gutter space between each column.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">4%</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content that should be layouted into the columns.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/direction/
  title: Direction
  description: Direction 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-axis
      name: Axis
      children: []
    - id: definitions-start
      name: Start
      children: []
    - id: definitions-end
      name: End
      children: []
    - id: definitions-inv
      name: Inverse
      children: []
  body:
    kind: type
    content:
      name: direction
      title: Direction
      keywords: []
      oneliner: The four directions into which content can be laid out.
      details: |-
        <p>The four directions into which content can be laid out.</p>
        <p>Possible values are:</p>
        <ul>
        <li><code>ltr</code>: Left to right.</li>
        <li><code>rtl</code>: Right to left.</li>
        <li><code>ttb</code>: Top to bottom.</li>
        <li><code>btt</code>: Bottom to top.</li>
        </ul>
        <p>These values are available globally and
        also in the direction type's scope, so you can write either of the following
        two:</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> rtl<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> direction<span class="typ-punct">.</span>rtl<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/59549b0b50ea383af10b7a215b14f494.png" alt="Preview" width="480" height="190"/></div></div>
      constructor: null
      scope:
      - path:
        - direction
        name: axis
        title: Axis
        keywords: []
        oneliner: The axis this direction belongs to, either `{"horizontal"}` or
        element: false
        details: |-
          <p>The axis this direction belongs to, either <code><span class="typ-str">&quot;horizontal&quot;</span></code> or
          <code><span class="typ-str">&quot;vertical&quot;</span></code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/b0e9f299eb3273b9f89936cb4b13f7f6.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns: []
        scope: []
      - path:
        - direction
        name: start
        title: Start
        keywords: []
        oneliner: The start point of this direction, as an alignment.
        element: false
        details: <p>The start point of this direction, as an alignment.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/cd3d3914b2e141c16d5176a9ceb85d20.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns:
        - alignment
        scope: []
      - path:
        - direction
        name: end
        title: End
        keywords: []
        oneliner: The end point of this direction, as an alignment.
        element: false
        details: <p>The end point of this direction, as an alignment.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/e24e8d27f9a3a9f9426c0b9a8b3f7aa1.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns:
        - alignment
        scope: []
      - path:
        - direction
        name: inv
        title: Inverse
        keywords: []
        oneliner: The inverse direction.
        element: false
        details: <p>The inverse direction.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/81d7677792abf9d8063f81ccb3aee804.png" alt="Preview" width="480" height="190"/></div></div>
        self: true
        params: []
        returns:
        - direction
        scope: []
  children: []
- route: /docs/reference/layout/fraction/
  title: Fraction
  description: Fraction 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  body:
    kind: type
    content:
      name: fraction
      title: Fraction
      keywords: []
      oneliner: Defines how the the remaining space in a layout is distributed.
      details: |-
        <p>Defines how the the remaining space in a layout is distributed.</p>
        <p>Each fractionally sized element gets space based on the ratio of its
        fraction to the sum of all fractions.</p>
        <p>For more details, also see the <a href="/docs/reference/layout/h/">h</a> and <a href="/docs/reference/layout/v/">v</a> functions and the
        <a href="/docs/reference/layout/grid/">grid function</a>.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Left <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Left-ish <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2fr</span><span class="typ-punct">)</span> Right
        </code></pre><div class="preview"><img src="/assets/docs/7c542785879d65d65f8166a58a2db398.png" alt="Preview" width="480" height="190"/></div></div>
      constructor: null
      scope: []
  children: []
- route: /docs/reference/layout/grid/
  title: Grid
  description: '`grid` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: examples
    name: Examples
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-columns
      name: columns
      children: []
    - id: parameters-rows
      name: rows
      children: []
    - id: parameters-gutter
      name: gutter
      children: []
    - id: parameters-column-gutter
      name: column-gutter
      children: []
    - id: parameters-row-gutter
      name: row-gutter
      children: []
    - id: parameters-children
      name: children
      children: []
  body:
    kind: func
    content:
      path: []
      name: grid
      title: Grid
      keywords: []
      oneliner: Arranges content in a grid.
      element: true
      details: |-
        <p>Arranges content in a grid.</p>
        <p>The grid element allows you to arrange content in a grid. You can define the
        number of rows and columns, as well as the size of the gutters between them.
        There are multiple sizing modes for columns and rows that can be used to
        create complex layouts.</p>
        <p>The sizing of the grid is determined by the track sizes specified in the
        arguments. Because each of the sizing parameters accepts the same values, we
        will explain them just once, here. Each sizing argument accepts an array of
        individual track sizes. A track size is either:</p>
        <ul>
        <li>
        <p><code><span class="typ-key">auto</span></code>: The track will be sized to fit its contents. It will be at most
        as large as the remaining space. If there is more than one <code><span class="typ-key">auto</span></code> track
        which, and together they claim more than the available space, the <code><span class="typ-key">auto</span></code>
        tracks will fairly distribute the available space among themselves.</p>
        </li>
        <li>
        <p>A fixed or relative length (e.g. <code><span class="typ-num">10pt</span></code> or <code><span class="typ-num">20%</span> <span class="typ-op">-</span> <span class="typ-num">1cm</span></code>): The track
        will be exactly of this size.</p>
        </li>
        <li>
        <p>A fractional length (e.g. <code><span class="typ-num">1fr</span></code>): Once all other tracks have been sized,
        the remaining space will be divided among the fractional tracks according
        to their fractions. For example, if there are two fractional tracks, each
        with a fraction of <code><span class="typ-num">1fr</span></code>, they will each take up half of the remaining
        space.</p>
        </li>
        </ul>
        <p>To specify a single track, the array can be omitted in favor of a single
        value. To specify multiple <code><span class="typ-key">auto</span></code> tracks, enter the number of tracks
        instead of an array. For example, <code>columns:</code> <code><span class="typ-num">3</span></code> is equivalent to
        <code>columns:</code> <code><span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span></code>.</p>
        <h2 id="examples">Examples</h2>
        <p>The example below demonstrates the different track sizing options.</p>
        <div class="previewed-code"><pre><code><span class="typ-comment">// We use `rect` to emphasize the</span>
        <span class="typ-comment">// area of cells.</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
          fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;e4e5ea&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">60pt</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">2fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          rows<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">60pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          gutter<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">[</span>Fixed width, auto height<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">[</span>1/3 of the remains<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">[</span>2/3 of the remains<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Fixed height<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/43c676900a73f4788d9f6365f842d270.png" alt="Preview" width="480" height="190"/></div></div>
        <p>You can also <a href="/docs/reference/foundations/arguments//#spreading">spread</a> an array of strings or content
        into a grid to populate its cells.</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">5</span><span class="typ-punct">,</span>
          gutter<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
          <span class="typ-op">..</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">25</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>str<span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/c37e373dde75e6eaac9c3c1fa3f5bc64.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: columns
        details: |-
          <p>The column sizes.</p>
          <p>Either specify a track size array or provide an integer to create a grid
          with that many <code><span class="typ-key">auto</span></code>-sized columns. Note that opposed to rows and
          gutters, providing a single track size will only ever create a single
          column.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: rows
        details: |-
          <p>The row sizes.</p>
          <p>If there are more cells than fit the defined rows, the last row is
          repeated until there are no more cells.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: gutter
        details: |-
          <p>The gaps between rows &amp; columns.</p>
          <p>If there are more gutters than defined sizes, the last gutter is repeated.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: column-gutter
        details: <p>The gaps between columns. Takes precedence over <code>gutter</code>.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: row-gutter
        details: <p>The gaps between rows. Takes precedence over <code>gutter</code>.</p>
        example: null
        types:
        - auto
        - int
        - relative
        - fraction
        - array
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: |-
          <p>The contents of the grid cells.</p>
          <p>The cells are populated in row-major order.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/hide/
  title: Hide
  description: '`hide` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: hide
      title: Hide
      keywords: []
      oneliner: Hides content without affecting layout.
      element: true
      details: |-
        <p>Hides content without affecting layout.</p>
        <p>The <code>hide</code> function allows you to hide content while the layout still 'sees'
        it. This is useful to create whitespace that is exactly as large as some
        content. It may also be useful to redact content because its arguments are
        not included in the output.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Hello Jane <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">hide</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span> Joe
        </code></pre><div class="preview"><img src="/assets/docs/fddae312579bead5c4582daca6de4bf2.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: body
        details: <p>The content to hide.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/layout/
  title: Layout
  description: '`layout` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-func
      name: func
      children: []
  body:
    kind: func
    content:
      path: []
      name: layout
      title: Layout
      keywords: []
      oneliner: Provides access to the current outer container's (or page's, if none)
        size
      element: false
      details: |-
        <p>Provides access to the current outer container's (or page's, if none) size
        (width and height).</p>
        <p>The given function must accept a single parameter, <code>size</code>, which is a
        dictionary with keys <code>width</code> and <code>height</code>, both of type <a href="/docs/reference/layout/length/"><code>length</code></a>.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> text <span class="typ-op">=</span> <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">layout</span><span class="typ-punct">(</span>size <span class="typ-op">=&gt;</span> <span class="typ-func">style</span><span class="typ-punct">(</span>styles <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
          <span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>height<span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">measure</span><span class="typ-punct">(</span>
            <span class="typ-func">block</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> size<span class="typ-punct">.</span>width<span class="typ-punct">,</span> text<span class="typ-punct">)</span><span class="typ-punct">,</span>
            styles<span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          This text is <span class="typ-pol">#</span><span class="typ-pol">height</span> high with
          the current page width: <span class="typ-escape">\</span>
          <span class="typ-pol">#</span><span class="typ-pol">text</span>
        <span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/2e525c8e2988ed07b6ae0cd99f1dd314.png" alt="Preview" width="480" height="190"/></div></div>
        <p>If the <code>layout</code> call is placed inside of a box width a width of <code><span class="typ-num">800pt</span></code>
        and a height of <code><span class="typ-num">400pt</span></code>, then the specified function will be given the
        parameter <code><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">800pt</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">400pt</span><span class="typ-punct">)</span></code>. If it placed directly into the
        page it receives the page's dimensions minus its margins. This is mostly
        useful in combination with <a href="/docs/reference/layout/measure/">measurement</a>.</p>
        <p>You can also use this function to resolve <a href="/docs/reference/layout/ratio/"><code>ratio</code></a> to fixed
        lengths. This might come in handy if you're building your own layout
        abstractions.</p>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">layout</span><span class="typ-punct">(</span>size <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
          <span class="typ-key">let</span> half <span class="typ-op">=</span> <span class="typ-num">50%</span> <span class="typ-op">*</span> size<span class="typ-punct">.</span>width
          <span class="typ-punct">[</span>Half a page is <span class="typ-pol">#</span><span class="typ-pol">half</span> wide.<span class="typ-punct">]</span>
        <span class="typ-punct">}</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/19a1c5918ef068a85d6938ba5c41544b.png" alt="Preview" width="480" height="190"/></div></div>
        <p>Note that this function will provide an infinite width or height if one of
        the page width or height is <code>auto</code>, respectively.</p>
      example: null
      self: false
      params:
      - name: func
        details: |-
          <p>A function to call with the outer container's size. Its return value is
          displayed in the document.</p>
          <p>The container's size is given as a <a href="/docs/reference/foundations/dictionary/">dictionary</a> with the
          keys <code>width</code> and <code>height</code>.</p>
          <p>This function is called once for each time the content returned by
          <code>layout</code> appears in the document. That makes it possible to generate
          content that depends on the size of the container it is inside of.</p>
        example: null
        types:
        - function
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/length/
  title: Length
  description: Length 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: fields
    name: Fields
    children: []
  - id: definitions
    name: Definitions
    children:
    - id: definitions-pt
      name: Points
      children: []
    - id: definitions-mm
      name: Millimeters
      children: []
    - id: definitions-cm
      name: Centimeters
      children: []
    - id: definitions-inches
      name: Inches
      children: []
  body:
    kind: type
    content:
      name: length
      title: Length
      keywords: []
      oneliner: A size or distance, possibly expressed with contextual units.
      details: |-
        <p>A size or distance, possibly expressed with contextual units.</p>
        <p>Typst supports the following length units:</p>
        <ul>
        <li>Points: <code><span class="typ-num">72pt</span></code></li>
        <li>Millimeters: <code><span class="typ-num">254mm</span></code></li>
        <li>Centimeters: <code><span class="typ-num">2.54cm</span></code></li>
        <li>Inches: <code><span class="typ-num">1in</span></code></li>
        <li>Relative to font size: <code><span class="typ-num">2.5em</span></code></li>
        </ul>
        <p>You can multiply lengths with and divide them by integers and floats.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">2em</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1in</span><span class="typ-punct">)</span>

        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">3em</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">em</span> <span class="typ-escape">\</span>
        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">em</span> <span class="typ-escape">\</span>
        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">40em</span> <span class="typ-op">+</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">abs</span> <span class="typ-escape">\</span>
        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">5em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">abs</span>
        </code></pre><div class="preview"><img src="/assets/docs/1579e963a354a92f782e91d1b96d7b03.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="fields">Fields</h2>
        <ul>
        <li><code>abs</code>: A length with just the absolute component of the current length
        (that is, excluding the <code>em</code> component).</li>
        <li><code>em</code>: The amount of <code>em</code> units in this length, as a <a href="/docs/reference/foundations/float/">float</a>.</li>
        </ul>
      constructor: null
      scope:
      - path:
        - length
        name: pt
        title: Points
        keywords: []
        oneliner: Converts this length to points.
        element: false
        details: |-
          <p>Converts this length to points.</p>
          <p>Fails with an error if this length has non-zero <code>em</code> units (such as
          <code>5em + 2pt</code> instead of just <code>2pt</code>). Use the <code>abs</code> field (such as in
          <code>(5em + 2pt).abs.pt()</code>) to ignore the <code>em</code> component of the length (thus
          converting only its absolute component).</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
      - path:
        - length
        name: mm
        title: Millimeters
        keywords: []
        oneliner: Converts this length to millimeters.
        element: false
        details: |-
          <p>Converts this length to millimeters.</p>
          <p>Fails with an error if this length has non-zero <code>em</code> units. See the
          <a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
      - path:
        - length
        name: cm
        title: Centimeters
        keywords: []
        oneliner: Converts this length to centimeters.
        element: false
        details: |-
          <p>Converts this length to centimeters.</p>
          <p>Fails with an error if this length has non-zero <code>em</code> units. See the
          <a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
      - path:
        - length
        name: inches
        title: Inches
        keywords: []
        oneliner: Converts this length to inches.
        element: false
        details: |-
          <p>Converts this length to inches.</p>
          <p>Fails with an error if this length has non-zero <code>em</code> units. See the
          <a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>
        example: null
        self: true
        params: []
        returns:
        - float
        scope: []
  children: []
- route: /docs/reference/layout/measure/
  title: Measure
  description: '`measure` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-content
      name: content
      children: []
    - id: parameters-styles
      name: styles
      children: []
  body:
    kind: func
    content:
      path: []
      name: measure
      title: Measure
      keywords: []
      oneliner: Measures the layouted size of content.
      element: false
      details: |-
        <p>Measures the layouted size of content.</p>
        <p>The <code>measure</code> function lets you determine the layouted size of content. Note
        that an infinite space is assumed, therefore the measured height/width may
        not necessarily match the final height/width of the measured content. If you
        want to measure in the current layout dimensions, you can combine <code>measure</code>
        and <a href="/docs/reference/layout/layout/"><code>layout</code></a>.</p>
        <h2 id="example">Example</h2>
        <p>The same content can have a different size depending on the styles that
        are active when it is layouted. For example, in the example below
        <code><span class="typ-pol">#</span><span class="typ-pol">content</span></code> is of course bigger when we increase the font size.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> content <span class="typ-op">=</span> <span class="typ-punct">[</span>Hello!<span class="typ-punct">]</span>
        <span class="typ-pol">#</span><span class="typ-pol">content</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">content</span>
        </code></pre><div class="preview"><img src="/assets/docs/49695415724cfa126178f05a5eba18a5.png" alt="Preview" width="480" height="190"/></div></div>
        <p>To do a meaningful measurement, you therefore first need to retrieve the
        active styles with the <a href="/docs/reference/foundations/style/"><code>style</code></a> function. You can then pass them to
        the <code>measure</code> function.</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">thing</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">style</span><span class="typ-punct">(</span>styles <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
          <span class="typ-key">let</span> size <span class="typ-op">=</span> <span class="typ-func">measure</span><span class="typ-punct">(</span>body<span class="typ-punct">,</span> styles<span class="typ-punct">)</span>
          <span class="typ-punct">[</span>Width of &quot;<span class="typ-pol">#</span><span class="typ-pol">body</span>&quot; is <span class="typ-pol">#</span><span class="typ-pol">size</span><span class="typ-punct">.</span><span class="typ-pol">width</span><span class="typ-punct">]</span>
        <span class="typ-punct">}</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Hey<span class="typ-punct">]</span> <span class="typ-escape">\</span>
        <span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Welcome<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/83a224c4e09a77e16796d6bccb0b41fd.png" alt="Preview" width="480" height="190"/></div></div>
        <p>The measure function returns a dictionary with the entries <code>width</code> and
        <code>height</code>, both of type <a href="/docs/reference/layout/length/"><code>length</code></a>.</p>
      example: null
      self: false
      params:
      - name: content
        details: <p>The content whose size to measure.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: styles
        details: <p>The styles with which to layout the content.</p>
        example: null
        types:
        - styles
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - dictionary
      scope: []
  children: []
- route: /docs/reference/layout/move/
  title: Move
  description: '`move` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-dx
      name: dx
      children: []
    - id: parameters-dy
      name: dy
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: move
      title: Move
      keywords: []
      oneliner: Moves content without affecting layout.
      element: true
      details: |-
        <p>Moves content without affecting layout.</p>
        <p>The <code>move</code> function allows you to move content while the layout still 'sees'
        it at the original positions. Containers will still be sized as if the
        content was not moved.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-func">move</span><span class="typ-punct">(</span>
          dx<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span> dy<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">(</span>
            inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> white<span class="typ-punct">,</span>
            stroke<span class="typ-punct">:</span> black<span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Abra cadabra<span class="typ-punct">]</span>
          <span class="typ-punct">)</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/9a424d936cc839df540a82cfabf3ece6.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: dx
        details: <p>The horizontal displacement of the content.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: dy
        details: <p>The vertical displacement of the content.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to move.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/pad/
  title: Padding
  description: '`pad` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-left
      name: left
      children: []
    - id: parameters-top
      name: top
      children: []
    - id: parameters-right
      name: right
      children: []
    - id: parameters-bottom
      name: bottom
      children: []
    - id: parameters-x
      name: x
      children: []
    - id: parameters-y
      name: y
      children: []
    - id: parameters-rest
      name: rest
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: pad
      title: Padding
      keywords: []
      oneliner: Adds spacing around content.
      element: true
      details: |-
        <p>Adds spacing around content.</p>
        <p>The spacing can be specified for each side individually, or for all sides at
        once by specifying a positional argument.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">pad</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;typing.jpg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-emph">_Typing speeds can be
         measured in words per minute._</span>
        </code></pre><div class="preview"><img src="/assets/docs/10b94b3d9278971f6ea2f96b900cfdbe.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: left
        details: <p>The padding at the left side.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: top
        details: <p>The padding at the top side.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: right
        details: <p>The padding at the right side.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: bottom
        details: <p>The padding at the bottom side.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: x
        details: |-
          <p>The horizontal padding. Both <code>left</code> and <code>right</code> take precedence over
          this.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: y
        details: <p>The vertical padding. Both <code>top</code> and <code>bottom</code>
          take precedence over this.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: rest
        details: |-
          <p>The padding for all sides. All other parameters take precedence over
          this.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to pad at the sides.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/page/
  title: Page
  description: '`page` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-paper
      name: paper
      children: []
    - id: parameters-width
      name: width
      children: []
    - id: parameters-height
      name: height
      children: []
    - id: parameters-flipped
      name: flipped
      children: []
    - id: parameters-margin
      name: margin
      children: []
    - id: parameters-binding
      name: binding
      children: []
    - id: parameters-columns
      name: columns
      children: []
    - id: parameters-fill
      name: fill
      children: []
    - id: parameters-numbering
      name: numbering
      children: []
    - id: parameters-number-align
      name: number-align
      children: []
    - id: parameters-header
      name: header
      children: []
    - id: parameters-header-ascent
      name: header-ascent
      children: []
    - id: parameters-footer
      name: footer
      children: []
    - id: parameters-footer-descent
      name: footer-descent
      children: []
    - id: parameters-background
      name: background
      children: []
    - id: parameters-foreground
      name: foreground
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: page
      title: Page
      keywords: []
      oneliner: Layouts its child onto one or multiple pages.
      element: true
      details: |-
        <p>Layouts its child onto one or multiple pages.</p>
        <p>Although this function is primarily used in set rules to affect page
        properties, it can also be used to explicitly render its argument onto
        a set of pages of its own.</p>
        <p>Pages can be set to use <code><span class="typ-key">auto</span></code> as their width or height. In this case, the
        pages will grow to fit their content on the respective axis.</p>
        <p>The <a href="/docs/guides/page-setup-guide/">Guide for Page Setup</a> explains how to use
        this and related functions to set up a document with many examples.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-str">&quot;us-letter&quot;</span><span class="typ-punct">)</span>

        There you go, US friends!
        </code></pre><div class="preview"><img src="/assets/docs/09c2c49663961dceb000c8610a25c77f.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: paper
        details: <p>A standard paper size to set width and height.</p>
        example: null
        types:
        - str
        strings:
        - string: a0
          details: <p>Produces a paper of the respective size.</p>
        - string: a1
          details: <p>Produces a paper of the respective size.</p>
        - string: a2
          details: <p>Produces a paper of the respective size.</p>
        - string: a3
          details: <p>Produces a paper of the respective size.</p>
        - string: a4
          details: <p>Produces a paper of the respective size.</p>
        - string: a5
          details: <p>Produces a paper of the respective size.</p>
        - string: a6
          details: <p>Produces a paper of the respective size.</p>
        - string: a7
          details: <p>Produces a paper of the respective size.</p>
        - string: a8
          details: <p>Produces a paper of the respective size.</p>
        - string: a9
          details: <p>Produces a paper of the respective size.</p>
        - string: a10
          details: <p>Produces a paper of the respective size.</p>
        - string: a11
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b1
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b2
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b3
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b4
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b5
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b6
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b7
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-b8
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c3
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c4
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c5
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c6
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c7
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-c8
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d3
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d4
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d5
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d6
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d7
          details: <p>Produces a paper of the respective size.</p>
        - string: din-d8
          details: <p>Produces a paper of the respective size.</p>
        - string: sis-g5
          details: <p>Produces a paper of the respective size.</p>
        - string: sis-e5
          details: <p>Produces a paper of the respective size.</p>
        - string: ansi-a
          details: <p>Produces a paper of the respective size.</p>
        - string: ansi-b
          details: <p>Produces a paper of the respective size.</p>
        - string: ansi-c
          details: <p>Produces a paper of the respective size.</p>
        - string: ansi-d
          details: <p>Produces a paper of the respective size.</p>
        - string: ansi-e
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-a
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-b
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-c
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-d
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-e1
          details: <p>Produces a paper of the respective size.</p>
        - string: arch-e
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b0
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b1
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b2
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b3
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b4
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b5
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b6
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b7
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b8
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b9
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b10
          details: <p>Produces a paper of the respective size.</p>
        - string: jis-b11
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d0
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d1
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d2
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d3
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d4
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d5
          details: <p>Produces a paper of the respective size.</p>
        - string: sac-d6
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-id-1
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-id-2
          details: <p>Produces a paper of the respective size.</p>
        - string: iso-id-3
          details: <p>Produces a paper of the respective size.</p>
        - string: asia-f4
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-shiroku-ban-4
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-shiroku-ban-5
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-shiroku-ban-6
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-kiku-4
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-kiku-5
          details: <p>Produces a paper of the respective size.</p>
        - string: jp-business-card
          details: <p>Produces a paper of the respective size.</p>
        - string: cn-business-card
          details: <p>Produces a paper of the respective size.</p>
        - string: eu-business-card
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-tellière
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-couronne-écriture
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-couronne-édition
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-raisin
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-carré
          details: <p>Produces a paper of the respective size.</p>
        - string: fr-jésus
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-brief
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-draft
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-foolscap
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-quarto
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-crown
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-book-a
          details: <p>Produces a paper of the respective size.</p>
        - string: uk-book-b
          details: <p>Produces a paper of the respective size.</p>
        - string: us-letter
          details: <p>Produces a paper of the respective size.</p>
        - string: us-legal
          details: <p>Produces a paper of the respective size.</p>
        - string: us-tabloid
          details: <p>Produces a paper of the respective size.</p>
        - string: us-executive
          details: <p>Produces a paper of the respective size.</p>
        - string: us-foolscap-folio
          details: <p>Produces a paper of the respective size.</p>
        - string: us-statement
          details: <p>Produces a paper of the respective size.</p>
        - string: us-ledger
          details: <p>Produces a paper of the respective size.</p>
        - string: us-oficio
          details: <p>Produces a paper of the respective size.</p>
        - string: us-gov-letter
          details: <p>Produces a paper of the respective size.</p>
        - string: us-gov-legal
          details: <p>Produces a paper of the respective size.</p>
        - string: us-business-card
          details: <p>Produces a paper of the respective size.</p>
        - string: us-digest
          details: <p>Produces a paper of the respective size.</p>
        - string: us-trade
          details: <p>Produces a paper of the respective size.</p>
        - string: newspaper-compact
          details: <p>Produces a paper of the respective size.</p>
        - string: newspaper-berliner
          details: <p>Produces a paper of the respective size.</p>
        - string: newspaper-broadsheet
          details: <p>Produces a paper of the respective size.</p>
        - string: presentation-16-9
          details: <p>Produces a paper of the respective size.</p>
        - string: presentation-4-3
          details: <p>Produces a paper of the respective size.</p>
        default: <code><span class="typ-str">&quot;a4&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: width
        details: <p>The width of the page.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            width<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
            margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0cm</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
            <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-punct">}</span>
          </code></pre><div class="preview"><img src="/assets/docs/22bb230d32fa83097775d77908e9715d.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - length
        strings: []
        default: <code><span class="typ-num">595.28pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: height
        details: |-
          <p>The height of the page.</p>
          <p>If this is set to <code><span class="typ-key">auto</span></code>, page breaks can only be triggered manually
          by inserting a <a href="/docs/reference/layout/pagebreak/">page break</a>. Most examples throughout this
          documentation use <code><span class="typ-key">auto</span></code> for the height of the page to dynamically
          grow and shrink to fit their content.</p>
        example: null
        types:
        - auto
        - length
        strings: []
        default: <code><span class="typ-num">841.89pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: flipped
        details: <p>Whether the page is flipped into landscape orientation.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            <span class="typ-str">&quot;us-business-card&quot;</span><span class="typ-punct">,</span>
            flipped<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;f2e5dd&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>bottom <span class="typ-op">+</span> end<span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span><span class="typ-strong">*Sam H. Richards*</span><span class="typ-punct">]</span> <span class="typ-escape">\</span>
          <span class="typ-emph">_Procurement Manager_</span>

          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span>
          17 Main Street <span class="typ-escape">\</span>
          New York, NY 10001 <span class="typ-escape">\</span>
          +1 555 555 5555
          </code></pre><div class="preview"><img src="/assets/docs/f0239af3b697a5a137b135adbfbd2418.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: margin
        details: |-
          <p>The page's margins.</p>
          <ul>
          <li><code><span class="typ-key">auto</span></code>: The margins are set automatically to 2.5/21 times the smaller
          dimension of the page. This results in 2.5cm margins for an A4 page.</li>
          <li>A single length: The same margin on all sides.</li>
          <li>A dictionary: With a dictionary, the margins can be set individually.
          The dictionary can contain the following keys in order of precedence:
          <ul>
          <li><code>top</code>: The top margin.</li>
          <li><code>right</code>: The right margin.</li>
          <li><code>bottom</code>: The bottom margin.</li>
          <li><code>left</code>: The left margin.</li>
          <li><code>inside</code>: The margin at the inner side of the page (where the
          <a href="/docs/reference/layout/page/#parameters-binding">binding</a> is).</li>
          <li><code>outside</code>: The margin at the outer side of the page (opposite to the
          <a href="/docs/reference/layout/page/#parameters-binding">binding</a>).</li>
          <li><code>x</code>: The horizontal margins.</li>
          <li><code>y</code>: The vertical margins.</li>
          <li><code>rest</code>: The margins on all sides except those for which the
          dictionary explicitly sets a size.</li>
          </ul>
          </li>
          </ul>
          <p>The values for <code>left</code> and <code>right</code> are mutually exclusive with
          the values for <code>inside</code> and <code>outside</code>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
           width<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
           height<span class="typ-punct">:</span> <span class="typ-num">4cm</span><span class="typ-punct">,</span>
           margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
            width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
            height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> aqua<span class="typ-punct">,</span>
          <span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/4f6abc5d57c0fc985815649e372759cb.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - auto
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">:</span><span
          class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: binding
        details: |-
          <p>On which side the pages will be bound.</p>
          <ul>
          <li><code><span class="typ-key">auto</span></code>: Equivalent to <code>left</code> if the <a href="/docs/reference/text/text/#parameters-dir">text direction</a>
          is left-to-right and <code>right</code> if it is right-to-left.</li>
          <li><code>left</code>: Bound on the left side.</li>
          <li><code>right</code>: Bound on the right side.</li>
          </ul>
          <p>This affects the meaning of the <code>inside</code> and <code>outside</code> options for
          margins.</p>
        example: null
        types:
        - auto
        - alignment
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: columns
        details: |-
          <p>How many columns the page has.</p>
          <p>If you need to insert columns into a page or other container, you can
          also use the <a href="/docs/reference/layout/columns/"><code>columns</code> function</a>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">4.8cm</span><span class="typ-punct">)</span>
          Climate change is one of the most
          pressing issues of our time, with
          the potential to devastate
          communities, ecosystems, and
          economies around the world. It&#39;s
          clear that we need to take urgent
          action to reduce our carbon
          emissions and mitigate the impacts
          of a rapidly changing climate.
          </code></pre><div class="preview"><img src="/assets/docs/9ebd23a1355f9eb0ca3c15a68553a4d8.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - int
        strings: []
        default: <code><span class="typ-num">1</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: |-
          <p>The page's background color.</p>
          <p>This instructs the printer to color the complete page with the given
          color. If you are considering larger production runs, it may be more
          environmentally friendly and cost-effective to source pre-dyed pages and
          not set this property.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;444352&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;fdfdfd&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-strong">*Dark mode enabled.*</span>
          </code></pre><div class="preview"><img src="/assets/docs/cdc0af4680a52793d4d06ab2f01d6c91.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - color
        - gradient
        - pattern
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: numbering
        details: |-
          <p>How to <a href="/docs/reference/model/numbering/">number</a> the pages.</p>
          <p>If an explicit <code>footer</code> (or <code>header</code> for top-aligned numbering) is
          given, the numbering is ignored.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span>
            margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1 / 1&quot;</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">48</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/d52c3289f2ed48e39fde3976751f2e20.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - str
        - function
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: number-align
        details: |-
          <p>The alignment of the page numbering.</p>
          <p>If the vertical component is <code>top</code>, the numbering is placed into the
          header and if it is <code>bottom</code>, it is placed in the footer. Horizon
          alignment is forbidden. If an explicit matching <code>header</code> or <code>footer</code> is
          given, the numbering is ignored.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
            number-align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/2b19a4b829186dbdd86d2a2536a69835.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - alignment
        strings: []
        default: <code>center <span class="typ-op">+</span> bottom</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: header
        details: <p>The page's header. Fills the top margin of each page.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">32pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            header<span class="typ-punct">:</span> <span class="typ-punct">[</span>
              <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
              <span class="typ-func">#</span><span class="typ-func">smallcaps</span><span class="typ-punct">[</span>Typst Academcy<span class="typ-punct">]</span>
              <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> <span class="typ-emph">_Exercise Sheet 3_</span>
            <span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">19</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/97f68c9badee84276bb627e66716d146.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: header-ascent
        details: <p>The amount the header is raised into the top margin.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">30%</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: footer
        details: |-
          <p>The page's footer. Fills the bottom margin of each page.</p>
          <p>For just a page number, the <code>numbering</code> property, typically suffices. If
          you want to create a custom footer, but still display the page number,
          you can directly access the <a href="/docs/reference/introspection/counter/">page counter</a>.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
            height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span>
            margin<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
            footer<span class="typ-punct">:</span> <span class="typ-punct">[</span>
              <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span>
              <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
              <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
                <span class="typ-str">&quot;1 of I&quot;</span><span class="typ-punct">,</span>
                both<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
              <span class="typ-punct">)</span>
            <span class="typ-punct">]</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">48</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/2411ffe7e3e75df3aba4830eb664477d.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: footer-descent
        details: <p>The amount the footer is lowered into the bottom margin.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">30%</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: background
        details: |-
          <p>Content in the page's background.</p>
          <p>This content will be placed behind the page's body. It can be
          used to place a background image or a watermark.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">24deg</span><span class="typ-punct">,</span>
            <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">,</span> fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;FFCBC4&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
              <span class="typ-strong">*CONFIDENTIAL*</span>
            <span class="typ-punct">]</span>
          <span class="typ-punct">)</span><span class="typ-punct">)</span>

          <span class="typ-heading">= Typst&#39;s secret plans</span>
          In the year 2023, we plan to take
          over the world (of typesetting).
          </code></pre><div class="preview"><img src="/assets/docs/d0803f2bb04435d156a688b513940dcd.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: foreground
        details: |-
          <p>Content in the page's foreground.</p>
          <p>This content will overlay the page's body.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>foreground<span class="typ-punct">:</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>🥸<span class="typ-punct">]</span><span class="typ-punct">)</span>

          Reviewer 2 has marked our paper
          &quot;Weak Reject&quot; because they did
          not understand our approach<span class="typ-escape">...</span>
          </code></pre><div class="preview"><img src="/assets/docs/7050ac337a978d9b9a351bc56ee31e4b.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - content
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: |-
          <p>The contents of the page(s).</p>
          <p>Multiple pages will be created if the content does not fit on a single
          page. A new page with the page properties prior to the function invocation
          will be created after the body has been typeset.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/pagebreak/
  title: Page Break
  description: '`pagebreak` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-weak
      name: weak
      children: []
    - id: parameters-to
      name: to
      children: []
  body:
    kind: func
    content:
      path: []
      name: pagebreak
      title: Page Break
      keywords: []
      oneliner: A manual page break.
      element: true
      details: |-
        <p>A manual page break.</p>
        <p>Must not be used inside any containers.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>The next page contains
        more details on compound theory.
        <span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

        <span class="typ-heading">== Compound Theory</span>
        In 1984, the first <span class="typ-escape">...</span>
        </code></pre><div class="preview"><img src="/assets/docs/4422a9f36b6866b2942bc7db0a4cc7c9.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: weak
        details: |-
          <p>If <code><span class="typ-key">true</span></code>, the page break is skipped if the current page is already
          empty.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: to
        details: |-
          <p>If given, ensures that the next page will be an even/odd page, with an
          empty page in between if necessary.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span>

          First.
          <span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span>to<span class="typ-punct">:</span> <span class="typ-str">&quot;odd&quot;</span><span class="typ-punct">)</span>
          Third.
          </code></pre><div class="preview"><img src="/assets/docs/6b0353eb5b92306c89a0f4524e3ad5b5.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - none
        - str
        strings:
        - string: even
          details: <p>Next page will be an even page.</p>
        - string: odd
          details: <p>Next page will be an odd page.</p>
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/place/
  title: Place
  description: '`place` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-alignment
      name: alignment
      children: []
    - id: parameters-float
      name: float
      children: []
    - id: parameters-clearance
      name: clearance
      children: []
    - id: parameters-dx
      name: dx
      children: []
    - id: parameters-dy
      name: dy
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: place
      title: Place
      keywords: []
      oneliner: Places content at an absolute position.
      element: true
      details: |-
        <p>Places content at an absolute position.</p>
        <p>Placed content will not affect the position of other content. Place is
        always relative to its parent container and will be in the foreground of all
        other content in the container. Page margins will be respected.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">60pt</span><span class="typ-punct">)</span>
        Hello, world!

        <span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span>
          top <span class="typ-op">+</span> right<span class="typ-punct">,</span>
          <span class="typ-func">square</span><span class="typ-punct">(</span>
            width<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
            stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> blue
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/2f21fdc6427bee49b180be0a51e8155d.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: alignment
        details: |-
          <p>Relative to which position in the parent container to place the content.</p>
          <p>Cannot be <code><span class="typ-key">auto</span></code> if <code>float</code> is <code><span class="typ-key">false</span></code> and must be either
          <code><span class="typ-key">auto</span></code>, <code>top</code>, or <code>bottom</code> if <code>float</code> is <code><span class="typ-key">true</span></code>.</p>
          <p>When an axis of the page is <code><span class="typ-key">auto</span></code> sized, all alignments relative to
          that axis will be ignored, instead, the item will be placed in the
          origin of the axis.</p>
        example: null
        types:
        - auto
        - alignment
        strings: []
        default: <code>start</code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: float
        details: |-
          <p>Whether the placed element has floating layout.</p>
          <p>Floating elements are positioned at the top or bottom of the page,
          displacing in-flow content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">150pt</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">note</span><span class="typ-punct">(</span>where<span class="typ-punct">,</span> body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">place</span><span class="typ-punct">(</span>
            center <span class="typ-op">+</span> where<span class="typ-punct">,</span>
            float<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
            clearance<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span>
            <span class="typ-func">rect</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Bottom 1<span class="typ-punct">]</span>
          <span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Bottom 2<span class="typ-punct">]</span>
          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">40</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>top<span class="typ-punct">)</span><span class="typ-punct">[</span>Top<span class="typ-punct">]</span>
          <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/c4e08cb53fd10eaae5be10918e6c22d6.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: clearance
        details: <p>The amount of clearance the placed element has in a floating layout.</p>
        example: null
        types:
        - length
        strings: []
        default: <code><span class="typ-num">1.5em</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: dx
        details: <p>The horizontal displacement of the placed content.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">16</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
            <span class="typ-key">let</span> amount <span class="typ-op">=</span> i <span class="typ-op">*</span> <span class="typ-num">4pt</span>
            <span class="typ-func">place</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span> dx<span class="typ-punct">:</span> amount <span class="typ-op">-</span> <span class="typ-num">32pt</span><span class="typ-punct">,</span> dy<span class="typ-punct">:</span> amount<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span>
          <span class="typ-punct">}</span>
          </code></pre><div class="preview"><img src="/assets/docs/2894bae3ce0defe070261a5d5f61fe40.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: dy
        details: <p>The vertical displacement of the placed content.</p>
        example: null
        types:
        - relative
        strings: []
        default: <code><span class="typ-num">0pt</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to place.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/ratio/
  title: Ratio
  description: Ratio 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  body:
    kind: type
    content:
      name: ratio
      title: Ratio
      keywords: []
      oneliner: A ratio of a whole.
      details: |-
        <p>A ratio of a whole.</p>
        <p>Written as a number, followed by a percent sign.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">150%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
          Scaled apart.
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/7277401de2c49f86f69d62f862d9732b.png" alt="Preview" width="480" height="190"/></div></div>
      constructor: null
      scope: []
  children: []
- route: /docs/reference/layout/relative/
  title: Relative Length
  description: Relative Length 类型的文档
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  body:
    kind: type
    content:
      name: relative
      title: Relative Length
      keywords: []
      oneliner: A length in relation to some known length.
      details: |-
        <p>A length in relation to some known length.</p>
        <p>This type is a combination of a <a href="/docs/reference/layout/length/">length</a> with a <a href="/docs/reference/layout/ratio/">ratio</a>. It
        results from addition and subtraction of a length and a ratio. Wherever a
        relative length is expected, you can also use a bare length or ratio.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span>

        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">length</span> <span class="typ-escape">\</span>
        <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">ratio</span>
        </code></pre><div class="preview"><img src="/assets/docs/65bb9671766803a80f8cdfdeb54d5a21.png" alt="Preview" width="480" height="190"/></div></div>
        <p>A relative length has the following fields:</p>
        <ul>
        <li><code>length</code>: Its length component.</li>
        <li><code>ratio</code>: Its ratio component.</li>
        </ul>
      constructor: null
      scope: []
  children: []
- route: /docs/reference/layout/repeat/
  title: Repeat
  description: '`repeat` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: repeat
      title: Repeat
      keywords: []
      oneliner: Repeats content to the available space.
      element: true
      details: |-
        <p>Repeats content to the available space.</p>
        <p>This can be useful when implementing a custom index, reference, or outline.</p>
        <p>Space may be inserted between the instances of the body parameter, so be
        sure to include negative space if you need the instances to overlap.</p>
        <p>Errors if there no bounds on the available space, as it would create
        infinite content.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>Sign on the dotted line:
        <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>.<span class="typ-punct">]</span><span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span><span class="typ-punct">[</span>
          Berlin, the 22nd of December, 2022
        <span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/5766ecf903828db4c808c3707135b539.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: body
        details: <p>The content to repeat.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/rotate/
  title: Rotate
  description: '`rotate` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-angle
      name: angle
      children: []
    - id: parameters-origin
      name: origin
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: rotate
      title: Rotate
      keywords: []
      oneliner: Rotates content without affecting layout.
      element: true
      details: |-
        <p>Rotates content without affecting layout.</p>
        <p>Rotates an element by a given angle. The layout will act as if the element
        was not rotated.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
          dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
          spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
          <span class="typ-op">..</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">16</span><span class="typ-punct">)</span>
            <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>i <span class="typ-op">=&gt;</span> <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">24deg</span> <span class="typ-op">*</span> i<span class="typ-punct">)</span><span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5c869ce92eb45510b0a7c38f00e36c68.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: angle
        details: <p>The amount of rotation.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1.571rad</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Space!<span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/f25780852d829ff790154d6f446c25f4.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - angle
        strings: []
        default: <code><span class="typ-num">0deg</span></code>
        positional: true
        named: false
        required: false
        variadic: false
        settable: true
      - name: origin
        details: |-
          <p>The origin of the rotation.</p>
          <p>If, for instance, you wanted the bottom left corner of the rotated
          element to stay aligned with the baseline, you would set it to <code>bottom + left</code> instead.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">)</span>
          <span class="typ-key">#</span><span class="typ-key">let</span> square <span class="typ-op">=</span> square<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">)</span>

          <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> center<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> top <span class="typ-op">+</span> left<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> bottom <span class="typ-op">+</span> right<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
          </code></pre><div class="preview"><img src="/assets/docs/299a16d14ec1adb51bcd6d173a93ecac.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - alignment
        strings: []
        default: <code>center <span class="typ-op">+</span> horizon</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to rotate.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/scale/
  title: Scale
  description: '`scale` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-x
      name: x
      children: []
    - id: parameters-y
      name: y
      children: []
    - id: parameters-origin
      name: origin
      children: []
    - id: parameters-body
      name: body
      children: []
  body:
    kind: func
    content:
      path: []
      name: scale
      title: Scale
      keywords: []
      oneliner: Scales content without affecting layout.
      element: true
      details: |-
        <p>Scales content without affecting layout.</p>
        <p>Lets you mirror content by specifying a negative scale on a single axis.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is mirrored.<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/4c21783e7c03adcefd350157917031c4.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: x
        details: |-
          <p>The horizontal scaling factor.</p>
          <p>The body will be mirrored horizontally if the parameter is negative.</p>
        example: null
        types:
        - ratio
        strings: []
        default: <code><span class="typ-num">100%</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: y
        details: |-
          <p>The vertical scaling factor.</p>
          <p>The body will be mirrored vertically if the parameter is negative.</p>
        example: null
        types:
        - ratio
        strings: []
        default: <code><span class="typ-num">100%</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: origin
        details: <p>The origin of the transformation.</p>
        example: |-
          <div class="previewed-code"><pre><code>A<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">scale</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">)</span>A <span class="typ-escape">\</span>
          B<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">scale</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> bottom <span class="typ-op">+</span> left<span class="typ-punct">)</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">)</span>B
          </code></pre><div class="preview"><img src="/assets/docs/338df2c512b59a421f1c16954623e505.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - alignment
        strings: []
        default: <code>center <span class="typ-op">+</span> horizon</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: body
        details: <p>The content to scale.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/h/
  title: Spacing (H)
  description: '`h` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: math-spacing
    name: Math Spacing
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-amount
      name: amount
      children: []
    - id: parameters-weak
      name: weak
      children: []
  body:
    kind: func
    content:
      path: []
      name: h
      title: Spacing (H)
      keywords: []
      oneliner: Inserts horizontal spacing into a paragraph.
      element: true
      details: |-
        <p>Inserts horizontal spacing into a paragraph.</p>
        <p>The spacing can be absolute, relative, or fractional. In the last case, the
        remaining space on the line is distributed among all fractional spacings
        according to their relative fractions.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code>First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1cm</span><span class="typ-punct">)</span> Second <span class="typ-escape">\</span>
        First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">30%</span><span class="typ-punct">)</span> Second <span class="typ-escape">\</span>
        First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2fr</span><span class="typ-punct">)</span> Second <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Third
        </code></pre><div class="preview"><img src="/assets/docs/75141e42b71ab9e6bb69e34b0ae0d2e5.png" alt="Preview" width="480" height="190"/></div></div>
        <h2 id="math-spacing">Mathematical Spacing</h2>
        <p>In <a href="/docs/reference/math/">mathematical formulas</a>, you can additionally use these
        constants to add spacing between elements: <code>thin</code>, <code>med</code>, <code>thick</code>, <code>quad</code>, <code>wide</code>.</p>
      example: null
      self: false
      params:
      - name: amount
        details: <p>How much spacing to insert.</p>
        example: null
        types:
        - relative
        - fraction
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: weak
        details: |-
          <p>If <code><span class="typ-key">true</span></code>, the spacing collapses at the start or end of a paragraph.
          Moreover, from multiple adjacent weak spacings all but the largest one
          collapse.</p>
          <p>Weak spacing in markup also causes all adjacent markup spaces to be
          removed, regardless of the amount of spacing inserted. To force a space
          next to weak spacing, you can explicitly write <code><span class="typ-str">#</span><span class="typ-str">&quot; &quot;</span></code> (for a normal
          space) or <code><span class="typ-escape">~</span></code> (for a non-breaking space). The latter can be useful to
          create a construct that always attaches to the preceding word with one
          non-breaking space, independently of whether a markup space existed in
          front or not.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1cm</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          We identified a group of <span class="typ-emph">_weak_</span>
          specimens that fail to manifest
          in most cases. However, when
          <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> supported
          <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> on both sides,
          they do show up.

          Further <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> more,
          even the smallest of them swallow
          adjacent markup spaces.
          </code></pre><div class="preview"><img src="/assets/docs/5ece273f8956c8dc3d0b5e0a6d07a1cf.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/v/
  title: Spacing (V)
  description: '`v` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-amount
      name: amount
      children: []
    - id: parameters-weak
      name: weak
      children: []
  body:
    kind: func
    content:
      path: []
      name: v
      title: Spacing (V)
      keywords: []
      oneliner: Inserts vertical spacing into a flow of blocks.
      element: true
      details: |-
        <p>Inserts vertical spacing into a flow of blocks.</p>
        <p>The spacing can be absolute, relative, or fractional. In the last case,
        the remaining space on the page is distributed among all fractional spacings
        according to their relative fractions.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
          rows<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">,</span>
          gutter<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">parbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/54f491bff0163b01b2ca32260aa60a69.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: amount
        details: <p>How much spacing to insert.</p>
        example: null
        types:
        - relative
        - fraction
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: weak
        details: |-
          <p>If <code><span class="typ-key">true</span></code>, the spacing collapses at the start or end of a flow.
          Moreover, from multiple adjacent weak spacings all but the largest one
          collapse. Weak spacings will always collapse adjacent paragraph spacing,
          even if the paragraph spacing is larger.</p>
        example: |-
          <div class="previewed-code"><pre><code>The following theorem is
          foundational to the field:
          <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">4pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          <span class="typ-math-delim">$</span> x<span class="typ-math-op">^</span>2 + y<span class="typ-math-op">^</span>2 = r<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
          <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">4pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
          The proof is simple:
          </code></pre><div class="preview"><img src="/assets/docs/6443608fd451b4eba980046999501e2b.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
  children: []
- route: /docs/reference/layout/stack/
  title: Stack
  description: '`stack` 函数的文档'
  part: null
  outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: parameters
    name: Parameters
    children:
    - id: parameters-dir
      name: dir
      children: []
    - id: parameters-spacing
      name: spacing
      children: []
    - id: parameters-children
      name: children
      children: []
  body:
    kind: func
    content:
      path: []
      name: stack
      title: Stack
      keywords: []
      oneliner: Arranges content and spacing horizontally or vertically.
      element: true
      details: |-
        <p>Arranges content and spacing horizontally or vertically.</p>
        <p>The stack places a list of items along an axis, with optional spacing
        between each item.</p>
        <h2 id="example">Example</h2>
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
          dir<span class="typ-punct">:</span> ttb<span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">40pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">90pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/d8a656872c969b7afbea467bfed09d42.png" alt="Preview" width="480" height="190"/></div></div>
      example: null
      self: false
      params:
      - name: dir
        details: |-
          <p>The direction along which the items are stacked. Possible values are:</p>
          <ul>
          <li><code>ltr</code>: Left to right.</li>
          <li><code>rtl</code>: Right to left.</li>
          <li><code>ttb</code>: Top to bottom.</li>
          <li><code>btt</code>: Bottom to top.</li>
          </ul>
          <p>You can use the <code>start</code> and <code>end</code> methods to obtain the initial and
          final points (respectively) of a direction, as <code>alignment</code>. You can also
          use the <code>axis</code> method to determine whether a direction is
          <code><span class="typ-str">&quot;horizontal&quot;</span></code> or <code><span class="typ-str">&quot;vertical&quot;</span></code>. The <code>inv</code> method returns a
          direction's inverse direction.</p>
          <p>For example, <code>ttb<span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code>top</code>, <code>ttb<span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code>bottom</code>,
          <code>ttb<span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code><span class="typ-str">&quot;vertical&quot;</span></code> and <code>ttb<span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is equal to <code>btt</code>.</p>
        example: null
        types:
        - direction
        strings: []
        default: <code>ttb</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: spacing
        details: <p>Spacing to insert between items where no explicit spacing was
          provided.</p>
        example: null
        types:
        - none
        - relative
        - fraction
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: <p>The children to stack along the axis.</p>
        example: null
        types:
        - relative
        - fraction
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope: []
  children: []
