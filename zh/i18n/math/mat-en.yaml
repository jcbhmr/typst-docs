route: /docs/reference/math/mat/
title: Matrix
description: '`mat` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-delim
    name: delim
    children: []
  - id: parameters-augment
    name: augment
    children: []
  - id: parameters-gap
    name: gap
    children: []
  - id: parameters-row-gap
    name: row-gap
    children: []
  - id: parameters-column-gap
    name: column-gap
    children: []
  - id: parameters-rows
    name: rows
    children: []
body:
  kind: func
  content:
    path:
    - math
    name: mat
    title: Matrix
    keywords: []
    oneliner: A matrix.
    element: true
    details: |-
      <p>A matrix.</p>
      <p>The elements of a row should be separated by commas, while the rows
      themselves should be separated by semicolons. The semicolon syntax merges
      preceding arguments separated by commas into an array. You can also use this
      special syntax of math function calls to define custom functions that take
      2D data.</p>
      <p>Content in cells that are in the same row can be aligned with the <code>&amp;</code> symbol.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>
        1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
        2<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
        <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">down</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">;</span>
        10<span class="typ-punct">,</span> 10<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
      <span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
      </code></pre><div class="preview"><img src="/assets/docs/92c9b3b027c9bc5f7095d691e1690745.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: delim
      details: <p>The delimiter to use.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/3d80c9fc58c9cf9bc7ac411738bcfed4.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - str
      strings:
      - string: (
        details: <p>Delimit with parentheses.</p>
      - string: '['
        details: <p>Delimit with brackets.</p>
      - string: '{'
        details: <p>Delimit with curly braces.</p>
      - string: '|'
        details: <p>Delimit with vertical bars.</p>
      - string: '||'
        details: <p>Delimit with double vertical bars.</p>
      default: <code><span class="typ-str">&quot;(&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: augment
      details: |-
        <p>Draws augmentation lines in a matrix.</p>
        <ul>
        <li><code><span class="typ-key">none</span></code>: No lines are drawn.</li>
        <li>A single number: A vertical augmentation line is drawn
        after the specified column number. Negative numbers start from the end.</li>
        <li>A dictionary: With a dictionary, multiple augmentation lines can be
        drawn both horizontally and vertically. Additionally, the style of the
        lines can be set. The dictionary can contain the following keys:
        <ul>
        <li><code>hline</code>: The offsets at which horizontal lines should be drawn.
        For example, an offset of <code>2</code> would result in a horizontal line
        being drawn after the second row of the matrix. Accepts either an
        integer for a single line, or an array of integers
        for multiple lines. Like for a single number, negative numbers start from the end.</li>
        <li><code>vline</code>: The offsets at which vertical lines should be drawn.
        For example, an offset of <code>2</code> would result in a vertical line being
        drawn after the second column of the matrix. Accepts either an
        integer for a single line, or an array of integers
        for multiple lines. Like for a single number, negative numbers start from the end.</li>
        <li><code>stroke</code>: How to <a href="/docs/reference/visualize/stroke/">stroke</a> the line. If set to <code><span class="typ-key">auto</span></code>,
        takes on a thickness of 0.05em and square line caps.</li>
        </ul>
        </li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        <span class="typ-comment">// Equivalent to:</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/470e82a617fed734f7cc0797b28fda11.png" alt="Preview" width="480" height="190"/></div></div><div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>0<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 0<span class="typ-punct">;</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span>hline<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> green<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/03c849bc1ba1ed6566954d6b6ff6588b.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - int
      - dictionary
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: gap
      details: <p>The gap between rows and columns.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/ba336a8b0fe494fd92fc01118490becf.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      strings: []
      default: <code><span class="typ-num">0pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: row-gap
      details: <p>The gap between rows. Takes precedence over <code>gap</code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>row-gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/64e72078e39b3972caf51b5aa1f57437.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      strings: []
      default: <code><span class="typ-num">0.5em</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: column-gap
      details: <p>The gap between columns. Takes precedence over <code>gap</code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>column-gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/f6a6a0a25cd3ad794ce1f80c313d0336.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      strings: []
      default: <code><span class="typ-num">0.5em</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: rows
      details: <p>An array of arrays with the rows of the matrix.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> data <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">let</span> matrix <span class="typ-op">=</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span><span class="typ-op">..</span>data<span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> v <span class="typ-escape">:=</span> <span class="typ-pol">matrix</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/5005534335c6665583752d586ce09c37.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - array
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    scope: []
children: []
