route: /docs/reference/data-loading/yaml/
title: YAML
description: '`yaml` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode YAML
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode YAML
    children:
    - id: definitions-encode-value
      name: value
      children: []
body:
  kind: func
  content:
    path: []
    name: yaml
    title: YAML
    keywords: []
    oneliner: Reads structured data from a YAML file.
    element: false
    details: |-
      <p>从 YAML 文件读取结构和化数据</p>
      <p>文件必须包含有效的 YAML 对象或数组。
      YAML 映射将被转换为 Typst 字典，YAML 序列将被转换为 Typst 数组。
      字符串和布尔值将被转换为相应的 Typst 类型值。
      null 值（<code>null</code>、<code>~</code> 或空字符串 ''）将转换为
      <code><span class=“typ-key”>none</span></code>。
      数字将根据是否为整数转化为浮点值或整数值。
      自定义 YAML 标签将被忽略，但加载的值仍将存在。</p>
      <p>示例中的 YAML 文件为一个以 author 为键，子键为 “title” 和 “published” 的对象。</p>
      <h2 id="example">举例</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">bookshelf</span><span class="typ-punct">(</span>contents<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
        <span class="typ-key">for</span> <span class="typ-punct">(</span>author<span class="typ-punct">,</span> works<span class="typ-punct">)</span> <span class="typ-key">in</span> contents <span class="typ-punct">{</span>
          author
          <span class="typ-key">for</span> work <span class="typ-key">in</span> works <span class="typ-punct">[</span>
            <span class="typ-marker">-</span> <span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">title</span> (<span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">published</span>)
          <span class="typ-punct">]</span>
        <span class="typ-punct">}</span>
      <span class="typ-punct">}</span>

      <span class="typ-func">#</span><span class="typ-func">bookshelf</span><span class="typ-punct">(</span>
        <span class="typ-func">yaml</span><span class="typ-punct">(</span><span class="typ-str">&quot;scifi-authors.yaml&quot;</span><span class="typ-punct">)</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/58f52380c98c1a4c54779d0799f7ed03.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>YAML 文件路径。</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - yaml
      name: decode
      title: Decode YAML
      keywords: []
      oneliner: Reads structured data from a YAML string/bytes.
      element: false
      details: <p>从 YAML 字符串/字节流读取结构化数据。</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>YAML 数据。</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - yaml
      name: encode
      title: Encode YAML
      keywords: []
      oneliner: Encode structured data into a YAML string.
      element: false
      details: <p>将结构化数据编码为一个 YAML 字符串</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>被编码的值。</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
