route: /docs/reference/data-loading/csv/
title: CSV
description: '`csv` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
  - id: parameters-delimiter
    name: delimiter
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode CSV
    children:
    - id: definitions-decode-data
      name: data
      children: []
    - id: definitions-decode-delimiter
      name: delimiter
      children: []
body:
  kind: func
  content:
    path: []
    name: csv
    title: CSV
    keywords: []
    oneliner: Reads structured data from a CSV file.
    element: false
    details: |-
      <p>Reads structured data from a CSV file.</p>
      <p>The CSV file will be read and parsed into a 2-dimensional array of strings:
      Each row in the CSV file will be represented as an array of strings, and all
      rows will be collected into a single array. Header rows will not be
      stripped.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> results <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;data.csv&quot;</span><span class="typ-punct">)</span>

      <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
        columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span><span class="typ-strong">*Condition*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Result*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-op">..</span>results<span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/08241206dc3f3c0296d2db8f2ee545f4.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>Path to a CSV file.</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    - name: delimiter
      details: |-
        <p>The delimiter that separates columns in the CSV file.
        Must be a single ASCII character.</p>
      example: null
      types:
      - str
      strings: []
      default: <code><span class="typ-str">&quot;,&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: false
    returns:
    - array
    scope:
    - path:
      - csv
      name: decode
      title: Decode CSV
      keywords: []
      oneliner: Reads structured data from a CSV string/bytes.
      element: false
      details: <p>Reads structured data from a CSV string/bytes.</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>CSV data.</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: delimiter
        details: |-
          <p>The delimiter that separates columns in the CSV file.
          Must be a single ASCII character.</p>
        example: null
        types:
        - str
        strings: []
        default: <code><span class="typ-str">&quot;,&quot;</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - array
      scope: []
children: []
