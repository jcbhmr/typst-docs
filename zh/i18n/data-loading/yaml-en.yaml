route: /docs/reference/data-loading/yaml/
title: YAML
description: '`yaml` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode YAML
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode YAML
    children:
    - id: definitions-encode-value
      name: value
      children: []
body:
  kind: func
  content:
    path: []
    name: yaml
    title: YAML
    keywords: []
    oneliner: Reads structured data from a YAML file.
    element: false
    details: |-
      <p>Reads structured data from a YAML file.</p>
      <p>The file must contain a valid YAML object or array. YAML mappings will be
      converted into Typst dictionaries, and YAML sequences will be converted into
      Typst arrays. Strings and booleans will be converted into the Typst
      equivalents, null-values (<code>null</code>, <code>~</code> or empty ``) will be converted into
      <code><span class="typ-key">none</span></code>, and numbers will be converted to floats or integers depending on
      whether they are whole numbers. Custom YAML tags are ignored, though the
      loaded value will still be present.</p>
      <p>The YAML files in the example contain objects with authors as keys,
      each with a sequence of their own submapping with the keys
      &quot;title&quot; and &quot;published&quot;</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">bookshelf</span><span class="typ-punct">(</span>contents<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
        <span class="typ-key">for</span> <span class="typ-punct">(</span>author<span class="typ-punct">,</span> works<span class="typ-punct">)</span> <span class="typ-key">in</span> contents <span class="typ-punct">{</span>
          author
          <span class="typ-key">for</span> work <span class="typ-key">in</span> works <span class="typ-punct">[</span>
            <span class="typ-marker">-</span> <span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">title</span> (<span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">published</span>)
          <span class="typ-punct">]</span>
        <span class="typ-punct">}</span>
      <span class="typ-punct">}</span>

      <span class="typ-func">#</span><span class="typ-func">bookshelf</span><span class="typ-punct">(</span>
        <span class="typ-func">yaml</span><span class="typ-punct">(</span><span class="typ-str">&quot;scifi-authors.yaml&quot;</span><span class="typ-punct">)</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/58f52380c98c1a4c54779d0799f7ed03.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>Path to a YAML file.</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - yaml
      name: decode
      title: Decode YAML
      keywords: []
      oneliner: Reads structured data from a YAML string/bytes.
      element: false
      details: <p>Reads structured data from a YAML string/bytes.</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>YAML data.</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - yaml
      name: encode
      title: Encode YAML
      keywords: []
      oneliner: Encode structured data into a YAML string.
      element: false
      details: <p>Encode structured data into a YAML string.</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>Value to be encoded.</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
