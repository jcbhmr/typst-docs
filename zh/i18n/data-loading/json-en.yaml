route: /docs/reference/data-loading/json/
title: JSON
description: '`json` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode JSON
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode JSON
    children:
    - id: definitions-encode-value
      name: value
      children: []
    - id: definitions-encode-pretty
      name: pretty
      children: []
body:
  kind: func
  content:
    path: []
    name: json
    title: JSON
    keywords: []
    oneliner: Reads structured data from a JSON file.
    element: false
    details: |-
      <p>Reads structured data from a JSON file.</p>
      <p>The file must contain a valid JSON object or array. JSON objects will be
      converted into Typst dictionaries, and JSON arrays will be converted into
      Typst arrays. Strings and booleans will be converted into the Typst
      equivalents, <code>null</code> will be converted into <code><span class="typ-key">none</span></code>, and numbers will be
      converted to floats or integers depending on whether they are whole numbers.</p>
      <p>The function returns a dictionary or an array, depending on the JSON file.</p>
      <p>The JSON files in the example contain objects with the keys <code>temperature</code>,
      <code>unit</code>, and <code>weather</code>.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">forecast</span><span class="typ-punct">(</span>day<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">block</span><span class="typ-punct">[</span>
        <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
          fill<span class="typ-punct">:</span> <span class="typ-key">if</span> day<span class="typ-punct">.</span>weather <span class="typ-op">==</span> <span class="typ-str">&quot;sunny&quot;</span> <span class="typ-punct">{</span>
            yellow
          <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
            aqua
          <span class="typ-punct">}</span><span class="typ-punct">,</span>
          <span class="typ-func">align</span><span class="typ-punct">(</span>
            bottom <span class="typ-op">+</span> right<span class="typ-punct">,</span>
            <span class="typ-func">strong</span><span class="typ-punct">(</span>day<span class="typ-punct">.</span>weather<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">6pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">22pt</span><span class="typ-punct">,</span> baseline<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">temperature</span> °<span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">unit</span>
      <span class="typ-punct">]</span>

      <span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;monday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      <span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;tuesday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/4f910fc4831ce7d7e4b6e66d91f459aa.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>Path to a JSON file.</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - json
      name: decode
      title: Decode JSON
      keywords: []
      oneliner: Reads structured data from a JSON string/bytes.
      element: false
      details: <p>Reads structured data from a JSON string/bytes.</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>JSON data.</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - json
      name: encode
      title: Encode JSON
      keywords: []
      oneliner: Encodes structured data into a JSON string.
      element: false
      details: <p>Encodes structured data into a JSON string.</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>Value to be encoded.</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: pretty
        details: <p>Whether to pretty print the JSON with newlines and indentation.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
