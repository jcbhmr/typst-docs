route: /docs/reference/data-loading/json/
title: JSON
description: '`json` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode JSON
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode JSON
    children:
    - id: definitions-encode-value
      name: value
      children: []
    - id: definitions-encode-pretty
      name: pretty
      children: []
body:
  kind: func
  content:
    path: []
    name: json
    title: JSON
    keywords: []
    oneliner: Reads structured data from a JSON file.
    element: false
    details: |-
      <p>从 JSON 文件读取结构化数据。</p>
      <p>文件必须包含有效的 JSON 对象或数组。
      JSON 对象将被转换为 Typst 字典，JSON 数组将转换为 Typst 数组。
      字符串和布尔值将被转换为相应的 Typst 类型值。
      <code>null</code> 将被转换为 <code><span class=“typ-key”>none</span></code>。
      数字将根据是否为整数转化为浮点值或整数值。</p>
      <p>该函数将返回一个字典或一个数组，这具体取决于读取的 JSON 文件。</p>
      <p>示例中的 JSON 文件为一个包含 <code>temperature</code>、<code>unit</code> 和 <code>weather</code> 键值的对象。</p>
      <h2 id="example">举例</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">forecast</span><span class="typ-punct">(</span>day<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">block</span><span class="typ-punct">[</span>
        <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
          fill<span class="typ-punct">:</span> <span class="typ-key">if</span> day<span class="typ-punct">.</span>weather <span class="typ-op">==</span> <span class="typ-str">&quot;sunny&quot;</span> <span class="typ-punct">{</span>
            yellow
          <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
            aqua
          <span class="typ-punct">}</span><span class="typ-punct">,</span>
          <span class="typ-func">align</span><span class="typ-punct">(</span>
            bottom <span class="typ-op">+</span> right<span class="typ-punct">,</span>
            <span class="typ-func">strong</span><span class="typ-punct">(</span>day<span class="typ-punct">.</span>weather<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">6pt</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">22pt</span><span class="typ-punct">,</span> baseline<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
        <span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">temperature</span> °<span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">unit</span>
      <span class="typ-punct">]</span>

      <span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;monday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      <span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;tuesday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/4f910fc4831ce7d7e4b6e66d91f459aa.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>JSON 文件路径。</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - json
      name: decode
      title: Decode JSON
      keywords: []
      oneliner: Reads structured data from a JSON string/bytes.
      element: false
      details: <p>从 JSON 字符串/字节流中读取结构化数据。</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>JSON 数据。</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - json
      name: encode
      title: Encode JSON
      keywords: []
      oneliner: Encodes structured data into a JSON string.
      element: false
      details: <p>将结构化数据编码为 JSON 字符串。</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>被编码的值。</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: pretty
        details: <p>是否使用换行和缩进格式化输出的 JSON 字符串。</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
