route: /docs/reference/data-loading/toml/
title: TOML
description: '`toml` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode TOML
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode TOML
    children:
    - id: definitions-encode-value
      name: value
      children: []
    - id: definitions-encode-pretty
      name: pretty
      children: []
body:
  kind: func
  content:
    path: []
    name: toml
    title: TOML
    keywords: []
    oneliner: Reads structured data from a TOML file.
    element: false
    details: |-
      <p>Reads structured data from a TOML file.</p>
      <p>The file must contain a valid TOML table. TOML tables will be converted into
      Typst dictionaries, and TOML arrays will be converted into Typst arrays.
      Strings, booleans and datetimes will be converted into the Typst equivalents
      and numbers will be converted to floats or integers depending on whether
      they are whole numbers.</p>
      <p>The TOML file in the example consists of a table with the keys <code>title</code>,
      <code>version</code>, and <code>authors</code>.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> details <span class="typ-op">=</span> <span class="typ-func">toml</span><span class="typ-punct">(</span><span class="typ-str">&quot;details.toml&quot;</span><span class="typ-punct">)</span>

      Title: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">title</span> <span class="typ-escape">\</span>
      Version: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">version</span> <span class="typ-escape">\</span>
      Authors: <span class="typ-punct">#</span><span class="typ-punct">(</span>details<span class="typ-punct">.</span>authors
        <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">,</span> last<span class="typ-punct">:</span> <span class="typ-str">&quot; and &quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/94bf7412649fc73ad01a82fc082678c7.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>Path to a TOML file.</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - toml
      name: decode
      title: Decode TOML
      keywords: []
      oneliner: Reads structured data from a TOML string/bytes.
      element: false
      details: <p>Reads structured data from a TOML string/bytes.</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>TOML data.</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - toml
      name: encode
      title: Encode TOML
      keywords: []
      oneliner: Encodes structured data into a TOML string.
      element: false
      details: <p>Encodes structured data into a TOML string.</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>Value to be encoded.</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: pretty
        details: <p>Whether to pretty-print the resulting TOML.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
