route: /docs/reference/data-loading/toml/
title: TOML
description: '`toml` 函数的文档'
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-path
    name: path
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-decode
    name: Decode TOML
    children:
    - id: definitions-decode-data
      name: data
      children: []
  - id: definitions-encode
    name: Encode TOML
    children:
    - id: definitions-encode-value
      name: value
      children: []
    - id: definitions-encode-pretty
      name: pretty
      children: []
body:
  kind: func
  content:
    path: []
    name: toml
    title: TOML
    keywords: []
    oneliner: Reads structured data from a TOML file.
    element: false
    details: |-
      <p>从 TOML 文件读取结构化数据。</p>
      <p>文件必须包含有效的 TOML 表。
      TOML 表将被转换为 Typst 字典，TOML 数组将被转换为 Typst 数组。
      字符串、布尔值和日期时间将被转换为相应的 Typst 类型值。
      数字将根据是否为整数转化为浮点值或整数值。</p>
      <p>示例中的 TOML 文件为一个带有 <code>title</code>，<code>version</code> 和 <code>authors</code> 键值的表。</p>
      <h2 id="example">举例</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> details <span class="typ-op">=</span> <span class="typ-func">toml</span><span class="typ-punct">(</span><span class="typ-str">&quot;details.toml&quot;</span><span class="typ-punct">)</span>

      Title: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">title</span> <span class="typ-escape">\</span>
      Version: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">version</span> <span class="typ-escape">\</span>
      Authors: <span class="typ-punct">#</span><span class="typ-punct">(</span>details<span class="typ-punct">.</span>authors
        <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">,</span> last<span class="typ-punct">:</span> <span class="typ-str">&quot; and &quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/94bf7412649fc73ad01a82fc082678c7.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: path
      details: <p>TOML 文件路径。</p>
      example: null
      types:
      - str
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: false
      settable: false
    returns:
    - any
    scope:
    - path:
      - toml
      name: decode
      title: Decode TOML
      keywords: []
      oneliner: Reads structured data from a TOML string/bytes.
      element: false
      details: <p>从 TOML 字符串/字节流读取结构化数据。</p>
      example: null
      self: false
      params:
      - name: data
        details: <p>TOML 数据。</p>
        example: null
        types:
        - str
        - bytes
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - any
      scope: []
    - path:
      - toml
      name: encode
      title: Encode TOML
      keywords: []
      oneliner: Encodes structured data into a TOML string.
      element: false
      details: <p>将结构化数据编码为 TOML 字符串。</p>
      example: null
      self: false
      params:
      - name: value
        details: <p>被编码的值。</p>
        example: null
        types:
        - any
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: pretty
        details: <p>是否结构化输出编码后的 TOML 字符串</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - str
      scope: []
children: []
